af90dc2d9b68a38f1155f9123283e0b8|file:///Users/ring/a.py|2|1|V|python
	    ring =1;
7d4c8920c60419aaee9cd47c9a0396f7|file:///Users/ring/a.py|2|11|^v|python
	;
	;
	;
	;
c443dbea698399e1aa5fe91c5f3cc3b4|file:///Users/ring/a.py|6|1|V|python
	    a = 1
80c19dc3f25d501bbe1e882b192d573e|file:///Users/ring/.vimrc|172|177|v|vim
	, 'coc-rename',
d163d31a6df41ab5c3628f543d50d777|file:///Users/ring/.vimrc|142|1|V|vim
	function! s:check_back_space() abort
	  let col = col('.') - 1
	  return !col || getline('.')[col - 1]  =~# '\s'
	endfunction
81d5c3deaf3b07a9e7957c4ecaee7326|file:///Users/ring/.vimrc|37|1|V|vim
	set autochdir
e012dbab62287e87d419182fbe707bef|file:///Users/ring/.vimrc|38|1|V|vim
	(sdfdsf
6e981d3075a85084c7886eee4f554f5e|file:///Users/ring/.vimrc|37|1|V|vim
	set showmatch
96e3daf6082d78ad5cbb44b03496e931|file:///Users/ring/.vimrc|221|9|v|vim
	python, C#, javascrip, PHP, etc
1d549cc2a0a8119272a8e0af3624e09f|file:///Users/ring/.vimrc|169|1|V|vim
	nmap <leader>rn <Plug>(coc-rename)
dbd91461afd2f24edbfab422c6bbc0ca|file:///Users/ring/.vimrc|171|45|V|vim
	" Highlight symbol under cursor on CursorHold
	autocmd CursorHold * silent call CocActionAsync('highlight')
ce3f372a94d179db0a781f6d6df6f98c|file:///Users/ring/a.py|1|12|v|python
	<++>
9947c5c09e37e24f6b483b486969f68a|file:///Users/ring/a.py|2|1|V|python
	
	def 
a2c94bc9aef896af19017c5be52951f3|file:///Users/ring/a.py|3|1|V|python
	    ring = 0
77eaf8ef3e0a6ff06b17ee3eb7e3e188|file:///Users/ring/.vimrc|168|1|V|vim
	let g:python_highlight_all = 1
bc6d6a3c1d41c435809f7dc0e3f0daa9|file:///Users/ring/.vimrc|164|1|V|vim
	"************************
	"*Part: python syntax
	"*Desc:  
185f278d9fbc98f26655b175ff661d7d|file:///Users/ring/.vimrc|164|1|V|vim
	"************************
4c41c0716998a019fee5c6a1025f03f0|file:///Users/ring/.vimrc|102|1|V|vim
	    elseif &filetype == 'python'
	        exec 'terminal time python %'
23eeeb4347bdd26bfc6b7ee9a3b755dd|file:///Users/ring/.vimrc|104|26|v|vim
	python
06e519fde59b26b5a46269140ff5987a|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|14|9|v|cpp
	int n
9d2cd33614b468ea3b6d2aed7f6c81b9|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|26|5|V|cpp
	    stack<int>s;
0cf31b2c283ce3431794586df7b0996d|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|33|4|V|cpp
	    
198e0b4b83b50c27ba97c269a8713109|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|36|9|V|cpp
	        int t = 
612e538998ee2b78b19118873d1eeeef|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|44|13|V|cpp
	        while(s.empty()){
	            i
426e0844d6c9b02d258b864793dcee6b|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|44|9|V|cpp
	        }<++>
0bddf3b8708c77d35f9afc6ac05783b2|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|38|13|V|cpp
	            t = i;
72de990f950ea4550af1bde962dee0a5|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|2|1|V|cpp
	#include<iostream>
2c4e7d4a1bf3b1f5604b9c2617db69ce|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<bits/stdc++.h>
	using namespace std;
	
	void build(int e);
	void dfs(int n);
	void bfs(int n);
	
	int set[11][11] = {0};
	
	
	int main(){
	    int n,e;
	    scanf("%d %d",&n,&e);
	    build(e);
	    dfs(n);
	    bfs(n);
	
	
	    return 0;
	}
	
	
	void build(int e){
	    int i,j;
	    while(e--){
	        scanf("%d %d",&i,&j);
	        set[i][j] = set[j][i]=1;
	    }
	}
	
	void bfs(int n){
	    stack<int>s;
	    pa[11] = {0};
	    int t;
	    for(int k=0;k<n;k++){
	        for(int i=0;i<n;i++){
	            for(int j=i+1;j<n;j++){
	                if(set[i][j]==1&&pa[j]==0){
	                    pa[i] = pa[j] = -1;
	                    s.push(j);
	                }
	            }
	            if(!s.empty()){
	                i=s.top();
	                cout<<i;
	            }else break ;
	        }
	    }
	}
	
	
	
0d6a549a7d7ab2b3d005c852812783be|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|32|1|v|cpp
	void bfs(int n){
	    stack<int>s;
	    pa[11] = {0};
	    int t;
	    for(int k=0;k<n;k++){
	        for(int i=0;i<n;i++){
	            for(int j=i+1;j<n;j++){
	                if(set[i][j]==1&&pa[j]==0){
	                    pa[i] = pa[j] = -1;
	                    s.push(j);
	                }
	            }
	            if(!s.empty()){
	                i=s.top();
	                cout<<i;
	            }else break ;
	        }
	    }
	}
	
	
	
c04dcce31fe9fbef3dc325b352ca2ae8|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|18|1|V|cpp
	    bfs(n);
2b74fa0f4fceb45a0eedbaf96e72302f|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|2|1|V|cpp
	#include<bits/stdc++.h>
f60be50875ede180e993ae30bf30e846|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|2|1|V|cpp
	using namespace std;
aa3882086a4f05967a460498b73ab776|file:///Users/ring/.vimrc|90|1|V|vim
	noremap <LEADER><LEADER> f<++>
5eb606f06693aa27c58b648892a5784a|file:///Users/ring/.vimrc|85|9|V|vim
	"*Desc:  
	"************************
	" open a terminal window
	noremap <LEADER>/ :terminal<CR>
	" to next <++>
56996935745a97632842aada0ff35d5d|file:///Users/ring/.vimrc|86|25|V|vim
	"************************
	" open a terminal window
	noremap <LEADER>/ :terminal<CR>
	" to next <++>
	map <LEADER><LEADER> <Esc>/<++><CR>:nohlsearch<CR>c4i
235e210fdf4ca61a0c9a1f1421d5ac71|file:///Users/ring/.vimrc|86|25|V|vim
	"************************
	" open a terminal window
	noremap <LEADER>/ :terminal<CR>
	" to next <++>
	map <LEADER><LEADER> <Esc>/<++><CR>:nohlsearch<CR>c4j
971b309624d4ada9c292c13a5fa95687|file:///Users/ring/.vimrc|89|7|v|vim
	ext 
1ffa6afae980d20b989794057fdf02ce|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|56|4|V|cpp
	    
	
b57480ca0bd379dcf3ecca476d3db6bc|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|56|1|V|cpp
	
	    for(int i=0;i<n;i++){
86eb9ba8673a49e67fcd56c609ed6771|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|64|23|V|cpp
	        while(rear!=font){
	            ar[++rear]=i;
4e1ddba1c31545ee09fb38ae1fd79346|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|64|9|V|cpp
	        }
99854efb088d0b16d35904f42dab5602|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|73|1|V|cpp
	            if(!ar[j]&&set[i][j]){
	                ar[j] = 1;
	                queue[++rear] = j;
	            }
87e54d5fa0289118d9f3013d3bef3326|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|77|1|V|cpp
	            if(!ar[j]&&set[i][j]){
	                ar[j] = 1;
	                queue[++rear] = j;
	            }
	            if(!ar[j]&&set[queue[++font]][j]){
	                printf("%d",j);
	            }
067e279281a4c2ca828c0756397ec60d|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|73|1|V|cpp
	                    printf("%d ",queue.[++font]);
cc8d6bf83b7f00d44c633722094699db|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|70|1|V|cpp
	                if(!ar[j]&&set[i][j]){
	                    ar[j] = 1;
	                    queue[++rear] = j;
	                }
4037578322e3c452419cf17a6f5a456c|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|66|9|V|cpp
	        for(int j=i+1;j<n;j++){
70f3e156d115ec02362dec89c21a69d4|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|67|13|V|cpp
	            printf("{ %d ",i);
df39dc6df9805b421c907ae63695db0f|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|75|17|V|cpp
	                printf("%d ",queue[++font]);
c154d19a335ad63b52491c17d485b69a|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	void build(int e);
	void dfs(int n);
	void bfs(int n);
	
	int set[11][11] = {0};
	int visited[11] = {0};
	
	
	int main(){
	    int n,e;
	    scanf("%d %d",&n,&e);
	    build(e);
	    dfs(n);
	    bfs(n);
	
	
	    return 0;
	}
	
	
	void build(int e){
	    int i,j;
	    while(e--){
	        scanf("%d %d",&i,&j);
	        set[i][j] = set[j][i]=1;
	    }
	}
	
	
	
	void dfsP(int i,int n){
	    visited[i] = 1;
	    printf("%d ",i);
	    for(int j=i;j<n;j++){
	        if(!visited[j]&&set[i][j]){
	            dfsP(j,n);
	        }
	    }
	}
	
	void dfs(int n){
	    for(int i=0;i<n;i++){
	        if(!visited[i]){
	            printf("{ ");
	            dfsP(i,n);
	            printf("}\n");
	        }
	    }
	}
	
	
	void bfs(int n){
	    int *ar = (int*)malloc(sizeof(int)*n);
	    int font=-1,rear=-1;
	    int queue[11] = {0};
	
	    for(int i=0;i<n;i++){
	        ar[i]=0;
	    }
	
	    for(int i=0;i<n;i++){
	        if(!ar[i]){
	            queue[++rear] = i;
	            printf("{ ");
	            while(font<rear){
	                printf("%d ",queue[++font]);
	                for(int j=queue[font];j<n;j++){
	                    if(!ar[j]&&set[queue[font]][j]){
	                        ar[j] = 1;
	                        queue[++rear] = j;
	                    }
	                }
	            }
	            printf("}\n");
	        }
	
	    }  
	    
	}
df86b0353b78303e60538e374370a9cf|file:///Users/ring/Documents/code/c/pintia_trains/7-6_connected_set.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	void build(int e);
	void dfs(int n);
	void bfs(int n);
	
	int set[11][11] = {0};
	int visited[11] = {0};
	
	
	int main(){
	    int n,e;
	    scanf("%d %d",&n,&e);
	    build(e);
	    dfs(n);
	    bfs(n);
	
	
	    return 0;
	}
	
	
	void build(int e){
	    int i,j;
	    while(e--){
	        scanf("%d %d",&i,&j);
	        set[i][j] = set[j][i]=1;
	    }
	}
	
	
	
	void dfsP(int i,int n){
	    visited[i] = 1;
	    printf("%d ",i);
	    for(int j=i;j<n;j++){
	        if(!visited[j]&&set[i][j]){
	            dfsP(j,n);
	        }
	    }
	}
	
	void dfs(int n){
	    for(int i=0;i<n;i++){
	        if(!visited[i]){
	            printf("{ ");
	            dfsP(i,n);
	            printf("}\n");
	        }
	    }
	}
	
	
	void bfs(int n){
	    int *ar = (int*)malloc(sizeof(int)*n);
	    int font=-1,rear=-1;
	    int queue[11] = {0};
	
	    for(int i=0;i<n;i++){
	        ar[i]=0;
	    }
	
	    for(int i=0;i<n;i++){
	        if(!ar[i]){
	            queue[++rear] = i;
	            ar[i] = 1;
	            printf("{ ");
	            while(font<rear){
	                printf("%d ",queue[++font]);
	                for(int j=queue[font];j<n;j++){
	                    if(!ar[j]&&set[queue[font]][j]){
	                        ar[j] = 1;
	                        queue[++rear] = j;
	                    }
	                }
	            }
	            printf("}\n");
	        }
	
	    }  
	    
	}
587587c09af228a1a574375c98946194|file:///Users/ring/Documents/code/c/pintia_trains/teat.cpp|1|1|V|cpp
	#include<stdio.h>
	
	int main(){
	    void set(int *a);
	
	    int a[2][2];
	    a[0][1] = 1;
	    a[1][0] = 2;
	    set(&a[0][0]);
	}
	
	void set(int *a){
	    printf("%d",*(a+1));
	    printf("%d",*(a+2));
	}
d7bde40f04b47acfe40ef6528b1c16e6|file:///Users/ring/Documents/code/c/pintia_trains/teat.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	void build(int e);
	void dfs(int n);
	void bfs(int n);
	
	int set[15][15] = {0};
	// int visited[15] = {0};
	///////
	
	#define MAXVEX 15
	void DFS( int i);
	void DFSTraverse();
	void BFSTraverse();
	
	int G[MAXVEX][MAXVEX],Nv,Ne;
	int visited[MAXVEX];
	
	
	int main(){
	    int n,e;
	    scanf("%d %d",&n,&e);
	    build(e);
	    // dfs(n);
	    // bfs(n);
	    DFSTraverse();
	    BFSTraverse();
	
	    return 0;
	}
	
	
	void build(int e){
	    int i,j;
	    while(e--){
	        scanf("%d %d",&i,&j);
	        G[i][j] = G[j][i]=1;
	    }
	}
	
	
	
	void dfsP(int i,int n){
	    visited[i] = 1;
	    printf("%d ",i);
	    for(int j=i;j<n;j++){
	        if(!visited[j]&&set[i][j]){
	            dfsP(j,n);
	        }
	    }
	}
	
	void dfs(int n){
	    for(int i=0;i<n;i++){
	        if(!visited[i]){
	            printf("{ ");
	            dfsP(i,n);
	            printf("}\n");
	        }
	    }
	}
	
	/////
	
	void DFS( int i)
	{
	    int j;
	
	    visited[i] = 1;
	    printf("%d ",i);
	    for( j=0; j<Nv; j++)
	    {
	        if( G[i][j] && !visited[j])
	        {
	            //如果存在ij之间的连线且j并未被访问过
	            DFS (j);
	        }
	    }
	}
	void DFSTraverse( )
	{
	    int i;
	
	    for( i=0; i<Nv; i++)
	    {
	        visited[i] = 0;  //初始化访问矩阵
	    }
	    for ( i=0; i<Nv; i++)
	    {
	        if( !visited[i])
	        {
	            printf("{ ");
	            DFS(i);
	            printf("}\n");
	        }
	    }
	}
	void BFSTraverse( )
	{
	    int q[MAXVEX]={0};  //用数组表示队列
	    int rear=-1,front=-1;
	    int i,j;
	    int temp;
	
	    for( i=0; i<Nv; i++)
	    {
	        visited[i] = 0;
	    }
	
	    for( i=0; i<Nv; i++){
	        if( !visited[i]){
	            printf("{ ");
	            visited[i] =1;
	            q[++rear] = i;  //入队
	            while( front<rear ){   //判断队列是否为空
	                temp =q[++front];  //出队
	                printf("%d ",temp);
	                for( j=0; j<Nv;j++){
	                    if( G[temp][j] && !visited[j]){
	                        visited[j] = 1;
	                        q[++rear] = j;
	                    }
	                }
	            }
	            printf("}\n");
	        }
	    }
	
	}
	
	
	
	
	
	
	
	void bfs(int n){
	    int *ar = (int*)malloc(sizeof(int)*n);
	    int front=-1,rear=-1;
	    int queue[11] = {0};
	    int temp;
	    
	    for(int i=0;i<n;i++){
	        ar[i]=0;
	    }
	
	
	    // int i,j;
	    // for( i=0; i<n; i++){
	    //     if( !ar[i]){
	    //         printf("{ ");
	    //         ar[i] =1;
	    //         q[++rear] = i;  //入队
	    //         while( front<rear ){   //判断队列是否为空
	    //             temp =q[++front];  //出队
	    //             printf("%d ",temp);
	    //             for( j=0; j<n;j++){
	    //                 if( set[temp][j] && !ar[j]){
	    //                     ar[j] = 1;
	    //                     q[++rear] = j;
	    //                 }
	    //             }
	    //         }
	    //         printf("}\n");
	    //     }
	    // }
	    for(int i=0;i<n;i++){
	        if(!ar[i]){
	            queue[++rear] = i;
	            ar[i] = 1;
	            printf("{ ");
	            while(front<rear){
	                printf("%d ",queue[++front]);
	                for(int j=queue[front];j<n;j++){
	                    if(!ar[j]&&set[queue[front]][j]){
	                        ar[j] = 1;
	                        queue[++rear] = j;
	                    }
	                }
	            }
	            printf("}\n");
	        }
	
	    }  
	    
	}
	
ed657ebc902016666eed552f12c16624|file:///Users/ring/Documents/code/c/pintia_trains/teat.cpp|32|1|V|cpp
	void build(){
	    int i,j;
	    scanf("%d %d",&Nv,&Ne);
	    int e = Ne;
	    for( i=0; i<Nv; i++)
	    {
	        for( j=0; j<Nv; j++)
	        {
	            set[i][j] = 0;  //初始化
	        }
	    }
	    while(e--){
	        scanf("%d %d",&i,&j);
	        G[i][j] = G[j][i]=1;
	    }
	}
3326c957ea56e5ac1c6b55a55cb53d8d|file:///Users/ring/Documents/code/c/pintia_trains/teat.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	void build();
	void dfs(int n);
	void bfs(int n);
	
	int set[15][15] = {0};
	// int visited[15] = {0};
	///////
	
	#define MAXVEX 15
	void DFS( int i);
	void DFSTraverse();
	void BFSTraverse();
	
	int G[MAXVEX][MAXVEX],Nv,Ne;
	int visited[MAXVEX];
	
	
	int main(){
	    int n,e;
	    
	    build();
	    dfs(Nv);
	    bfs(n);
	
	    return 0;
	}
	
	
	void build(){
	    int i,j;
	    scanf("%d %d",&Nv,&Ne);
	    int e = Ne;
	    for( i=0; i<Nv; i++)
	    {
	        for( j=0; j<Nv; j++)
	        {
	            set[i][j] = 0;  //初始化
	        }
	    }
	    while(e--){
	        scanf("%d %d",&i,&j);
	        G[i][j] = G[j][i]=1;
	    }
	}
	
	
	
	void dfsP(int i,int n){
	    visited[i] = 1;
	    printf("%d ",i);
	    for(int j=i;j<n;j++){
	        if(!visited[j]&&set[i][j]){
	            dfsP(j,n);
	        }
	    }
	}
	
	void dfs(int n){
	    for(int i=0;i<n;i++){
	        if(!visited[i]){
	            printf("{ ");
	            dfsP(i,n);
	            printf("}\n");
	        }
	    }
	}
	
	/////
	
	void DFS( int i)
	{
	    int j;
	
	    visited[i] = 1;
	    printf("%d ",i);
	    for( j=0; j<Nv; j++)
	    {
	        if( G[i][j] && !visited[j])
	        {
	            //如果存在ij之间的连线且j并未被访问过
	            DFS (j);
	        }
	    }
	}
	void DFSTraverse( )
	{
	    int i;
	
	    for( i=0; i<Nv; i++)
	    {
	        visited[i] = 0;  //初始化访问矩阵
	    }
	    for ( i=0; i<Nv; i++)
	    {
	        if( !visited[i])
	        {
	            printf("{ ");
	            DFS(i);
	            printf("}\n");
	        }
	    }
	}
	void BFSTraverse( )
	{
	    int q[MAXVEX]={0};  //用数组表示队列
	    int rear=-1,front=-1;
	    int i,j;
	    int temp;
	
	    for( i=0; i<Nv; i++)
	    {
	        visited[i] = 0;
	    }
	
	    for( i=0; i<Nv; i++){
	        if( !visited[i]){
	            printf("{ ");
	            visited[i] =1;
	            q[++rear] = i;  //入队
	            while( front<rear ){   //判断队列是否为空
	                temp =q[++front];  //出队
	                printf("%d ",temp);
	                for( j=0; j<Nv;j++){
	                    if( G[temp][j] && !visited[j]){
	                        visited[j] = 1;
	                        q[++rear] = j;
	                    }
	                }
	            }
	            printf("}\n");
	        }
	    }
	
	}
	
	
	
	
	
	
	
	void bfs(int n){
	    int *ar = (int*)malloc(sizeof(int)*n);
	    int front=-1,rear=-1;
	    int queue[11] = {0};
	    int temp;
	    
	    for(int i=0;i<n;i++){
	        ar[i]=0;
	    }
	
	
	    // int i,j;
	    // for( i=0; i<n; i++){
	    //     if( !ar[i]){
	    //         printf("{ ");
	    //         ar[i] =1;
	    //         q[++rear] = i;  //入队
	    //         while( front<rear ){   //判断队列是否为空
	    //             temp =q[++front];  //出队
	    //             printf("%d ",temp);
	    //             for( j=0; j<n;j++){
	    //                 if( set[temp][j] && !ar[j]){
	    //                     ar[j] = 1;
	    //                     q[++rear] = j;
	    //                 }
	    //             }
	    //         }
	    //         printf("}\n");
	    //     }
	    // }
	    for(int i=0;i<n;i++){
	        if(!ar[i]){
	            queue[++rear] = i;
	            ar[i] = 1;
	            printf("{ ");
	            while(front<rear){
	                printf("%d ",queue[++front]);
	                for(int j=queue[front];j<n;j++){
	                    if(!ar[j]&&set[queue[front]][j]){
	                        ar[j] = 1;
	                        queue[++rear] = j;
	                    }
	                }
	            }
	            printf("}\n");
	        }
	
	    }  
	    
	}
	
812f299e57b2e97a1ab3e3e6c9ef2218|file:///Users/ring/Documents/code/c/pintia_trains/teat.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	void build();
	void dfs(int n);
	void bfs(int n);
	
	int set[15][15] = {0};
	int visited[15] = {0};
	
	
	#define MAXVEX 15
	
	int Nv,Ne;
	
	int main(){
	    int n,e;
	    // scanf("%d %d",&n,&e);
	    build();
	    dfs(n);
	    bfs(n);
	    
	
	    return 0;
	}
	
	
	void build(){
	    //用邻接矩阵表示图
	    int i,j;
	    int v1,v2;
	    scanf("%d %d",&Nv,&Ne);
	    for( i=0; i<Nv; i++)
	    {
	        for( j=0; j<Nv; j++)
	        {
	            set[i][j] = 0;  //初始化
	        }
	    }
	    for( i=0; i<Ne; i++)  //注意这里是读入边
	    {
	        scanf("%d %d",&v1,&v2);
	        set[v1][v2] = 1;
	        set[v2][v1]= set[v1][v2];  //无向图对称
	    }
	}
	
	
	
	
	void dfsP(int i,int n){
	    visited[i] = 1;
	    printf("%d ",i);
	    for(int j=i;j<n;j++){
	        if(!visited[j]&&set[i][j]){
	            dfsP(j,n);
	        }
	    }
	}
	
	void dfs(int n){
	    for(int i=0;i<n;i++){
	        if(!visited[i]){
	            printf("{ ");
	            dfsP(i,n);
	            printf("}\n");
	        }
	    }
	}
	
	
	void bfs(int n){
	    int *ar = (int*)malloc(sizeof(int)*n);
	    int font=-1,rear=-1;
	    int queue[11] = {0};
	
	    for(int i=0;i<n;i++){
	        ar[i]=0;
	    }
	
	    for(int i=0;i<n;i++){
	        if(!ar[i]){
	            queue[++rear] = i;
	            ar[i] = 1;
	            printf("{ ");
	            while(font<rear){
	                printf("%d ",queue[++font]);
	                for(int j=queue[font];j<n;j++){
	                    if(!ar[j]&&set[queue[font]][j]){
	                        ar[j] = 1;
	                        queue[++rear] = j;
	                    }
	                }
	            }
	            printf("}\n");
	        }
	
	    }  
	    
	}
	
aa534851f4033c63968d3372117a4466|file:///Users/ring/.vimrc|100|1|V|vim
	   "************************
5daa30e3f114078e9342dc58f4cd31a1|file:///Users/ring/.vimrc|92|1|^v|vim
	        
	        
	        
	        
	        
	        
	        
	        
2d4b220137f785b1d6af69fa17337d72|file:///Users/ring/.vimrc|92|2|v|vim
	 you can 
fb883ad0027ffd73f41b3c7e22b06870|file:///Users/ring/.vimrc|96|3|V|vim
	  set backup
06a3217b475554052b468e4990916111|file:///Users/ring/.vimrc|17|1|V|vim
	set ruler
28624dd3b638eeb5ce12ea57d9818d06|file:///Users/ring/.vim/shot_cut_source/python_short_cut.vim|1|1|V|vim
	autocmd Filetype python inoremap ,f <Esc>/<++><CR>:nohlsearch<CR>c4l
	autocmd Filetype python inoremap ,( ()<++><Esc>F)i
	autocmd Filetype python inoremap ,[ []<++><Esc>F]i
	autocmd Filetype python inoremap ," ""<++><Esc>F"i
	autocmd Filetype python inoremap ,' ''<++><Esc>F'i
	autocmd Filetype python inoremap ,< <><++><Esc>F>i
	
e048deb181177969e6b11216f3ae3091|file:///Users/ring/.vim/.vimrc|14|1|V|vim
	source ~/.vim/shot_cut_source/golang_short_cut.vim
85379ef507f0ab8a5043fe3f80e797a3|file:///Users/ring/.vim/.vimrc|14|1|V|vim
	source ~/.vim/shot_cut_source/python_short_cut.vim
49dfecbab65e133971e92bcd7c07cb9a|file:///Users/ring/.vim/.vimrc|13|31|v|vim
	pp_short_cut
84d1eeb92b8a6e03247681c92eda76b7|file:///private/tmp/zshbLPoyR|1|1|V|zsh
	you-get -o ~/var/tem "https://www.bilibili.com/video/av65528947"
a184e4dbe78973e40f940478a4bce932|file:///private/tmp/zshXpqky1|1|1|V|zsh
	dd
aed02978874cd1d5fa65b25b5cc09574|file:///Users/ring/.zshrc|43|1|^v|zsh
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
a640fa169dd38fc1f8ce81a171687757|file:///Users/ring/.zshrc|42|1|V|zsh
	bindkey '<tab>' history-incremental-search-backward
3b7bc24e6e95303106508f0d358fa945|file:///Users/ring/a.java|1|1|V|java
	// // // // package ring
ef7296877313f6b5d7bd6bf49829d7a6|file:///Users/ring/a.java|1|1|V|java
	{package ring}
b2e05c4a9b2e07362f54c6a33b4788bc|file:///Users/ring/a.java|1|1|V|java
	(public static class a{)
3076133990b492f1db618b6ed883f655|file:///Users/ring/a.java|1|5|V|java
	    (public static ())
86ee2ba55aa03b06900298d3c1884440|file:///Users/ring/Documents/code/c/pintia_trains/7-7_six_degrees_of_space.cpp|35|9|v|cpp
	int 
ad55ea39a130a3b4ee73011b10da589b|file:///Users/ring/Documents/code/c/pintia_trains/7-7_six_degrees_of_space.cpp|39|21|V|cpp
	                    set
32c6ca8b555ce4420e315d433dc9f19d|file:///Users/ring/Documents/code/c/pintia_trains/7-7_six_degrees_of_space.cpp|38|20|v|cpp
	set[i][j]>set[i][k]+set[k][j]
c793fb08d36c8c628246f760e8340145|file:///Users/ring/Documents/code/c/pintia_trains/7-7_six_degrees_of_space.cpp|13|5|V|cpp
	    for
87c60070eac3838d715ef1e7450b672f|file:///Users/ring/Documents/code/c/pintia_trains/7-7_six_degrees_of_space.cpp|16|1|V|cpp
	    for(int i=0;i<n;i++){
	        for(int j=0;j<n;j++){
	            printf("%d ",set[i][j]);
	        }
	        printf("\n");
	    }
2b72399a02e7b9c36517d62b90e7531e|file:///Users/ring/Documents/code/c/pintia_trains/7-7_six_degrees_of_space.cpp|15|13|V|cpp
	            printf("%d ",set[i][j]);
a2cd506b6f2e7421ab257c81e927455e|file:///Users/ring/Documents/code/c/pintia_trains/7-7_six_degrees_of_space.cpp|17|9|V|cpp
	        printf("\n");
4b98caf9c9183d43cdd0eb89f875417a|file:///Users/ring/Documents/code/c/pintia_trains/7-7_six_degrees_of_space.cpp|1|1|V|cpp
	#include<stdio.h>
	
	
	int set[1001][1001];
	int cnt[1001] = {0};
	
	void build(int m);
	void floyed(int n);
	
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    for(int i=0;i<=n;i++){
	        for(int j=0;j<=n;j++){
	            set[i][j]=99999;
	        }
	    }
	    build(m);
	    floyed(n);
	
	    for(int i=1;i<=n;i++){
	        printf("%d: ",i);
	        int sum=0;
	        for(int j=1;j<=n;j++){
	            if(set[i][j]<=6) sum++;
	        }
	        printf("%.2f%\n",double(sum)/n*100);
	    }
	
	
	    return 0;
	}
	
	
	void build(int m){
	    int i,j;
	    while(m--){
	        scanf("%d %d",&i,&j);
	        set[i][j]=set[j][i]=1;
	    }
	}
	
	
	void floyed(int n){
	    int i,j,k;
	    for(k=1;k<=n;k++){
	        for(i=1;i<=n;i++){
	            for(j=1;j<=n;j++){
	                if(i==j) set[i][j] =0;
	                else if(set[i][j]>set[i][k]+set[k][j]){
	                    set[i][j]=set[i][k]+set[k][j];
	                }
	            }
	        }
	    }
	}
9e575dd1c8fd6027c2ed2237e89d0b65|file:///Users/ring/.vimrc|272|1|V|vim
	"Plug 'plytophogy/vim-virtualenv', { 'for' :['python', 'vim-plug'] }
195fec22303c63b13f238807f2d9358c|file:///Users/ring/.vimrc|271|1|V|vim
	"Plug 'vim-scripts/indentpython.vim', { 'for' :['python', 'vim-plug'] }
d559275d77160ad9ad5e90b52940b733|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|31|15|V|cpp
	              printf("%d ",set[i][j]);
f97a602ab21e893fc4fddf95f98bed05|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|32|21|V|cpp
	                    set[i][j]
56c6705031c1ffe1cb52a63d9421f468|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|35|13|V|cpp
	            printf("\n");
b37fc15c38e1e337670943327e5e7015|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|44|1|V|cpp
	    printf("%d %d %d",tar,tar2,set[tar][tar2]);
a1116c8ce13af07500a658a192ad4284|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|29|5|V|cpp
	    int max=0,tar,tar2;
1882e5f867e6cff8b833d450435ba3c1|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|45|9|V|cpp
	        ff
044a60ecac1b97ae514761c2b544727a|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|34|1|V|cpp
	                    if(set[i][j]>max){
	                        max = set[i][j];
	                        tar = i;
	                        tar2 = j;
	                    }
d5e34f79b16efc8373c1960245e8fc93|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|48|25|v|cpp
	,int i=1
38973ceb5682d647240d7a456db94390|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|33|20|v|cpp
	set[i][k]!=0&&set[k][j]!=0&&
c990e498708866bd41cbeac291a5ff90|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|31|1|V|cpp
	        for(int i=1;i<=n;i++){
	            for(int j=1;j<=n;j++){
	                if(set[i][k]!=0&&set[k][j]!=0&&set[i][j]>set[i][k]+set[k][j]){
	                    set[i][j] = set[i][k]+set[k][j];
	                }
	            }
	        }
8bb4cf71b98cb5c058dcbf417bbba0ce|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|30|1|^v|cpp
	        
	        
	        
	        
	        
	        
	        
8beb08fd7e764f90da56cd8f16d71b6d|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|32|1|V|cpp
	            if(set[i][k]!=0&&set[k][j]!=0&&set[i][j]>set[i][k]+set[k][j]){
	                set[i][j] = set[i][k]+set[k][j];
	            }
3f7a14076902f3a32566332fe0af96f1|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|30|1|V|cpp
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            set[i][j]=9999;
	        }
	    }
86ec1023c78b1b256a05809f23d14e67|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|31|1|V|cpp
	        printf("%d \n",set[i][j]);
456168e833eb45b23faaec9443f7056c|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|60|16|v|cpp
	,min=max[1],tar=1
e50cdb4a889a68a0d03abfcca1bba2e2|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|56|1|V|cpp
	        printf(":%d\n",max[i]);
bc7e1ed9326062866230e16adba84dc9|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|1|1|V|cpp
	#include<stdio.h>
	
	
	int set[101][101];
	
	void creat(int n,int m);
	void select(int n);
	
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    creat(n,m);
	    select(n);
	
	    return 0;
	}
	
	
	void creat(int n,int m){
	    int i,j,a;
	
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            set[i][j]=9999;
	        }
	    }
	    while(m--){
	        scanf("%d %d %d",&i,&j,&a);
	        set[i][j]=set[j][i]=a;
	    }
	}
	
	
	void select(int n){
	    for(int k=1;k<=n;k++){
	        for(int i=1;i<=n;i++){
	            for(int j=1;j<=n;j++){
	                if(i==j)set[i][j] = 0 ;
	                else if(i!=j&&set[i][j]>set[i][k]+set[k][j]){
	                    set[i][j] = set[i][k]+set[k][j];
	                }
	            }
	        }
	    }
	
	    int max[101]={0};
	    int min,tar;
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            if(set[i][j]>max[i]){
	                max[i] = set[i][j];
	            } 
	        }
	    }
	
	    min = max[1];tar=1;
	    for(int i=1;i<=n;i++){
	        if(max[i]<min){
	            min = max[i];
	            tar = i;
	        }
	    }
	    printf("%d %d",tar,min);
	}
e862f7047f60ae2d7a431bfe0bf607fc|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|52|13|V|cpp
	            if(set[i][j]==0)<++>
bc95dfc14146aa23e43f2ea7af04d310|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|52|12|V|cpp
	            
bdd28b66e19da6e3cc7efc7d851d3f59|file:///Users/ring/Documents/code/c/pintia_trains/7-8_harry_potter.cpp|1|1|V|cpp
	#include<stdio.h>
	
	
	int set[101][101];
	
	void creat(int n,int m);
	void select(int n);
	
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    creat(n,m);
	    select(n);
	
	    return 0;
	}
	
	
	void creat(int n,int m){
	    int i,j,a;
	
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            set[i][j]=9999;
	        }
	    }
	    while(m--){
	        scanf("%d %d %d",&i,&j,&a);
	        set[i][j]=set[j][i]=a;
	    }
	}
	
	
	void select(int n){
	    for(int k=1;k<=n;k++){
	        for(int i=1;i<=n;i++){
	            for(int j=1;j<=n;j++){
	                if(i==j)set[i][j] = 0 ;
	                else if(i!=j&&set[i][j]>set[i][k]+set[k][j]){
	                    set[i][j] = set[i][k]+set[k][j];
	                }
	            }
	        }
	    }
	
	    int max[101]={0};
	    int min,tar;
	    int cnt = 0;
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            printf("%d ",set[i][j]);
	            if(set[i][j]>max[i]){
	                max[i] = set[i][j];
	            } 
	        }
	        if(max[i]==9999) cnt++;
	        printf(":%d\n",max[i]);
	    }
	    if(cnt!=n){
	        min = max[1];tar=1;
	        for(int i=1;i<=n;i++){
	            if(max[i]<min){
	                min = max[i];
	                tar = i;
	            }
	        }
	        printf("%d %d",tar,min);
	    }else printf("0");
	}
2094f81b0dbd69b3bb603a542cc789cb|file:///Users/ring/Documents/code/c/pintia_trains/7-9_travel_plan.cpp|32|5|V|cpp
	    for(int i=0)<++>
fc55ab054df2d02be77216678ef20277|file:///Users/ring/Documents/code/c/pintia_trains/7-9_travel_plan.cpp|19|1|V|cpp
	    for(int i=0;i<n;i++){
	        for(int j=0;j<n;j++){
	            set[i][j]=9999;
	        }
	        dist[i]=pay[i]=9999;
	    }
85861d77f2b76d2b986e9d9ac7baeb81|file:///Users/ring/Documents/code/c/pintia_trains/7-9_travel_plan.cpp|36|5|V|cpp
	        dist[i]=pay[i]=9999;
a78bffaa806da1dd970839d8bf3bcf60|file:///Users/ring/Documents/code/c/pintia_trains/7-9_travel_plan.cpp|34|5|V|cpp
	            set[i][j]=9999;
fc1ab561f328ab9b9222a15ac1f6dfc5|file:///Users/ring/Documents/code/c/pintia_trains/7-9_travel_plan.cpp|46|17|V|cpp
	                if()<++>
0a59b296151686dcc983d6101ddf7832|file:///Users/ring/Documents/code/c/pintia_trains/7-9_travel_plan.cpp|58|9|V|cpp
	        for(int j=0;j<n;j++){
	
35e87272aedfe79166378901dc387d81|file:///Users/ring/Documents/code/c/pintia_trains/7-9_travel_plan.cpp|51|4|V|cpp
	                    if(payset[front][j]<pay[j]){
	                        pay[j]=payset[front][j];
	                    }
548e6283d49c796c81c4628f860d2155|file:///Users/ring/Documents/code/c/pintia_trains/7-9_travel_plan.cpp|34|1|V|cpp
	    int mt=9999,mp=9999;
d21856a9962447c2ec29361cdc2e1550|file:///Users/ring/Documents/code/c/pintia_trains/7-9_travel_plan.cpp|21|1|V|cpp
	    for(int i=0;i<n;i++){
	        for(int j=0;j<n;j++){
	            set[i][j]=9999;
	            payset[i][j]=9999;
	        }
	        dist[i]=pay[i]=9999;
	    }
b98113939aa285294137dfc90a0562bf|file:///Users/ring/Documents/code/c/pintia_trains/7-9_travel_plan.cpp|68|13|V|cpp
	            payset[i][j]=9999;
ac9ba08e27dc258d2ab0ced62edf4b67|file:///Users/ring/Documents/code/c/pintia_trains/7-9_travel_plan.cpp|55|45|v|cpp
	+dist[front]
9289657765b9d931349586db8b068d00|file:///Users/ring/Documents/code/c/pintia_trains/7-9_travel_plan.cpp|57|51|v|cpp
	+pay[front]
a7c3d637bd7c6198bfb0b4a6c96081f2|file:///Users/ring/Documents/code/c/pintia_trains/7-9_travel_plan.cpp|55|1|V|cpp
	                    if(set[front][j]+dist[front]<dist[j]){
	                        dist[j]=set[front][j]+dist[front];
	                        if(payset[front][j]+pay[front]<pay[j]){
	                            pay[j]=payset[front][j]+pay[front];
	                        }
	                    }
bdfcd9d5b52121b5f37b68b4689163ff|file:///Users/ring/Documents/code/c/pintia_trains/7-9_travel_plan.cpp|62|1|V|cpp
	                        if(payset[front][j]+pay[front]<pay[j]){
	                            pay[j]=payset[front][j]+pay[front];
	                        }
0f83c2fa626654c537242e4cd2179d60|file:///Users/ring/Documents/code/c/pintia_trains/7-9_travel_plan.cpp|63|20|V|cpp
	                    }<++>
5996716cee99d19470000e8a30aa0034|file:///Users/ring/Documents/code/c/pintia_trains/7-9_travel_plan.cpp|64|1|V|cpp
	                            pay[j]=payset[front][j]+pay[front];
2525e321883dd2f248abbea3dfca06be|file:///Users/ring/Documents/code/c/pintia_trains/7-9_travel_plan.cpp|1|1|V|cpp
	#include<stdio.h>
	
	
	void create(int n,int m);
	void go(int s,int d,int n);
	
	int set[501][501];
	int payset[501][501];
	int dist[501],pay[501];
	
	
	int main(){
	    int n,m,s,d;
	    scanf("%d %d %d %d",&n,&m,&s,&d);
	    create(n,m);
	    go(s,d,n);
	}
	
	void create(int n,int m){
	    int a,b,d,p;
	    for(int i=0;i<n;i++){
	        for(int j=0;j<n;j++){
	            set[i][j]=9999;
	            payset[i][j]=9999;
	        }
	        dist[i]=pay[i]=9999;
	    }
	    
	    while(m--){
	        scanf("%d %d %d %d",&a,&b,&d,&p);
	        set[a][b]=set[b][a]=d;
	        payset[a][b] = payset[b][a] = p;
	    }
	}
	
	
	void go(int s,int d,int n){
	    int q[501];
	    int visited[501]={0};
	    int front=-1,rear=-1;
	
	    q[++rear]=s;
	    pay[s]=dist[s]=0;
	
	    for(int i,cnt=0;cnt<n;cnt++){
	        i=(cnt+s)%n;    // !!!!!!
	        while(rear>front){
	            front++;
	            for(int j=0;j<n;j++){
	                if(!visited[j]&&set[front][j]!=9999){
	                    q[++rear]=j;
	                    visited[j]=1;
	
	
	
	
	                }
	
	                if(set[front][j]){
	                    if(set[front][j]+dist[front]<dist[j]){
	                        dist[j]=set[front][j]+dist[front];
	                        pay[j]=payset[front][j]+pay[front];
	                    }else if(set[front][j]+dist[front]==dist[j]){
	                        if(payset[front][j]+pay[front]<pay[j]){
	                            pay[j]=payset[front][j]+pay[front];
	                        }
	                    }
	                }
	            }
	        }
	    }
	
	//    for(int i=0;i<n;i++){
	//        for(int j=0;j<n;j++){
	//            printf("%5d %5d |",set[i][j],payset[i][j]);
	//        }
	//        printf("%5d %5d\n",dist[i],pay[i]);
	//    }
	
	    printf("%d %d",dist[d],pay[d]);
	
	
	}
f0eaf229973a517f321be84f5e85648c|file:///Users/ring/.zshrc|41|1|V|zsh
	bindkey -M vicmd "n" vi-forward-word-end
7fa798f32f82d05a6bdb4ba523f5b3b9|file:///Users/ring/.zshrc|42|22|v|zsh
	vi-forward-word-end
5815427fc619c319b04a1156540e86f5|file:///Users/ring/.zshrc|42|1|V|zsh
	bindkey -M vicmd "F" history-incremental-search-backward
195fe59b6f103787a914aead0f3db502|file:///Users/ring/.zshrc|43|49|v|zsh
	backward
84770310cf899a9f97d56e761c9134af|file:///private/tmp/zshMSu3Lx|1|1|V|zsh
	you-get 'https://www.bilibili.com/video/av46653815?p=1' 
283de9011ab36b60f6ddca02595ef259|file:///private/tmp/zshMSu3Lx|1|54|^v|zsh
	1
	2
	3
	4
	5
	6
	7
	8
	9
959e2b87250a0d3fc356178e9e981496|file:///private/tmp/zshMSu3Lx|10|1|V|zsh
	you-get 'https://www.bilibili.com/video/av46653815?p=11' 
cedf4f5bac157fe1644ac0c64eb5a00d|file:///private/tmp/zshMSu3Lx|1|1|V|zsh
	you-get 'https://www.bilibili.com/video/av46653815?p=1' 
	you-get 'https://www.bilibili.com/video/av46653815?p=2' 
	you-get 'https://www.bilibili.com/video/av46653815?p=3' 
	you-get 'https://www.bilibili.com/video/av46653815?p=4' 
	you-get 'https://www.bilibili.com/video/av46653815?p=5' 
	you-get 'https://www.bilibili.com/video/av46653815?p=6' 
	you-get 'https://www.bilibili.com/video/av46653815?p=7' 
	you-get 'https://www.bilibili.com/video/av46653815?p=8' 
	you-get 'https://www.bilibili.com/video/av46653815?p=9' 
	you-get 'https://www.bilibili.com/video/av46653815?p=10' 
	you-get 'https://www.bilibili.com/video/av46653815?p=11' 
	you-get 'https://www.bilibili.com/video/av46653815?p=12' 
	you-get 'https://www.bilibili.com/video/av46653815?p=13' 
	you-get 'https://www.bilibili.com/video/av46653815?p=14' 
	you-get 'https://www.bilibili.com/video/av46653815?p=15' 
	you-get 'https://www.bilibili.com/video/av46653815?p=16' 
	you-get 'https://www.bilibili.com/video/av46653815?p=17' 
	you-get 'https://www.bilibili.com/video/av46653815?p=18' 
	you-get 'https://www.bilibili.com/video/av46653815?p=19' 
	you-get 'https://www.bilibili.com/video/av46653815?p=20' 
697dfb9b235783676b63d2f1ed07cad5|file:///Users/ring/.oh-my-zsh/themes/robbyrussell.zsh-theme|1|1|V|
	<<<<<<< HEAD
d5fcf6b2fa462bd7f230de4e26f7d1ea|file:///Users/ring/.oh-my-zsh/themes/robbyrussell.zsh-theme|3|1|V|
	=======
	local ret_status="%(?:%{$fg_bold[green]%}😏:%{$fg_bold[red]%}😈)"
	PROMPT='${ret_status}%{$fg_bold[green]%}%c👉%{$reset_color%} $(git_prompt_info)'
	>>>>>>> y style
6411532ba4971f378391776a9db629d3|file:///Users/ring/.oh-my-zsh/themes/robbyrussell.zsh-theme|2|17|v|
	cyan
121df30aa6a92918d03ce08be5fb5a51|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|52|1|V|cpp
	            if(set[i][j]>max[i]){
	                max[i] = set[i][j];
d104aa03b7c33cfc9cf7c3dd31917993|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|52|1|V|cpp
	            if(set[i][j]>max[i]){
50c0c373fae482a550b76e6dc0edaa9d|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|53|13|V|cpp
	            } 
1545e945d5c3e7d9fa642d0a57fc8432|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|52|9|v|cpp
	     
09ab89b289417c0d5c662080841094c7|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|54|9|V|cpp
	        }
	        printf(" \n",set[i][j]);
128f60ad837f4c55eb1dc87c20a281c5|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|55|21|v|cpp
	,set[i][j]);
c4dc0981e951b06fbe8f3bfeaa0d2af1|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|50|21|V|cpp
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            printf("%d ",set[i][j]);
	            max[i] += set[i][j];
	        }
	        printf(" \n",set[i][j]);
865aff96b5cb43e06c6b815c234d9b55|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|55|16|v|cpp
	" \n",set[i][j]
31b191bb7f2968108e32b5a97da1602d|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|55|21|v|cpp
	,set[i][j]
6e30eab837d1ab2006124e4f8840487c|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|68|1|V|cpp
	        int sum=0;
	        for(int i=1;i<=n;i++){
	            sum += set[tar][i];
	        }
f783b93d8fd6185142e969ccfdb5318f|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|1|1|V|cpp
	#include<stdio.h>
	
	
	int set[101][101];
	
	void creat(int n,int m);
	void select(int n);
	
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    creat(n,m);
	    select(n);
	
	    return 0;
	}
	
	
	void creat(int n,int m){
	    int i,j,a;
	
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            set[i][j]=9999;
	        }
	    }
	    while(m--){
	        scanf("%d %d %d",&i,&j,&a);
	        set[i][j]=set[j][i]=a;
	    }
	}
	
	
	void select(int n){
	    for(int k=1;k<=n;k++){
	        for(int i=1;i<=n;i++){
	            for(int j=1;j<=n;j++){
	                if(i==j)set[i][j] = 0 ;
	                else if(i!=j&&set[i][j]>set[i][k]+set[k][j]){
	                    set[i][j] = set[i][k]+set[k][j];
	                }
	            }
	        }
	    }
	
	    int max[101]={0};
	    int min,tar;
	    int cnt = 0;
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            printf("%d ",set[i][j]);
	            max[i] += set[i][j];
	        }
	        printf(" \n");
	        if(max[i]==9999) cnt++;
	    }
	
	    if(cnt!=n){
	        min = max[1];tar=1;
	        for(int i=1;i<=n;i++){
	            if(max[i]<min){
	                min = max[i];
	                tar = i;
	            }
	        }
	
	        printf("%d %d",tar,max[tar]);
	    }else printf("1");
	}
	
cab8111fd0b710a336c898e539090e34|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|3|1|v|cpp
	void
c38f00fde7d6646a84f6bbfbdf96c3c2|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|21|5|V|cpp
	    while
011c5137c9d1ac34f9770a58036329cd|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|9|5|v|cpp
	DisjointSe
556e9a86db9c921373c6b5097817214a|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|21|12|v|cpp
	Heap
dc2f55718683c0f12dc076a30f661b87|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|39|1|V|cpp
	void insert(int n,int p){
84263639e3ae796ab013458c0464cb79|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|39|18|v|cpp
	,int p){
8a10b8dca3564da4c6e1c450ecb5cfbd|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|39|18|v|cpp
	,int p)
b3f357a69054f3b3ba21b22cfa197e46|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|32|1|V|cpp
	        scanf("%d %d %d",&a,&b,&p);
	        set[a][b]=set[b][a]=p;
2bfeab93ea87a74240d033e66b8aa62c|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|28|1|V|cpp
	        djset[i]=-1;
7196d77020cbbe9c901b9a1161eaadde|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|28|9|v|cpp
	djset
fa246d0262c3925617b0c72bb20eeb1d|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|28|17|v|cpp
	9999
d507bc2f6febfe0a5fe3e2c387d234f0|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|33|1|V|cpp
	    while(m--){
	        scanf("%d %d %d",&a,&b,&p);
	        set[a][b]=set[b][a]=p;
	        insert(p);
	    }
1885e8d6b8a92c2232a6132cd360a28d|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|43|9|V|cpp
	        int i;
d4f1b061de162cad8709a35391f93095|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|47|1|V|cpp
	        heap[++len].v1=a;
65ed9931bcde02468aacbd0628fbe979|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|48|1|V|cpp
	        heap[len].v2=b;
810c2c0ea95dece0a125db0efe16249d|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|50|9|V|cpp
	        for(i=len;p<heap[i/2].pay;i/=2){
5ee3189c7958dde2689c331dedef80e0|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|50|13|V|cpp
	            heap[i]=heap[i/2];
b50ee937993df4df1977f7f829e9780a|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|50|9|V|cpp
	        }
	        heap[i]=heap[len];
f194583ff3bfd16829b1611ff741017b|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|56|1|V|cpp
	                    int tem = heap[j*2];
	                    heap[j*2]=heap[j*2+1];
	                    heap[j*2+1]=tem;
ed03b90fbc9519de378745c65e69e06e|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|67|9|V|cpp
	        int 
7bc1be694e088fb0bd327c16548c09ef|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|61|1|v|cpp
	                    
859204f7a3c0205d871815a90b042210|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|10|1|V|cpp
	void delet();
34a57fa375013352939fdcb1cf606048|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|11|1|V|cpp
	void 
234087adb5be27bec454e5fe9edbb1cc|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|34|9|V|cpp
	        djset[i=-1;
4ca5656c7c66c13f8169e235e463f01b|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|28|5|V|cpp
	    djset[0]=-1;
64c7d1a4ddaccad4a4f3bf812d93774a|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|79|12|v|cpp
	djset[heap[i].v1]
e3e3da76d84a076f65533a75c5e70521|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|97|1|V|cpp
	    while(djset[x]!=0){
	        x = djset[x];
	    }
28bc869451c7c5de823851b9ba972620|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|86|1|V|cpp
	                joint(int x,int p);
7f7adc663b20d7fcf716b3b2c1b70f1e|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|83|29|v|cpp
	heap[i].v1
c342c93809c6a554b1b6a067d1c3908e|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|20|5|V|cpp
	    createTree();
3897640537c00caaed8779468d6726aa|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|23|5|V|cpp
	    for(int )<++>
6c9b204c8c2146a6b1e75cb47c285a5c|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|27|13|V|cpp
	            if()<++>
a9473ded85aa51851deb4859cdd53f98|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|95|16|V|cpp
	                
57e231fc312781d68db2364fcf0a8ae9|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|23|1|V|cpp
	    if(djset[0]!=n-1){
	        printf("-1");
	    }else{
	        for(int i=1;i<=n;i++){
	
	        }<++>
	    }<++>
4ef8b895cb051ddaeaa175f77c426016|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|7|1|V|cpp
	void createHeap(int index);
f51e40bb8abab1cb56fb563f1ac3d19e|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|63|17|V|cpp
	                if(j*2+1<len)<++>
74181dba0cd1318a674b2369d145dad9|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|62|13|V|cpp
	            int 
65d0f134c5c0d96024c1cab93d7b4a3e|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|67|17|V|cpp
	                        tem = heap[j*2];
2228ab3894f4a78a7503d04e0664814e|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|67|25|V|cpp
	                        heap[j*2]=heap[j*2+1];
416a73f608e2a7d15d4c74715b566690|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|67|25|V|cpp
	                        heap[j*2+1]=tem;
fc8a31418ac3b80c25fe4cd4b6250482|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|62|13|V|cpp
	            int max=j*2;
4750af5496fa57cb74fb22dd4a30abab|file:///Users/ring/.vimrc|86|9|v|vim
	<LEADER>
5bcfb5603499e904db231d4cddb04617|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|61|24|v|cpp
	--){
3a2f6d0de84e70f55a8d738d46143389|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|99|1|V|cpp
	                joint(heap[i].v1,heap[i].v2);
	                cnt+=heap[i].pay;
37f91a10810c37a0f946c88eecf0bb86|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|94|5|^v|cpp
	           
8a542275dc1b0737a1c565bb062b7bb1|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|93|1|V|cpp
	    printf("joint: %d %d\n",heap[1].v1,heap[1].v2);
c729d04f0f21b21a75696aafa5710e65|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|23|1|V|cpp
	    for(int i=1;i<=m;i++){
	        printf("%d  ",heap[i].pay);
	        if(djset[i]!=0){
	            cnt++;
	        }
	    }
5a314aad6ab4346657748bf4f223d81c|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|31|24|V|cpp
	        if(djset[i]!=0){
	            cnt++;
d2afad62b575be1da2b7d3283289f354|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|34|1|V|cpp
	    printf("\n");
7d4318f83fe0d3f459b15d62f3ad3cc4|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|104|1|V|cpp
	    len++;
cfb4b6c05e26c35504d767f4114742a6|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|111|1|V|cpp
	                printf("joint: %d %d\n",heap[i].v1,heap[i].v2);
86a50aae61599777aeee2a5993ce7b97|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|106|21|v|cpp
	joint: 
aabbf95ed2d62702e07e7dfaa18859c0|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|112|33|^v|cpp
	,heap[i].v1,heap[i].v2
bbc2b1e958948a10411305ca027958c4|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|112|1|V|cpp
	                printf("joint\n");
ca400edaf4bf9ebd5c008e92ab20df60|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|112|1|V|cpp
	                printf("joint");
58fe895084037c202da7dae31e14fff4|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|116|21|v|cpp
	joint
268c231d820b0d7b4f7e08de5cab3a4c|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|108|1|V|cpp
	ddcontinue;
bec84c7f7afdd8f563e5da5c5ea71853|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|109|13|V|cpp
	                continue;
3ffe993757e75eae0374b222bdb70236|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|107|1|V|cpp
	            if(djset[heap[i].v1]&&djset[heap[i].v2]){
	            }else if(!djset[heap[i].v1]&&!djset[heap[i].v1]){
2954e92a9b4d0e998fe4893f8141649a|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|107|13|v|cpp
	else
9e68883dceefbab24e01b5f0a619e516|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|107|17|v|cpp
	heap[i].v1&&!heap[i].v2
f3af638b73a5271b9e0ad45a201ba5da|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|106|1|V|cpp
	            printf("%d %d",heap[i].v1,heap[i].v2);
6b3fa5facc40b328e3ae639049f94e55|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|106|41|v|cpp
	&&(!
b6ef688996137b11c7ddbe49f9b446b9|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|127|1|V|cpp
	        djset[x] = x;
e0a316b64c0cb93e3c53a4eba30148b5|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|29|1|V|cpp
	    printf("\n");
	
	    for(int i=1;i<=n;i++){
	        printf("%d  ",djset[i]);
	    }
	    printf("\n");
75c95d5c985cebd0f21e29b745ba62e9|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|24|1|V|cpp
	        printf("%d  ",heap[i].pay);
2e017bfacf9c63911b3bed53d60f1915|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|1|1|V|cpp
	#include<stdio.h>
cf0e922d9b1627b74704ad923ed7be7f|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|1|1|V|cpp
	#include<stdio.h>
	
	typedef struct {
	    int v1,v2,pay;
	}Heap;
	
	void createTree(int n);
	void createSet(int n,int m);
	void insert(int n);
	void joint(int x,int p);   
	
	int set[1001][1001];
	int djset[1001]={0};
	Heap heap[1001];
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createSet(n,m);
	    createTree(m);
	    
	    int cnt=0;
	    for(int i=1;i<=m;i++){
	        if(djset[i]>0){
	            cnt++;
	        }
	    }
	
	    if(cnt!=n-1) printf("-1");
	    else printf("%d",djset[0]);
	
	    return 0;
	}
	
	
	void createSet(int n,int m){
	    int a,b,p;
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            set[i][j]=set[j][i]=9999;
	        }
	        heap[i].pay=-1;
	    }
	
	    insert(m);
	}
	
	
	void insert(int n){
	    int len=0;
	    int i,a,b,p;
	    while(n--){
	        scanf("%d %d %d",&a,&b,&p);
	        set[a][b]=set[b][a]=p;
	        
	        heap[++len].v1=a;
	        heap[len].v2=b;
	        heap[len].pay=p;
	    }
	
	    Heap tem;
	    for(int i=len;i>0;i--){
	        for(int j=len/2;j>0;j--){
	            int t=j;
	            while(t*2<=len){
	
	                int max=t*2;
	                if(max+1<=len){
	                    if(heap[max].pay<heap[max+1].pay){
	                        max++;
	                    }
	                }
	                if(heap[t].pay<heap[max].pay){
	                    tem = heap[t];
	                    heap[t]=heap[max];
	                    heap[max]=tem;
	                    t = max;
	                }else break;
	            }
	        }
	
	        tem=heap[len];
	        heap[len]=heap[1];
	        heap[1]=tem;
	        len--;
	
	    }
	}
	
	void createTree(int m){
	    int min,tar;
	    int cnt=0,len=m;
	    
	    joint(heap[1].v1,heap[1].v2);
	    cnt+=heap[1].pay;
	    while(len--){
	        for(int i=1;i<=m;i++){
	            if((djset[heap[i].v1]&&!djset[heap[i].v2])||(!djset[heap[i].v1]&&djset[heap[i].v2])){
	                joint(heap[i].v1,heap[i].v2);
	                cnt+=heap[i].pay;
	            }        
	        }
	    }
	    djset[0]=cnt;
	}
	
	
	
	void joint(int x,int p){
	    while(djset[x]>0){
	        x = djset[x];
	    }
	
	    while(djset[p]>0){
	        p = djset[p];
	    }
	
	    if(x!=p){
	        djset[x]--;
	        djset[p]=x;
	    }
	}
6f5320fbbb5e121c55ec5551c82127dc|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|110|5|V|cpp
	    while(djset[x]>0){
5125e2a8492e0af1e9625cc16da0591a|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|1|1|V|cpp
	#include<stdio.h>
	
	typedef struct {
	    int v1,v2,pay;
	}Heap;
	
	void createTree(int n);
	void createSet(int n,int m);
	void insert(int n);
	void joint(int x,int p);   
	
	int set[1001][1001];
	int djset[1001]={0};
	Heap heap[1001];
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createSet(n,m);
	    createTree(m);
	    
	    int cnt=0;
	    for(int i=1;i<=m;i++){
	        if(djset[i]>0){
	            cnt++;
	        }
	    }
	
	    if(cnt!=n) printf("-1");
	    else printf("%d",djset[0]);
	
	    return 0;
	}
	
	
	void createSet(int n,int m){
	    int a,b,p;
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            set[i][j]=set[j][i]=9999;
	        }
	        heap[i].pay=-1;
	    }
	
	    insert(m);
	}
	
	
	void insert(int n){
	    int len=0;
	    int i,a,b,p;
	    while(n--){
	        scanf("%d %d %d",&a,&b,&p);
	        set[a][b]=set[b][a]=p;
	        
	        heap[++len].v1=a;
	        heap[len].v2=b;
	        heap[len].pay=p;
	    }
	
	    Heap tem;
	    for(int i=len;i>0;i--){
	        for(int j=len/2;j>0;j--){
	            int t=j;
	            while(t*2<=len){
	
	                int max=t*2;
	                if(max+1<=len){
	                    if(heap[max].pay<heap[max+1].pay){
	                        max++;
	                    }
	                }
	                if(heap[t].pay<heap[max].pay){
	                    tem = heap[t];
	                    heap[t]=heap[max];
	                    heap[max]=tem;
	                    t = max;
	                }else break;
	            }
	        }
	
	        tem=heap[len];
	        heap[len]=heap[1];
	        heap[1]=tem;
	        len--;
	
	    }
	}
	
	void createTree(int m){
	    int min,tar;
	    int cnt=0,len=m;
	    
	    joint(heap[1].v1,heap[1].v2);
	    cnt+=heap[1].pay;
	    while(len--){
	        for(int i=1;i<=m;i++){
	            if((djset[heap[i].v1]&&!djset[heap[i].v2])||(!djset[heap[i].v1]&&djset[heap[i].v2])){
	                joint(heap[i].v1,heap[i].v2);
	                cnt+=heap[i].pay;
	            }        
	        }
	    }
	    djset[0]=cnt;
	}
	
	
	
	void joint(int x,int p){
	    djset[x]=1;
	    djset[p]=1;
	    //while(djset[x]>0){
	    //    x = djset[x];
	    //}
	
	    //while(djset[p]>0){
	    //    p = djset[p];
	    //}
	
	    //if(x!=p){
	    //    djset[x]--;
	    //    djset[p]=x;
	    //}
	}
7fb49926177d4942b8e0905507141e23|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|112|1|V|cpp
	    //while(djset[x]>0){
	    //    x = djset[x];
	    //}
	
	    //while(djset[p]>0){
	    //    p = djset[p];
	    //}
	
	    //if(x!=p){
	    //    djset[x]--;
	    //    djset[p]=x;
	    //}
9b676c4aaaf941608a5d4d0374d3ec90|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|12|1|V|cpp
	int set[1001][1001];
983b9e14f63c0d1927551737d5eb33aa|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|1|1|V|cpp
	#include<stdio.h>
	
	typedef struct {
	    int v1,v2,pay;
	}Heap;
	
	void createTree(int n);
	void createSet(int n,int m);
	void insert(int n);
	void joint(int x,int p);   
	
	int djset[1001]={0};
	Heap heap[1001];
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createSet(n,m);
	    createTree(m);
	    
	    int cnt=0;
	    for(int i=1;i<=m;i++){
	        if(djset[i]>0){
	            cnt++;
	        }
	    }
	
	    if(cnt!=n) printf("-1");
	    else printf("%d",djset[0]);
	
	    return 0;
	}
	
	
	void createSet(int n,int m){
	    int a,b,p;
	    for(int i=1;i<=n;i++){
	//        for(int j=1;j<=n;j++){
	//            set[i][j]=set[j][i]=9999;
	//        }
	        heap[i].pay=-1;
	    }
	
	    insert(m);
	}
	
	
	void insert(int n){
	    int len=0;
	    int i,a,b,p;
	    while(n--){
	        scanf("%d %d %d",&a,&b,&p);
	//        set[a][b]=set[b][a]=p;
	        
	        heap[++len].v1=a;
	        heap[len].v2=b;
	        heap[len].pay=p;
	    }
	
	    Heap tem;
	    for(int i=len;i>0;i--){
	        for(int j=len/2;j>0;j--){
	            int t=j;
	            while(t*2<=len){
	
	                int max=t*2;
	                if(max+1<=len){
	                    if(heap[max].pay<heap[max+1].pay){
	                        max++;
	                    }
	                }
	                if(heap[t].pay<heap[max].pay){
	                    tem = heap[t];
	                    heap[t]=heap[max];
	                    heap[max]=tem;
	                    t = max;
	                }else break;
	            }
	        }
	
	        tem=heap[len];
	        heap[len]=heap[1];
	        heap[1]=tem;
	        len--;
	
	    }
	}
	
	void createTree(int m){
	    int min,tar;
	    int cnt=0,len=m;
	    
	    joint(heap[1].v1,heap[1].v2);
	    cnt+=heap[1].pay;
	    while(len--){
	        for(int i=1;i<=m;i++){
	            if((djset[heap[i].v1]&&!djset[heap[i].v2])||(!djset[heap[i].v1]&&djset[heap[i].v2])){
	                joint(heap[i].v1,heap[i].v2);
	                cnt+=heap[i].pay;
	            }        
	        }
	    }
	    djset[0]=cnt;
	}
	
	
	
	void joint(int x,int p){
	    djset[x]=1;
	    djset[p]=1;
	}
eaa7cc86a4787c691f8d6bfd91ded388|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|1|1|V|cpp
	#include<stdio.h>
	
	typedef struct {
	    int v1,v2,pay;
	}Heap;
	
	void createTree(int n);
	void createSet(int n,int m);
	void insert(int n);
	void joint(int x,int p);   
	
	int djset[1001]={0};
	Heap heap[1001];
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createSet(n,m);
	    createTree(m);
	    
	    int cnt=0;
	    for(int i=1;i<=n;i++){
	        if(djset[i]>0){
	            cnt++;
	        }
	    }
	
	    if(cnt!=n) printf("-1");
	    else printf("%d",djset[0]);
	
	    return 0;
	}
	
	
	void createSet(int n,int m){
	    int a,b,p;
	    for(int i=1;i<=n;i++){
	//        for(int j=1;j<=n;j++){
	//            set[i][j]=set[j][i]=9999;
	//        }
	        heap[i].pay=-1;
	    }
	
	    insert(m);
	}
	
	
	void insert(int n){
	    int len=0;
	    int i,a,b,p;
	    while(n--){
	        scanf("%d %d %d",&a,&b,&p);
	//        set[a][b]=set[b][a]=p;
	        
	        heap[++len].v1=a;
	        heap[len].v2=b;
	        heap[len].pay=p;
	    }
	
	    Heap tem;
	    for(int i=len;i>0;i--){
	        for(int j=len/2;j>0;j--){
	            int t=j;
	            while(t*2<=len){
	
	                int max=t*2;
	                if(max+1<=len){
	                    if(heap[max].pay<heap[max+1].pay){
	                        max++;
	                    }
	                }
	                if(heap[t].pay<heap[max].pay){
	                    tem = heap[t];
	                    heap[t]=heap[max];
	                    heap[max]=tem;
	                    t = max;
	                }else break;
	            }
	        }
	
	        tem=heap[len];
	        heap[len]=heap[1];
	        heap[1]=tem;
	        len--;
	
	    }
	}
	
	void createTree(int m){
	    int min,tar;
	    int cnt=0,len=m;
	    
	    joint(heap[1].v1,heap[1].v2);
	    cnt+=heap[1].pay;
	    while(len--){
	        int is=0;
	        for(int i=1;i<=m;i++){
	            if((djset[heap[i].v1]&&!djset[heap[i].v2])||(!djset[heap[i].v1]&&djset[heap[i].v2])){
	                is=1;
	                joint(heap[i].v1,heap[i].v2);
	                cnt+=heap[i].pay;
	            }        
	        }
	        if(is==1)break;
	    }
	    djset[0]=cnt;
	}
	
	
	
	void joint(int x,int p){
	    djset[x]=1;
	    djset[p]=1;
	}
ff20449b3aabf9fa0b4df1ab5d8f0815|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|38|11|V|cpp
	//        for(int j=1;j<=n;j++){
	//            set[i][j]=set[j][i]=9999;
3236b5191df73a235532462213f41c7a|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|38|1|V|cpp
	//        }
77e96279d9cd6f5b7b8666ecff7f9fc3|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|50|9|V|cpp
	//        set[a][b]=set[b][a]=p;
	        
6f3c3505946c9dc3b98a23f32278bccc|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|1|1|V|cpp
	#include<stdio.h>
	
	typedef struct {
	    int v1,v2,pay;
	}Heap;
	
	void createTree(int n);
	void createSet(int n,int m);
	void insert(int n);
	void joint(int x,int p);   
	
	int djset[3001]={0};
	Heap heap[3001];
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createSet(n,m);
	    createTree(m);
	    
	    int cnt=0;
	    for(int i=1;i<=n;i++){
	        if(djset[i]>0){
	            cnt++;
	        }
	    }
	
	    if(cnt==n) printf("-1");
	    else printf("%d",djset[0]);
	
	    return 0;
	}
	
	
	void createSet(int n,int m){
	    int a,b,p;
	    for(int i=1;i<=n;i++){
	        heap[i].pay=-1;
	    }
	
	    insert(m);
	}
	
	
	void insert(int n){
	    int len=0;
	    int i,a,b,p;
	    while(n--){
	        scanf("%d %d %d",&a,&b,&p);
	        heap[++len].v1=a;
	        heap[len].v2=b;
	        heap[len].pay=p;
	    }
	
	    Heap tem;
	    for(int i=len;i>0;i--){
	        for(int j=len/2;j>0;j--){
	            int t=j;
	            while(t*2<=len){
	
	                int max=t*2;
	                if(max+1<=len){
	                    if(heap[max].pay<heap[max+1].pay){
	                        max++;
	                    }
	                }
	                if(heap[t].pay<heap[max].pay){
	                    tem = heap[t];
	                    heap[t]=heap[max];
	                    heap[max]=tem;
	                    t = max;
	                }else break;
	            }
	        }
	
	        tem=heap[len];
	        heap[len]=heap[1];
	        heap[1]=tem;
	        len--;
	
	    }
	}
	
	void createTree(int m){
	    int min,tar;
	    int cnt=0,len=m;
	    
	    joint(heap[1].v1,heap[1].v2);
	    cnt+=heap[1].pay;
	    while(len--){
	        int is=0;
	        for(int i=1;i<=m;i++){
	            if((djset[heap[i].v1]&&!djset[heap[i].v2])||(!djset[heap[i].v1]&&djset[heap[i].v2])){
	                is=1;
	                joint(heap[i].v1,heap[i].v2);
	                cnt+=heap[i].pay;
	            }        
	        }
	        if(is==1)break;
	    }
	    djset[0]=cnt;
	}
	
	
	
	void joint(int x,int p){
	    djset[x]=1;
	    djset[p]=1;
	}
dc6448d69fbdca6059614e1c7ff8600c|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|97|17|V|cpp
	                break;
46b448410eaa016713ed7785cf10e9d8|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|91|9|V|cpp
	        int is=0;
84c6e61d5626885016e1c627044ca571|file:///Users/ring/Documents/code/c/pintia_trains/7-10_road_to_village.cpp|1|1|V|cpp
	#include<stdio.h>
	
	typedef struct {
	    int v1,v2,pay;
	}Heap;
	
	void createTree(int n);
	void createSet(int n,int m);
	void insert(int n);
	void joint(int x,int p);   
	
	int djset[3001]={0};
	Heap heap[3001];
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createSet(n,m);
	    createTree(m);
	    
	    int cnt=0;
	    for(int i=1;i<=n;i++){
	        if(djset[i]>0){
	            cnt++;
	        }
	    }
	
	    if(cnt!=n) printf("-1");
	    else printf("%d",djset[0]);
	
	    return 0;
	}
	
	
	void createSet(int n,int m){
	    int a,b,p;
	    for(int i=1;i<=n;i++){
	        heap[i].pay=-1;
	    }
	
	    insert(m);
	}
	
	
	void insert(int n){
	    int len=0;
	    int i,a,b,p;
	    while(n--){
	        scanf("%d %d %d",&a,&b,&p);
	        heap[++len].v1=a;
	        heap[len].v2=b;
	        heap[len].pay=p;
	    }
	
	    Heap tem;
	    for(int i=len;i>0;i--){
	        for(int j=len/2;j>0;j--){
	            int t=j;
	            while(t*2<=len){
	
	                int max=t*2;
	                if(max+1<=len){
	                    if(heap[max].pay<heap[max+1].pay){
	                        max++;
	                    }
	                }
	                if(heap[t].pay<heap[max].pay){
	                    tem = heap[t];
	                    heap[t]=heap[max];
	                    heap[max]=tem;
	                    t = max;
	                }else break;
	            }
	        }
	
	        tem=heap[len];
	        heap[len]=heap[1];
	        heap[1]=tem;
	        len--;
	
	    }
	}
	
	void createTree(int m){
	    int min,tar;
	    int cnt=0,len=m;
	    
	    joint(heap[1].v1,heap[1].v2);
	    cnt+=heap[1].pay;
	    int is=1;
	    while(is==1){
	        is=0;
	        for(int i=1;i<=m;i++){
	            if((djset[heap[i].v1]&&!djset[heap[i].v2])||(!djset[heap[i].v1]&&djset[heap[i].v2])){
	                is=1;
	                joint(heap[i].v1,heap[i].v2);
	                cnt+=heap[i].pay;
	                break;
	            }        
	        }
	        if(is==1)break;
	    }
	
	    djset[0]=cnt;
	}
	
	
	
	void joint(int x,int p){
	    djset[x]=1;
	    djset[p]=1;
	}
080f86ac1328e47d1006740d4535e1ce|file:///Users/ring/a.py|1|24|v|python
	substitute/\a/*/g
8a4780ef22fedeb197580fdf1d8ed330|file:///Users/ring/.vim/.vimrc|20|13|v|vim
	badwolf
fca8ac9172044baf20c9426d77bffe64|file:///Users/ring/.vimrc|211|7|v|vim
	iamcco/mathjax-support-for-mkdp
e08e974e1b24efb9ec02a85c3eb1e4e6|file:///Users/ring/.vimrc|227|1|V|vim
	" snips
4b4f7b7c19be1bc763ad4c9a3503f35d|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/arithmetic.md|214|1|V|markdown
	# KMP算法
bf2d45971477f19ff5d1110d1d5447f0|file:///Users/ring/.vimrc|214|1|V|vim
	" open tagbar 
	Plug 'majutsushi/tagbar'
6bc4634dc73901d04ed97619ae90e0e0|file:///Users/ring/.vimrc|214|1|V|vim
	nmap <F6> :TagbarToggle<CR>
	
c84515cfc86a9e825039c8d3c6e9c3b6|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/arithmetic.md|211|28|V|markdown
	高效模式串匹配算法，思路如下：
	- 使用一个数组记录下
e232338e2fd74f5ddcb1e1b93d8df1e9|file:///Users/ring/Documents/code/c/pintia_trains/KMP.cpp|10|12|v|cpp
	char *s
a87deb01c5f539e6bda34829c8ef2368|file:///Users/ring/Documents/code/c/pintia_trains/KMP.cpp|10|12|v|cpp
	char
663fd7e16ffcf2a4c7c3658a35f1b4a8|file:///Users/ring/Documents/code/c/pintia_trains/KMP.cpp|9|1|V|cpp
	    int position;
f3b13140d9f8c99df138ace4a3edbb1f|file:///Users/ring/Documents/code/c/pintia_trains/KMP.cpp|15|1|V|cpp
	}<++>
91f88ad1f2ebe995b125e733aff4dde3|file:///Users/ring/Documents/code/c/pintia_trains/KMP.cpp|13|5|V|cpp
	    search
763269a3bc49f2ecfb9e639531d0f0ea|file:///Users/ring/Documents/code/c/pintia_trains/KMP.cpp|13|5|V|cpp
	    search(char *s, char *p)
240bf022e685b0ee30ad9fe9e1fb5d5b|file:///Users/ring/Documents/code/c/pintia_trains/KMP.cpp|10|5|v|cpp
	pattern
76b6ac51e416e82219069ba4bb830567|file:///Users/ring/Documents/code/c/pintia_trains/KMP.cpp|17|1|V|cpp
	    int slen = strlen(s);
59d2591abb19bb3058e893b56ad9bc02|file:///Users/ring/Documents/code/c/pintia_trains/KMP.cpp|9|5|V|cpp
	    int ma
858aa8cee77c7c534dce3de199d0656b|file:///Users/ring/Documents/code/c/pintia_trains/KMP.cpp|47|5|V|cpp
	    int j = 1;
e3cc92c14a5e6dd1a7d94b6ff634d7fc|file:///Users/ring/Documents/code/c/pintia_trains/KMP.cpp|50|28|v|cpp
	match
0ed5b22d85e5dccc5db753a280635913|file:///Users/ring/Documents/code/c/pintia_trains/KMP.cpp|50|1|V|cpp
	        while(match[j]!=0&&s[j]!=s[p]){
	            j = match[p];
	        }
1892a845aa81b9ddb8b6ef6920d742bb|file:///Users/ring/Documents/code/c/pintia_trains/KMP.cpp|60|1|V|cpp
	
	            
b51a5b3953b94a640621cfb7bb9d27b1|file:///Users/ring/Documents/code/c/pintia_trains/KMP.cpp|50|9|V|cpp
	        while(match[j]!=0&&s[j]!=s[p]){
	            j = match[p];
16802ba762a8db05b0cad1f342ea86da|file:///Users/ring/Documents/code/c/pintia_trains/KMP.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<string.h>
	
	void createMatch(char *s);
	int search(char *s,char *p);
	int match[500];
	
	int main(){
	    char simple[] = "haaadsafewnruzcewaradsfadsfiowe";
	    char pattern[] = "warads";
	    int position;
	    createMatch(simple);
	    position = search(simple,pattern);
	    
	    prinf("%d",position);
	    
	}
	
	int search(char *s,char *p){
	    int slen = strlen(s);
	    int plen = strlen(p);
	
	    int i,j;
	    i=j=0;
	    for(i=0;i<slen;i++){
	        if(s[i]==p[j]){
	            j++;
	        }else{
	            i--;
	            j = match[j]+1;
	        }
	
	        if(j==slen){
	            return i-slen;
	        }
	    }<++>
	}<++>
	
	
	void createMatch(char *s){
	    int len = strlen(s);
	    for(int i=0;i<len;i++){
	        s[i] = -1;
	    }
	
	    int p=0;
	    match[0]=-1;
	    for(int j=1;j<len;j++){
	
	        if(s[j]==s[p]){
	            match[j] = match[p];
	            p++;
	        }else{
	            while(match[p]!=0&&s[j]!=s[p]){
	                p = match[p];
	            }
	            match[j] = match[p];
	        }
	
	
	    }<++>
	
	}<++>
	
	
	
	
78dcec7e214863d724934620a0ded3c7|file:///Users/ring/Documents/code/c/pintia_trains/KMP.cpp|21|13|V|cpp
	            while(dd)<++>
2546966086dc74bdbd0635aa260b8712|file:///Users/ring/Documents/code/c/pintia_trains/KMP.cpp|11|5|V|cpp
	    char *match = (int*)malloc(sizeof(int)*plen);
2af334cc96ab6a19586ea8db8e7bcbc5|file:///Users/ring/Documents/code/c/pintia_trains/KMP.cpp|37|5|V|cpp
	    p=j=0;
49c463eaef3b73d5ba0272aac69093dc|file:///Users/ring/.zshrc|10|1|V|zsh
	LC_ALL="zh_CN.UTF-8"
480155bb7cad9f632ff5d2610f4d1512|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|24|1|V|cpp
	set[a][b]=set[b][a]=p;
23934afccfa6efde391fd905490fed54|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|26|12|v|cpp
	action[a].early<b+action[b].early
03124a220e66545a02e2b5d435741ae7|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|26|12|v|cpp
	action[b].early<action[a].early+t
975ccba9374c2a3f8ef4e2bc8d8616eb|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|32|1|V|cpp
	    action[m-1].last
7bb0edd98f22430a03b67f853e83c2ca|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|34|8|V|cpp
	        
d2e8719f25a67a2b6f0c69891908b182|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|35|31|v|cpp
	action[i].last-tree[j][i]
40a28b561a6753f816c46af57dbbb8da|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|29|1|V|cpp
	            action[b].last = 9999;
f21f015b6be606c80c1cc40db55e61cd|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|34|5|V|cpp
	            action[a].last = 9999;
	            action[b].last = 9999;
98bd1c45684cf587ac2347a92dd7bb51|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|40|41|v|cpp
	last
2b3de800b4576343a07e86b8c420e448|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|40|41|v|cpp
	early
7382e84fd3d2134f86986f50dc5292b1|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|24|1|V|cpp
	                printf("i %d %d",,action[i].early,action[i].last);
e5fcf1cc3d4085129a55970595a55492|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|20|1|V|cpp
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            printf("%d ",tree[i][j]);
	            if(tree[i][j]!=0){
	                printf("i %d %d",action[i].early,action[i].last);
	                printf("j %d %d",action[j].early,action[j].last);
	            }
	        }
	        printf("\n");
	    }
03fd361216126573fdae66e5a6610cdb|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|32|5|V|cpp
	            printf("%d ",tree[i][j]);
9966480a5fa130cbb44dec5916b7891c|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|23|1|V|cpp
	            if(tree[i][j]!=0){
	                printf("i %d %d",action[i].early,action[i].last);
	                printf("j %d %d",action[j].early,action[j].last);
	            }
4f515cacae9ef2988a407271b3d920b2|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	typedef struct{
	    int early,last;
	}Action;
	
	void createTree(int n,int m);
	void scan(int n);
	
	int tree[200][200] = {0};  // 0 disconnect  1 indegree  2 outdegree
	Action action[200];
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createTree(n,m);
	    scan(n);
	
	//    for(int i=1;i<=n;i++){
	//        for(int j=1;j<=n;j++){
	//            printf("%d ",tree[i][j]);
	//        }
	//        printf("\n");
	//    }
	//    for(int i=1;i<=n;i++){
	//        for(int j=1;j<=n;j++){
	//            if(tree[i][j]!=0){
	//                printf("i %d %d;",action[i].early,action[i].last);
	//                printf("j %d %d||",action[j].early,action[j].last);
	//            }
	//        }
	//        printf("\n");
	//    }
	}
	
	
	void createTree(int n,int m){
	    for(int i=1;i<=n;i++){
	        action[i].early = 0;
	        action[i].last = 9999;
	    }
	    int a,b,t;
	    int i=0;
	    while(i<m){
	        scanf("%d %d %d",&a,&b,&t);
	        tree[a][b] = t;
	        if(action[b].early<action[a].early+t){
	            action[b].early=action[a].early+t;
	        }
	        i++;
	    }
	    action[n].last = action[n].early;
	    for(i=n;i>0;i--){
	        for(int j=1;j<=n;j++){
	            if(tree[j][i]!=0&&action[i].last-tree[j][i]<action[j].last){
	                action[j].last = action[i].last-tree[j][i];
	            }
	        }
	    }
	}
	
	
	
	void scan(int n){
	    printf("%d\n",action[n].early);
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            if(tree[i][j]!=0&&action[j].last-action[i].early-tree[i][j]<=0){
	                printf("%d->%d\n",i,j);
	            }
	        }
	    }
	}
	
5ff55da63c823dfbb7e9586e9a5ba23f|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|59|13|V|cpp
	            if(action[]<++>)<++>
341036ab17b0eab69df9bc44142d9d4a|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|69|1|V|cpp
	            if(tree[i][j]!=0&&action[j].last-action[i].early-tree[i][j]==0){
dc66730180f7f3da29d9e5c1c47d2672|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|41|1|V|cpp
	    int end[200] = {0};
ae1bba0590885600a145e99060a5ed14|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|58|1|V|cpp
	    action[n].last = action[n].early;
d34ca1605ac19a70d02b5a12bf521c56|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|63|1|V|cpp
	        if(end[i]){
	            action[i].early = action[i].last;
	        }
f182d81dd145138d017b081c5ea7dba2|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	typedef struct{
	    int early,last;
	}Action;
	
	void createTree(int n,int m);
	void scan(int n);
	
	int end[200] = {0};
	int tree[200][200] = {0};  // 0 disconnect  1 indegree  2 outdegree
	Action action[200];
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createTree(n,m);
	    scan(n);
	
	    for(int i=1;i<=n;i++){
	        printf("%d:",end[i]);
	        for(int j=1;j<=n;j++){
	
	            printf("%d ",tree[i][j]);
	        }
	        printf("\n");
	    }
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            if(tree[i][j]!=0){
	                printf("i %d %d;",action[i].early,action[i].last);
	                printf("j %d %d||",action[j].early,action[j].last);
	            }
	        }
	        printf("\n");
	    }
	}
	
	
	void createTree(int n,int m){
	    for(int i=1;i<=n;i++){
	        action[i].early = 0;
	        action[i].last = 9999;
	    }
	    int a,b,t;
	    int i=0;
	    while(i<m){
	        scanf("%d %d %d",&a,&b,&t);
	        tree[a][b] = t;
	        end[a] = 0;
	        end[b] = 1;
	        if(action[b].early<action[a].early+t){
	            action[b].early=action[a].early+t;
	        }
	        i++;
	    }
	
	    for(i=1;i<=n;i++){
	        if(end[i]){
	            action[i].last = action[i].early;
	        }
	    }
	    for(i=n;i>0;i--){
	        for(int j=1;j<=n;j++){
	            if(tree[j][i]!=0&&action[i].last-tree[j][i]<action[j].last){
	                action[j].last = action[i].last-tree[j][i];
	            }
	        }
	    }
	}
	
	
	
	void scan(int n){
	    printf("%d\n",action[n].early);
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            if(tree[i][j]!=0&&action[j].last-action[i].early-tree[i][j]==0){
	                printf("%d->%d\n",i,j);
	            }
	            else if(tree[i][j]!=0&&action[j].last-action[i].early-tree[i][j]<=0){
	                printf("0");
	                return;
	            }
	
	        }
	    }
	}
	
caaaf24efc5ef9976cd3898993b277bc|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|82|7|V|cpp
	        break;
0e0366eb6601c27758ebb716600ab8f1|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|68|1|V|cpp
	            if(tree[j][i]!=0&&action[i].last-tree[j][i]<action[j].last){
1cbfb724ceee46cd879df7c7cfbe7dca|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|77|20|v|cpp
	break
31c290ea36e1c091079b3d80cf55fc7c|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|72|3|v|cpp
	          if(tree[j][i]!=0&&action[i].last-tree[j][i]-action[j].last<0){
	                isG=0;
	                return;
	            }
	            else 
c579365043e89dc1809a197dad072621|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|98|1|V|cpp
	            else if(tree[i][j]!=0&&action[j].last-action[i].early-tree[i][j]<=0){
	                printf("0");
	                return;
	            }
d3005c5787c515483018720cdeeb5c20|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|68|9|V|cpp
	        }else{
c1f208e9c71415ecbffe4a061a92c724|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|68|13|V|cpp
	            isG = 1;
5bce4ebf2ae1a7b62b8bb982ad6a24d6|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|66|9|V|cpp
	        if(!end[i]){
3855e18e28d5ccbce4a6e36b3ce49287|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|74|17|V|cpp
	                isG++;
0652ceee0e705935266b3e71a4d299d8|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|76|9|V|cpp
	        if(isG==0) return;
5a3d1d68e0904aa0a199dbde7c4e66f4|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	typedef struct{
	    int early,last;
	}Action;
	
	void createTree(int n,int m);
	void scan(int n);
	
	int end[200] = {0};
	int tree[200][200] = {0};  // 0 disconnect  1 indegree  2 outdegree
	Action action[200];
	int isG = 0;
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createTree(n,m);
	    scan(n);
	
	    for(int i=1;i<=n;i++){
	        printf("%d:",end[i]);
	        for(int j=1;j<=n;j++){
	
	            printf("%d ",tree[i][j]);
	        }
	        printf("\n");
	    }
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            if(tree[i][j]!=0){
	                printf("i %d %d;",action[i].early,action[i].last);
	                printf("j %d %d||",action[j].early,action[j].last);
	            }
	        }
	        printf("\n");
	    }
	}
	
	
	void createTree(int n,int m){
	    for(int i=1;i<=n;i++){
	        action[i].early = 0;
	        action[i].last = 9999;
	    }
	    int a,b,t;
	    int i=0;
	    while(i<m){
	        scanf("%d %d %d",&a,&b,&t);
	        tree[a][b] = t;
	        end[a] = 0;
	        end[b] = 1;
	        if(action[b].early<action[a].early+t){
	            action[b].early=action[a].early+t;
	        }
	        i++;
	    }
	
	    for(i=1;i<=n;i++){
	        if(end[i]){
	            action[i].last = action[i].early;
	        }
	    }
	    for(i=n;i>0;i--){
	        isG = 1;
	        for(int j=1;j<=n;j++){
	            if(tree[j][i]!=0&&action[i].last-tree[j][i]-action[j].early<0){
	                isG=0;
	                return;
	            }
	            else if(tree[j][i]!=0&&action[i].last-tree[j][i]<action[j].last){
	                action[j].last = action[i].last-tree[j][i];
	            }
	        }
	    }
	}
	
	
	
	void scan(int n){
	    if(isG==0){
	        printf("0\n");
	        return;
	    }
	    printf("%d\n",action[n].early);
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            if(tree[i][j]!=0&&action[j].last-action[i].early-tree[i][j]==0){
	                printf("%d->%d\n",i,j);
	            }
	
	        }
	    }
	}
	
8b200f66a13c00580b2dfd817fbd2afd|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|64|30|v|cpp
	action[i].early;
37cbf8f1d5e4f3a0c323a3db9b0cd968|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	typedef struct{
	    int early,last;
	}Action;
	
	void createTree(int n,int m);
	void scan(int n);
	
	int end[200] = {0};
	int tree[200][200] = {0};  // 0 disconnect  1 indegree  2 outdegree
	Action action[200];
	int isG = 0;
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createTree(n,m);
	    scan(n);
	
	    for(int i=1;i<=n;i++){
	        printf("%d:",end[i]);
	        for(int j=1;j<=n;j++){
	
	            printf("%d ",tree[i][j]);
	        }
	        printf("\n");
	    }
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            if(tree[i][j]!=0){
	                printf("i %d %d;",action[i].early,action[i].last);
	                printf("j %d %d||",action[j].early,action[j].last);
	            }
	        }
	        printf("\n");
	    }
	}
	
	
	void createTree(int n,int m){
	    int max = 0;
	    for(int i=1;i<=n;i++){
	        action[i].early = 0;
	        action[i].last = 9999;
	    }
	    int a,b,t;
	    int i=0;
	    while(i<m){
	        scanf("%d %d %d",&a,&b,&t);
	        tree[a][b] = t;
	        end[a] = 0;
	        end[b] = 1;
	        if(action[b].early<action[a].early+t){
	            action[b].early=action[a].early+t;
	            max = action[b].early;
	        }
	        i++;
	    }
	
	    for(i=1;i<=n;i++){
	        if(end[i]){
	            action[i].last = max;
	        }
	    }
	    for(i=n;i>0;i--){
	        isG = 1;
	        for(int j=1;j<=n;j++){
	            if(tree[j][i]!=0&&action[i].last-tree[j][i]-action[j].early<0){
	                isG=0;
	                return;
	            }
	            else if(tree[j][i]!=0&&action[i].last-tree[j][i]<action[j].last){
	                action[j].last = action[i].last-tree[j][i];
	            }
	        }
	    }
	}
	
	
	
	void scan(int n){
	    if(isG==0){
	        printf("0\n");
	        return;
	    }
	    printf("%d\n",action[n].early);
	    for(int i=1;i<=n;i++){
	        for(int j=n;j>0;j--){
	            if(tree[i][j]!=0&&action[j].last-action[i].early-tree[i][j]==0){
	                printf("%d->%d\n",i,j);
	            }
	
	        }
	    }
	}
	
690e2a029f3dc80179f334ff4c71e076|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|79|27|v|cpp
	++){
2936599221f360d0f700c6c306f3dd75|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|81|20|v|cpp
	action[temp].last-tree[i][temp]
7f243894b21ac0dc66d14fd0f55b3e84|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|83|1|V|cpp
	                if(action[temp].last-tree[i][temp]<=action[i].early){
	                    action[i].early = action[temp].last-tree[i][temp];
	                }
e63ac7bb24713cd5ac15bf513015ed77|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|84|21|V|cpp
	                    action[i].early = action[temp].last-tree[i][temp];
550312942b57df50997274c4712624e2|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|100|5|^v|cpp
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
1dff74205e0a6b8d47f99ff90e583605|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|86|5|v|cpp
	            if(action[temp].last-tree[i][temp]-action[i].early<0){
	                    isG = 0;
	                    return;
	                }
	                else 
1a40d06070cfcdd7652199890be04fcf|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	typedef struct{
	    int early,last;
	}Action;
	
	void createTree(int n,int m);
	void scan(int n);
	
	int end[200] = {0};
	int out[200] = {0};
	int tree[200][200] = {0};  // 0 disconnect  1 indegree  2 outdegree
	Action action[200];
	int isG = 0;
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createTree(n,m);
	    scan(n);
	
	    for(int i=1;i<=n;i++){
	        printf("%d:",end[i]);
	        for(int j=1;j<=n;j++){
	
	            printf("%d ",tree[i][j]);
	        }
	        printf("\n");
	    }
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            if(tree[i][j]!=0){
	                printf("i %d %d;",action[i].early,action[i].last);
	                printf("j %d %d||",action[j].early,action[j].last);
	            }
	        }
	        printf("\n");
	    }
	}
	
	
	void createTree(int n,int m){
	    int max = 0;
	    for(int i=1;i<=n;i++){
	        action[i].early = 0;
	        action[i].last = 9999;
	    }
	    int a,b,t;
	    int i=0;
	    while(i<m){
	        scanf("%d %d %d",&a,&b,&t);
	        tree[a][b] = t;
	        end[a] = 0;
	        end[b] = 1;
	        out[a]++;
	        if(action[b].early<action[a].early+t){
	            action[b].early=action[a].early+t;
	            max = action[b].early;
	        }
	        i++;
	    }
	
	    for(i=1;i<=n;i++){
	        if(end[i]){
	            action[i].last = max;
	        }
	    }
	    
	
	    int front=-1,rear=-1;
	    int q[200];
	    int temp;
	    isG = 1;
	    for(int i=1;i<=n;i++){
	        if(out[i]==0){
	            q[++rear] = i;
	            action[i].last = max;
	        }
	    }
	
	    while(rear>front){
	        temp=q[++front];
	        for(int i=n;i>0;i--){
	            if(tree[i][temp]!=0){
	                if(action[temp].last-tree[i][temp]<=action[i].last){
	                    action[i].last = action[temp].last-tree[i][temp];
	                }
	                out[i]--;
	                if(out[i]==0){
	                    q[++rear] = i;
	                }
	            }
	        }
	    }
	
	    //for(i=n;i>0;i--){
	    //    isG = 1;
	    //    for(int j=1;j<=n;j++){
	    //        if(tree[j][i]!=0&&action[i].last-tree[j][i]-action[j].early<0){
	    //            isG=0;
	    //            return;
	    //        }
	    //        else if(tree[j][i]!=0&&action[i].last-tree[j][i]<action[j].last){
	    //            action[j].last = action[i].last-tree[j][i];
	    //        }
	    //    }
	    //}
	}
	
	
	
	void scan(int n){
	    if(isG==0){
	        printf("0\n");
	        return;
	    }
	    printf("%d\n",action[n].early);
	    for(int i=1;i<=n;i++){
	        for(int j=n;j>0;j--){
	            if(tree[i][j]!=0&&action[j].last-action[i].early-tree[i][j]==0){
	                printf("%d->%d\n",i,j);
	            }
	
	        }
	    }
	}
	
e03d9bad1999310c63d2f524d2ce1b7f|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|90|68|v|cpp
	arly
274e88659689754106a3306bd381c452|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	typedef struct{
	    int early,last;
	}Action;
	
	void createTree(int n,int m);
	void scan(int n);
	
	int end[200] = {0};
	int out[200] = {0};
	int tree[200][200] = {0};  // 0 disconnect  1 indegree  2 outdegree
	Action action[200];
	int isG = 0;
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createTree(n,m);
	    scan(n);
	
	    for(int i=1;i<=n;i++){
	        printf("%d:",end[i]);
	        for(int j=1;j<=n;j++){
	
	            printf("%d ",tree[i][j]);
	        }
	        printf("\n");
	    }
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            if(tree[i][j]!=0){
	                printf("i %d %d;",action[i].early,action[i].last);
	                printf("j %d %d||",action[j].early,action[j].last);
	            }
	        }
	        printf("\n");
	    }
	}
	
	
	void createTree(int n,int m){
	    int max = 0;
	    for(int i=1;i<=n;i++){
	        action[i].early = 0;
	        action[i].last = 9999;
	    }
	    int a,b,t;
	    int i=0;
	    while(i<m){
	        scanf("%d %d %d",&a,&b,&t);
	        tree[a][b] = t;
	        end[a] = 0;
	        end[b] = 1;
	        out[a]++;
	        if(action[b].early<action[a].early+t){
	            action[b].early=action[a].early+t;
	            max = action[b].early;
	        }
	        i++;
	    }
	
	    for(i=1;i<=n;i++){
	        if(end[i]){
	            action[i].last = max;
	        }
	    }
	    
	
	    int front=-1,rear=-1;
	    int q[200];
	    int temp;
	    isG = 1;
	    for(int i=1;i<=n;i++){
	        if(out[i]==0){
	            q[++rear] = i;
	            action[i].last = max;
	        }
	    }
	
	    while(rear>front){
	        temp=q[++front];
	        for(int i=n;i>0;i--){
	            if(tree[i][temp]!=0){
	                if(action[temp].last-tree[i][temp]-action[i].early<0){
	                    isG = 0;
	                    return;
	                }
	                else if(action[temp].last-tree[i][temp]<=action[i].last){
	                    action[i].last = action[temp].last-tree[i][temp];
	                }
	                out[i]--;
	                if(out[i]==0){
	                    q[++rear] = i;
	                }
	            }
	        }
	    }
	
	    //for(i=n;i>0;i--){
	    //    isG = 1;
	    //    for(int j=1;j<=n;j++){
	    //        if(tree[j][i]!=0&&action[i].last-tree[j][i]-action[j].early<0){
	    //            isG=0;
	    //            return;
	    //        }
	    //        else if(tree[j][i]!=0&&action[i].last-tree[j][i]<action[j].last){
	    //            action[j].last = action[i].last-tree[j][i];
	    //        }
	    //    }
	    //}
	}
	
	
	
	void scan(int n){
	    if(isG==0){
	        printf("0\n");
	        return;
	    }
	    printf("%d\n",action[n].early);
	    for(int i=1;i<=n;i++){
	        for(int j=n;j>0;j--){
	            if(tree[i][j]!=0&&action[j].last-action[i].early-tree[i][j]==0){
	                printf("%d->%d\n",i,j);
	            }
	
	        }
	    }
	}
	
cb0275bd5894b01e2a54c309687146d4|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|75|1|V|cpp
	    for(int i=1;i<=n;i++){
	        if(out[i]==0){
	            q[++rear] = i;
	            action[i].last = max;
	        }
	    }
	
	    while(rear>front){
	        temp=q[++front];
	        for(int i=n;i>0;i--){
	            if(tree[i][temp]!=0){
	                if(action[temp].last-tree[i][temp]-action[i].early<0){
	                    isG = 0;
	                    return;
	                }
	                else if(action[temp].last-tree[i][temp]<=action[i].last){
	                    action[i].last = action[temp].last-tree[i][temp];
	                }
	                out[i]--;
	                if(out[i]==0){
	                    q[++rear] = i;
	                }
	            }
	        }
	    }
85614a317d9e423eb74bb6711942d8be|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|12|1|V|cpp
	int out[200] = {0};
e704b065a0df4e7e54a85cdcac3adf70|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|73|1|V|cpp
	    int front=-1,rear=-1;
	    int q[200];
	    int temp;
	    isG = 1;
5dbd487983d3c4cbc417f7e9ee01efe7|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|89|24|V|cpp
	                if(action[temp].last-tree[i][temp]-action[i].early<0){
	                    isG = 0;
59755c2b03975ae827bb933fa003b5f9|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|89|21|V|cpp
	                    return;
	                }
ee5f317fa046c9a8cc36f63dece5101f|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|92|17|V|cpp
	                out[i]--;
0bcca0da2ba49655aba4dc49dbf5cbd5|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|89|26|V|cpp
	                if(action[temp].last-tree[i][temp]<=action[i].last){
	                    action[i].last = action[temp].last-tree[i][temp];
81789648c34c70b46164eb7a6f015c95|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|89|17|V|cpp
	                }
3ef871ec8ecab56d2722c7f94957bf66|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|89|20|v|cpp
	tree[temp][i]+action[temp].early
2a9f05cc1bcb8e1b0bea78bd68b9bd0a|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|109|5|V|cpp
	    temp;
c9fe8231853f363e12dbee8cd35d57c2|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|77|1|V|cpp
	    isG = 1;
a6b1edd56ea3d82f1efc81e4bab18724|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|121|17|v|cpp
	if(action[temp].last-tree[i][temp]-action[i].early<0){
	                    isG = 0;
	                    return;
	                }
	                else 
c12e7b5875b5c9bd7dff41e8a6bf3567|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	typedef struct{
	    int early,last;
	}Action;
	
	void createTree(int n,int m);
	void scan(int n);
	
	int end[200] = {0};
	int out[200] = {0};
	int in[200] = {0};
	int tree[200][200] = {0};  // 0 disconnect  1 indegree  2 outdegree
	Action action[200];
	int isG = 0;
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createTree(n,m);
	    scan(n);
	
	//    for(int i=1;i<=n;i++){
	//        printf("%d:",end[i]);
	//        for(int j=1;j<=n;j++){
	//
	//            printf("%d ",tree[i][j]);
	//        }
	//        printf("\n");
	//    }
	//    for(int i=1;i<=n;i++){
	//        for(int j=1;j<=n;j++){
	//            if(tree[i][j]!=0){
	//                printf("i %d %d;",action[i].early,action[i].last);
	//                printf("j %d %d||",action[j].early,action[j].last);
	//            }
	//        }
	//        printf("\n");
	//    }
	}
	
	
	void createTree(int n,int m){
	    int max = 0;
	    for(int i=1;i<=n;i++){
	        action[i].early = 0;
	        action[i].last = 9999;
	    }
	    int a,b,t;
	    int i=0;
	    while(i<m){
	        scanf("%d %d %d",&a,&b,&t);
	        tree[a][b] = t;
	        end[a] = 0;
	        end[b] = 1;
	        out[a]++;
	        in[b]++;
	     //   if(action[b].early<action[a].early+t){
	     //       action[b].early=action[a].early+t;
	     //       max = action[b].early;
	     //   }
	        i++;
	    }
	
	    for(i=1;i<=n;i++){
	        if(end[i]){
	            action[i].last = max;
	        }
	    }
	    
	
	    int front=-1,rear=-1;
	    int q[200];
	    int temp;
	    int count=0;
	    isG = 1;
	    for(int i=1;i<=n;i++){
	        if(in[i]==0){
	            q[++rear] = i;
	            action[i].last = max;
	        }
	    }
	
	    while(rear>front){
	        temp=q[++front];
	        count++;
	        for(int i=1;i<=n;i++){
	            if(tree[temp][i]!=0){
	                in[i]--;
	                if(tree[temp][i]+action[temp].early>action[i].early){
	                    action[i].early = tree[temp][i]+action[temp].early;
	                }
	                if(in[i]==0){
	                    q[++rear] = i;
	                }
	            }
	        }
	    }
	
	
	    if(count!=n){
	        isG = 0;
	        return;
	    }
	
	
	    front=-1,rear=-1;
	    int qu[200];
	    for(int i=1;i<=n;i++){
	        if(out[i]==0){
	            qu[++rear] = i;
	            action[i].last = max;
	        }
	    }
	
	    while(rear>front){
	        temp=qu[++front];
	        for(int i=n;i>0;i--){
	            if(tree[i][temp]!=0){
	                if(action[temp].last-tree[i][temp]<=action[i].last){
	                    action[i].last = action[temp].last-tree[i][temp];
	                }
	                out[i]--;
	                if(out[i]==0){
	                    qu[++rear] = i;
	                }
	            }
	        }
	    }
	
	    //for(i=n;i>0;i--){
	    //    isG = 1;
	    //    for(int j=1;j<=n;j++){
	    //        if(tree[j][i]!=0&&action[i].last-tree[j][i]-action[j].early<0){
	    //            isG=0;
	    //            return;
	    //        }
	    //        else if(tree[j][i]!=0&&action[i].last-tree[j][i]<action[j].last){
	    //            action[j].last = action[i].last-tree[j][i];
	    //        }
	    //    }
	    //}
	}
	
	
	
	void scan(int n){
	    if(isG==0){
	        printf("0\n");
	        return;
	    }
	    printf("%d\n",action[n].early);
	    for(int i=1;i<=n;i++){
	        for(int j=n;j>0;j--){
	            if(tree[i][j]!=0&&action[j].last-action[i].early-tree[i][j]==0){
	                printf("%d->%d\n",i,j);
	            }
	
	        }
	    }
	}
	
6b80feac5909d8e9454e729c1634a2a4|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	typedef struct{
	    int early,last;
	}Action;
	
	void createTree(int n,int m);
	void scan(int n);
	
	int end[200] = {0};
	int out[200] = {0};
	int in[200] = {0};
	int tree[200][200] = {0};  // 0 disconnect  1 indegree  2 outdegree
	Action action[200];
	int isG = 0;
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createTree(n,m);
	    scan(n);
	
	//    for(int i=1;i<=n;i++){
	//        printf("%d:",end[i]);
	//        for(int j=1;j<=n;j++){
	//
	//            printf("%d ",tree[i][j]);
	//        }
	//        printf("\n");
	//    }
	//    for(int i=1;i<=n;i++){
	//        for(int j=1;j<=n;j++){
	//            if(tree[i][j]!=0){
	//                printf("i %d %d;",action[i].early,action[i].last);
	//                printf("j %d %d||",action[j].early,action[j].last);
	//            }
	//        }
	//        printf("\n");
	//    }
	}
	
	
	void createTree(int n,int m){
	    int max = 0;
	    for(int i=1;i<=n;i++){
	        action[i].early = 0;
	        action[i].last = 9999;
	        in[i]=  0;
	        out[i] = 0;
	    }
	    int a,b,t;
	    int i=0;
	    while(i<m){
	        scanf("%d %d %d",&a,&b,&t);
	        tree[a][b] = t;
	        end[a] = 0;
	        end[b] = 1;
	        out[a]++;
	        in[b]++;
	     //   if(action[b].early<action[a].early+t){
	     //       action[b].early=action[a].early+t;
	     //       max = action[b].early;
	     //   }
	        i++;
	    }
	
	    for(i=1;i<=n;i++){
	        if(end[i]){
	            action[i].last = max;
	        }
	    }
	    
	
	    
	
	    int front=-1,rear=-1;
	    int q[200];
	    int temp;
	    int count=0;
	    isG = 1;
	    for(int i=1;i<=n;i++){
	        if(in[i]==0){
	            q[++rear] = i;
	            action[i].last = max;
	        }
	    }
	
	    while(rear>front){
	        temp=q[++front];
	        count++;
	        for(int i=1;i<=n;i++){
	            if(tree[temp][i]!=0){
	                in[i]--;
	                if(tree[temp][i]+action[temp].early>action[i].early){
	                    action[i].early = tree[temp][i]+action[temp].early;
	                }
	                if(in[i]==0){
	                    q[++rear] = i;
	                }
	            }
	        }
	    }
	
	
	    if(count!=n){
	        isG = 0;
	        return;
	    }
	
	
	    front=-1,rear=-1;
	    int qu[200];
	    for(int i=1;i<=n;i++){
	        if(out[i]==0){
	            qu[++rear] = i;
	            action[i].last = max;
	        }
	    }
	
	    while(rear>front){
	        temp=qu[++front];
	        for(int i=n;i>0;i--){
	            if(tree[i][temp]!=0){
	                if(action[temp].last-tree[i][temp]<=action[i].last){
	                    action[i].last = action[temp].last-tree[i][temp];
	                }
	                out[i]--;
	                if(out[i]==0){
	                    qu[++rear] = i;
	                }
	            }
	        }
	    }
	
	    //for(i=n;i>0;i--){
	    //    isG = 1;
	    //    for(int j=1;j<=n;j++){
	    //        if(tree[j][i]!=0&&action[i].last-tree[j][i]-action[j].early<0){
	    //            isG=0;
	    //            return;
	    //        }
	    //        else if(tree[j][i]!=0&&action[i].last-tree[j][i]<action[j].last){
	    //            action[j].last = action[i].last-tree[j][i];
	    //        }
	    //    }
	    //}
	}
	
	
	
	void scan(int n){
	    if(isG==0){
	        printf("0\n");
	        return;
	    }
	    printf("%d\n",action[n].early);
	    for(int i=1;i<=n;i++){
	        for(int j=n;j>0;j--){
	            if(tree[i][j]!=0&&action[j].last-action[i].early-tree[i][j]==0){
	                printf("%d->%d\n",i,j);
	            }
	
	        }
	    }
	}
	
51e46cee11782f965a236b0db3246b4d|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|82|1|V|cpp
	    for(int i=1;i<=n;i++){
	        if(in[i]==0){
	            q[++rear] = i;
	            action[i].last = max;
	        }
	    }
a41d3188468cc097ff79c955e118f29c|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|85|1|V|cpp
	            action[i].last = max;
8d562ff9577c93a317f8bf410dfc9b25|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|77|1|V|cpp
	    int front=-1,rear=-1;
	    int q[200];
	    int temp;
	    int count=0;
	    isG = 1;
	    for(int i=1;i<=n;i++){
	        if(in[i]==0){
	            q[++rear] = i;
	            action[i].last = max;
	        }
	    }
	
	    while(rear>front){
	        temp=q[++front];
	        count++;
	        for(int i=1;i<=n;i++){
	            if(tree[temp][i]!=0){
	                in[i]--;
	                if(tree[temp][i]+action[temp].early>action[i].early){
	                    action[i].early = tree[temp][i]+action[temp].early;
	                }
	                if(in[i]==0){
	                    q[++rear] = i;
	                }
	            }
	        }
	    }
	
	
	    if(count!=n){
	        isG = 0;
	        return;
	    }
	
	
	    front=-1,rear=-1;
	    int qu[200];
	    for(int i=1;i<=n;i++){
	        if(out[i]==0){
	            qu[++rear] = i;
	            action[i].last = max;
	        }
	    }
	
	    while(rear>front){
	        temp=qu[++front];
	        for(int i=n;i>0;i--){
	            if(tree[i][temp]!=0){
	                if(action[temp].last-tree[i][temp]<action[i].last){
	                    action[i].last = action[temp].last-tree[i][temp];
	                }
	                out[i]--;
	                if(out[i]==0){
	                    qu[++rear] = i;
	                }
	            }
	        }
	    }
fc67e96f8918467c6125712595716c3f|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|53|5|V|cpp
	    int i=0;
a806f83c6ff2763c8592f68f165ca7a4|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|64|9|V|cpp
	        i++;
90d76b27790c37e064b058a3e8fbcae0|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|88|20|^v|cpp
	action[i].early<action[temp]+tree[temp][i]
cedb1e0848aee2edcb13a39652954f55|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|100|5|V|cpp
	    i
6b5c8abebd407453498a859b26a39a9b|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|120|21|V|cpp
	                    action
a8886f078122018635058bb879bfd3fa|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|60|2|^v|cpp
	//
	//
	//
	//
e74fe204984ecdb3bfb86a9ffabed1a6|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	typedef struct{
	    int early,last;
	}Action;
	
	void createTree(int n,int m);
	void scan(int n);
	
	int end[200] = {0};
	int out[200] = {0};
	int in[200] = {0};
	int tree[200][200] = {0};  // 0 disconnect  1 indegree  2 outdegree
	Action action[200];
	int isG = 1;
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createTree(n,m);
	    scan(n);
	
	//    for(int i=1;i<=n;i++){
	//        printf("%d:",end[i]);
	//        for(int j=1;j<=n;j++){
	//
	//            printf("%d ",tree[i][j]);
	//        }
	//        printf("\n");
	//    }
	//    for(int i=1;i<=n;i++){
	//        for(int j=1;j<=n;j++){
	//            if(tree[i][j]!=0){
	//                printf("i %d %d;",action[i].early,action[i].last);
	//                printf("j %d %d||",action[j].early,action[j].last);
	//            }
	//        }
	//        printf("\n");
	//    }
	}
	
	
	void createTree(int n,int m){
	    int max = 0;
	    for(int i=1;i<=n;i++){
	        action[i].early = 0;
	        action[i].last = 9999;
	        in[i]=  0;
	        out[i] = 0;
	    }
	    int a,b,t;
	    while(m--){
	        scanf("%d %d %d",&a,&b,&t);
	        tree[a][b] = t;
	        end[a] = 0;
	        end[b] = 1;
	        out[a]++;
	        in[b]++;
	 //       if(action[b].early<action[a].early+t){
	 //           action[b].early=action[a].early+t;
	 //           max = action[b].early;
	 //       }
	    }
	
	 //   for(i=1;i<=n;i++){
	 //       if(end[i]){
	 //           action[i].last = max;
	 //       }
	 //   }
	    
	
	    
	    int q[200]={0};
	    int front=-1,rear=-1;
	    int count=0;
	    int temp;
	
	    for(int i=1;i<=n;i++){
	        if(in[i]==0){
	            q[++rear]=i;
	        }
	    }
	    while(rear>front){
	        temp=q[++front];
	        count++;
	        for(int i=1;i<=n;i++){
	            if(tree[temp][i]!=0){
	                if(action[i].early<action[temp].early+tree[temp][i]){
	                    action[i].early=action[temp].early+tree[temp][i];
	                }
	                in[i]--;
	                if(in[i]==0){
	                    q[++rear]=i;
	                }
	            }
	        }
	    }
	
	
	    if(count!=n){
	        isG=0;
	        return;
	    }
	
	    int qu[200]={0};
	    front=rear=-1;
	
	    for(int i=1;i<=n;i++){
	        if(action[i].early>max){
	            max = action[i].early;
	        }
	    }
	    for(int i=n;i>0;i--){
	        if(out[i]==0){
	            qu[++rear]=i;
	            action[i].last = max;
	        }
	    }
	    while(rear>front){
	        temp=qu[++front];
	        for(int i=n;i>0;i--){
	            if(tree[i][temp]!=0){
	                if(action[temp].last-tree[i][temp]<action[i].last){
	                    action[i].last = action[temp].last-tree[i][temp];
	                }
	                out[i]--;
	                if(out[i]==0){
	                    qu[++rear] = i;
	                }
	            }
	        }
	    }
	
	    //for(i=n;i>0;i--){
	    //    isG = 1;
	    //    for(int j=1;j<=n;j++){
	    //        if(tree[j][i]!=0&&action[i].last-tree[j][i]-action[j].early<0){
	    //            isG=0;
	    //            return;
	    //        }
	    //        else if(tree[j][i]!=0&&action[i].last-tree[j][i]<action[j].last){
	    //            action[j].last = action[i].last-tree[j][i];
	    //        }
	    //    }
	    //}
	}
	
	
	
	void scan(int n){
	    if(isG==0){
	        printf("0\n");
	        return;
	    }
	    printf("%d\n",action[n].early);
	    for(int i=1;i<=n;i++){
	        for(int j=n;j>0;j--){
	            if(tree[i][j]!=0&&action[j].last-action[i].early-tree[i][j]==0){
	                printf("%d->%d\n",i,j);
	            }
	
	        }
	    }
	}
	
285f2b8938932809aaf286f35102f488|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|109|2|^v|cpp
	//
	//
	//
	//
	//
66c58af230fe8ad374c3b2e9d2890cce|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	typedef struct{
	    int early,last;
	}Action;
	
	void createTree(int n,int m);
	void scan(int n);
	
	int end[200] = {0};
	int out[200] = {0};
	int in[200] = {0};
	int tree[200][200] = {0};  // 0 disconnect  1 indegree  2 outdegree
	Action action[200];
	int isG = 1;
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createTree(n,m);
	    scan(n);
	
	//    for(int i=1;i<=n;i++){
	//        printf("%d:",end[i]);
	//        for(int j=1;j<=n;j++){
	//
	//            printf("%d ",tree[i][j]);
	//        }
	//        printf("\n");
	//    }
	//    for(int i=1;i<=n;i++){
	//        for(int j=1;j<=n;j++){
	//            if(tree[i][j]!=0){
	//                printf("i %d %d;",action[i].early,action[i].last);
	//                printf("j %d %d||",action[j].early,action[j].last);
	//            }
	//        }
	//        printf("\n");
	//    }
	}
	
	
	void createTree(int n,int m){
	    int max = 0;
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            tree[i][j]=-1;
	        }
	        action[i].early = 0;
	        action[i].last = 99999;
	        in[i]=  0;
	        out[i] = 0;
	    }
	    int a,b,t;
	    while(m--){
	        scanf("%d %d %d",&a,&b,&t);
	        tree[a][b] = t;
	        end[a] = 0;
	        end[b] = 1;
	        out[a]++;
	        in[b]++;
	  //      if(action[b].early<action[a].early+t){
	  //          action[b].early=action[a].early+t;
	  //          max = action[b].early;
	  //      }
	    }
	
	 //   for(i=1;i<=n;i++){
	 //       if(end[i]){
	 //           action[i].last = max;
	 //       }
	 //   }
	    
	
	    
	    int q[200]={0};
	    int front=-1,rear=-1;
	    int count=0;
	    int temp;
	
	    for(int i=1;i<=n;i++){
	        if(in[i]==0){
	            q[++rear]=i;
	        }
	    }
	    while(rear>front){
	        temp=q[++front];
	        count++;
	        for(int i=1;i<=n;i++){
	            if(tree[temp][i]!=-1){
	                if(action[i].early<action[temp].early+tree[temp][i]){
	                    action[i].early=action[temp].early+tree[temp][i];
	                }
	                in[i]--;
	                if(in[i]==0){
	                    q[++rear]=i;
	                }
	            }
	        }
	    }
	
	
	    if(count!=n){
	        isG=0;
	        return;
	    }
	
	    int qu[200]={0};
	    front=rear=-1;
	
	    for(int i=1;i<=n;i++){
	        if(action[i].early>max){
	            max = action[i].early;
	        }
	    }
	    for(int i=1;i<=n;i++){
	        if(out[i]==0){
	            qu[++rear]=i;
	            action[i].last = max;
	        }
	    }
	    while(rear>front){
	        temp=qu[++front];
	        for(int i=n;i>0;i--){
	            if(tree[i][temp]>=0){
	                if(action[temp].last-tree[i][temp]<action[i].last){
	                    action[i].last = action[temp].last-tree[i][temp];
	                }
	                out[i]--;
	                if(out[i]==0){
	                    qu[++rear] = i;
	                }
	            }
	        }
	    }
	
	    //for(i=n;i>0;i--){
	    //    isG = 1;
	    //    for(int j=1;j<=n;j++){
	    //        if(tree[j][i]!=0&&action[i].last-tree[j][i]-action[j].early<0){
	    //            isG=0;
	    //            return;
	    //        }
	    //        else if(tree[j][i]!=0&&action[i].last-tree[j][i]<action[j].last){
	    //            action[j].last = action[i].last-tree[j][i];
	    //        }
	    //    }
	    //}
	}
	
	
	
	void scan(int n){
	    if(isG==0){
	        printf("0\n");
	        return;
	    }
	    printf("%d\n",action[n].early);
	    for(int i=1;i<=n;i++){
	        for(int j=n;j>0;j--){
	            if(tree[i][j]!=0&&action[j].last-action[i].early-tree[i][j]==0){
	                printf("%d->%d\n",i,j);
	            }
	
	        }
	    }
	}
	
690db9c1945ffe181ef0b15220e70303|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|59|19|V|cpp
	        end[a] = 0;
	        end[b] = 1;
d9a25a3c40a2bc0c8eae7842e60a2e16|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	typedef struct{
	    int early,last;
	}Action;
	
	void createTree(int n,int m);
	void scan(int n);
	
	int end[200] = {0};
	int out[200] = {0};
	int in[200] = {0};
	int tree[200][200] = {0};  // 0 disconnect  1 indegree  2 outdegree
	Action action[200];
	int isG = 1;
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createTree(n,m);
	    scan(n);
	
	//    for(int i=1;i<=n;i++){
	//        printf("%d:",end[i]);
	//        for(int j=1;j<=n;j++){
	//
	//            printf("%d ",tree[i][j]);
	//        }
	//        printf("\n");
	//    }
	//    for(int i=1;i<=n;i++){
	//        for(int j=1;j<=n;j++){
	//            if(tree[i][j]!=0){
	//                printf("i %d %d;",action[i].early,action[i].last);
	//                printf("j %d %d||",action[j].early,action[j].last);
	//            }
	//        }
	//        printf("\n");
	//    }
	}
	
	
	void createTree(int n,int m){
	    int max = 0;
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            tree[i][j]=-1;
	        }
	        action[i].early = 0;
	        action[i].last = 99999;
	        in[i]=  0;
	        out[i] = 0;
	    }
	    int a,b,t;
	    while(m--){
	        scanf("%d %d %d",&a,&b,&t);
	        tree[a][b] = t;
	        out[a]++;
	        in[b]++;
	  //      if(action[b].early<action[a].early+t){
	  //          action[b].early=action[a].early+t;
	  //          max = action[b].early;
	  //      }
	    }
	
	 //   for(i=1;i<=n;i++){
	 //       if(end[i]){
	 //           action[i].last = max;
	 //       }
	 //   }
	    
	
	    
	    int q[2000]={0};
	    int front=-1,rear=-1;
	    int count=0;
	    int temp;
	
	    for(int i=1;i<=n;i++){
	        if(in[i]==0){
	            q[++rear]=i;
	        }
	    }
	    while(rear>front){
	        temp=q[++front];
	        count++;
	        for(int i=1;i<=n;i++){
	            if(tree[temp][i]>=0){
	                if(action[i].early<action[temp].early+tree[temp][i]){
	                    action[i].early=action[temp].early+tree[temp][i];
	                }
	                in[i]--;
	                if(in[i]==0){
	                    q[++rear]=i;
	                }
	            }
	        }
	    }
	
	
	    if(count!=n){
	        isG=0;
	        return;
	    }
	
	    int qu[2000]={0};
	    front=rear=-1;
	
	    for(int i=1;i<=n;i++){
	        if(action[i].early>max){
	            max = action[i].early;
	        }
	    }
	    for(int i=1;i<=n;i++){
	        if(out[i]==0){
	            qu[++rear]=i;
	            action[i].last = max;
	        }
	    }
	    while(rear>front){
	        temp=qu[++front];
	        for(int i=n;i>0;i--){
	            if(tree[i][temp]>=0){
	                if(action[temp].last-tree[i][temp]<action[i].last){
	                    action[i].last = action[temp].last-tree[i][temp];
	                }
	                out[i]--;
	                if(out[i]==0){
	                    qu[++rear] = i;
	                }
	            }
	        }
	    }
	
	    //for(i=n;i>0;i--){
	    //    isG = 1;
	    //    for(int j=1;j<=n;j++){
	    //        if(tree[j][i]!=0&&action[i].last-tree[j][i]-action[j].early<0){
	    //            isG=0;
	    //            return;
	    //        }
	    //        else if(tree[j][i]!=0&&action[i].last-tree[j][i]<action[j].last){
	    //            action[j].last = action[i].last-tree[j][i];
	    //        }
	    //    }
	    //}
	}
	
	
	
	void scan(int n){
	    if(isG==0){
	        printf("0\n");
	        return;
	    }
	    printf("%d\n",action[n].early);
	    for(int i=1;i<=n;i++){
	        if(action[i].early!=action[i].last)
	            continue;
	        for(int j=n;j>0;j--){
	            if(tree[i][j]>=0&&action[j].early==action[j].last&&action[j].last-action[i].early-tree[i][j]==0){
	                printf("%d->%d\n",i,j);
	            }
	
	        }
	    }
	}
	
2625a5b8bd1de25168119b4160b1b562|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|11|1|V|cpp
	int end[200] = {0};
38861f3f127f0a4f147eaf34843bcb2b|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	typedef struct{
	    int early,last;
	}Action;
	
	void createTree(int n,int m);
	void scan(int n);
	
	int out[200] = {0};
	int in[200] = {0};
	int tree[200][200] = {0};  // 0 disconnect  1 indegree  2 outdegree
	Action action[200];
	int isG = 1;
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createTree(n,m);
	    scan(n);
	
	//    for(int i=1;i<=n;i++){
	//        printf("%d:",end[i]);
	//        for(int j=1;j<=n;j++){
	//
	//            printf("%d ",tree[i][j]);
	//        }
	//        printf("\n");
	//    }
	//    for(int i=1;i<=n;i++){
	//        for(int j=1;j<=n;j++){
	//            if(tree[i][j]!=0){
	//                printf("i %d %d;",action[i].early,action[i].last);
	//                printf("j %d %d||",action[j].early,action[j].last);
	//            }
	//        }
	//        printf("\n");
	//    }
	}
	
	
	void createTree(int n,int m){
	    int max = 0;
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            tree[i][j]=-1;
	        }
	        action[i].early = 0;
	        action[i].last = 99999;
	        in[i]=  0;
	        out[i] = 0;
	    }
	    int a,b,t;
	    while(m--){
	        scanf("%d %d %d",&a,&b,&t);
	        tree[a][b] = t;
	        out[a]++;
	        in[b]++;
	  //      if(action[b].early<action[a].early+t){
	  //          action[b].early=action[a].early+t;
	  //          max = action[b].early;
	  //      }
	    }
	
	 //   for(i=1;i<=n;i++){
	 //       if(end[i]){
	 //           action[i].last = max;
	 //       }
	 //   }
	    
	
	    
	    int q[2000]={0};
	    int front=-1,rear=-1;
	    int count=0;
	    int temp;
	
	    for(int i=1;i<=n;i++){
	        if(in[i]==0){
	            q[++rear]=i;
	        }
	    }
	    while(rear>front){
	        temp=q[++front];
	        count++;
	        for(int i=1;i<=n;i++){
	            if(tree[temp][i]>=0){
	                if(action[i].early<action[temp].early+tree[temp][i]){
	                    action[i].early=action[temp].early+tree[temp][i];
	                }
	                in[i]--;
	                if(in[i]==0){
	                    q[++rear]=i;
	                }
	            }
	        }
	    }
	
	
	    if(count!=n){
	        isG=0;
	        return;
	    }
	
	    int qu[2000]={0};
	    front=rear=-1;
	
	    for(int i=1;i<=n;i++){
	        if(action[i].early>max){
	            max = action[i].early;
	        }
	    }
	    for(int i=1;i<=n;i++){
	        if(out[i]==0){
	            qu[++rear]=i;
	            action[i].last = max;
	        }
	    }
	    while(rear>front){
	        temp=qu[++front];
	        for(int i=n;i>0;i--){
	            if(tree[i][temp]>=0){
	                if(action[temp].last-tree[i][temp]<action[i].last){
	                    action[i].last = action[temp].last-tree[i][temp];
	                }
	                out[i]--;
	                if(out[i]==0){
	                    qu[++rear] = i;
	                }
	            }
	        }
	    }
	
	    //for(i=n;i>0;i--){
	    //    isG = 1;
	    //    for(int j=1;j<=n;j++){
	    //        if(tree[j][i]!=0&&action[i].last-tree[j][i]-action[j].early<0){
	    //            isG=0;
	    //            return;
	    //        }
	    //        else if(tree[j][i]!=0&&action[i].last-tree[j][i]<action[j].last){
	    //            action[j].last = action[i].last-tree[j][i];
	    //        }
	    //    }
	    //}
	}
	
	
	
	void scan(int n){
	    if(isG==0){
	        printf("0\n");
	        return;
	    }
	    printf("%d\n",action[n].early);
	    for(int i=1;i<=n;i++){
	        if(action[i].early!=action[i].last)
	            continue;
	        for(int j=n;j>0;j--){
	            if(tree[i][j]>=0&&action[j].early==action[j].last&&action[j].last-action[i].early-tree[i][j]==0){
	                printf("%d->%d\n",i,j);
	            }
	
	        }
	    }
	}
	
d3eb9a9233e52948740d7eb8c3062d14|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|51|26|v|cpp
	99999
773c1ba0a8b0eee30ca682a5a6441c2c|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|162|79|v|cpp
	action[i].early-
90c2ac180a753ab35650709267c6fb5f|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	typedef struct{
	    int early,last;
	}Action;
	
	void createTree(int n,int m);
	void scan(int n);
	
	int out[200] = {0};
	int in[200] = {0};
	int tree[200][200] = {0};  // 0 disconnect  1 indegree  2 outdegree
	Action action[200];
	int isG = 1;
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createTree(n,m);
	    scan(n);
	
	//    for(int i=1;i<=n;i++){
	//        printf("%d:",end[i]);
	//        for(int j=1;j<=n;j++){
	//
	//            printf("%d ",tree[i][j]);
	//        }
	//        printf("\n");
	//    }
	//    for(int i=1;i<=n;i++){
	//        for(int j=1;j<=n;j++){
	//            if(tree[i][j]!=0){
	//                printf("i %d %d;",action[i].early,action[i].last);
	//                printf("j %d %d||",action[j].early,action[j].last);
	//            }
	//        }
	//        printf("\n");
	//    }
	    return 0;
	}
	
	
	void createTree(int n,int m){
	    int max = 0;
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            tree[i][j]=-1;
	        }
	        action[i].early = 0;
	        action[i].last = 65535;
	        in[i]=  0;
	        out[i] = 0;
	    }
	    int a,b,t;
	    while(m--){
	        scanf("%d %d %d",&a,&b,&t);
	        tree[a][b] = t;
	        out[a]++;
	        in[b]++;
	  //      if(action[b].early<action[a].early+t){
	  //          action[b].early=action[a].early+t;
	  //          max = action[b].early;
	  //      }
	    }
	
	 //   for(i=1;i<=n;i++){
	 //       if(end[i]){
	 //           action[i].last = max;
	 //       }
	 //   }
	    
	
	    
	    int q[2000];
	    int front=-1,rear=-1;
	    int count=0;
	    int temp;
	
	    for(int i=1;i<=n;i++){
	        if(in[i]==0){
	            q[++rear]=i;
	        }
	    }
	    while(rear>front){
	        temp=q[++front];
	        count++;
	        for(int i=1;i<=n;i++){
	            if(tree[temp][i]>=0){
	                if(action[i].early<action[temp].early+tree[temp][i]){
	                    action[i].early=action[temp].early+tree[temp][i];
	                }
	                in[i]--;
	                if(in[i]==0){
	                    q[++rear]=i;
	                }
	            }
	        }
	    }
	
	
	    if(count!=n){
	        isG=0;
	        return;
	    }
	
	    int qu[2000];
	    front=rear=-1;
	
	    for(int i=1;i<=n;i++){
	        if(action[i].early>max){
	            max = action[i].early;
	        }
	    }
	    for(int i=1;i<=n;i++){
	        if(out[i]==0){
	            qu[++rear]=i;
	            action[i].last = max;
	        }
	    }
	    while(rear>front){
	        temp=qu[++front];
	        for(int i=n;i>0;i--){
	            if(tree[i][temp]>=0){
	                if(action[temp].last-tree[i][temp]<action[i].last){
	                    action[i].last = action[temp].last-tree[i][temp];
	                }
	                out[i]--;
	                if(out[i]==0){
	                    qu[++rear] = i;
	                }
	            }
	        }
	    }
	
	    //for(i=n;i>0;i--){
	    //    isG = 1;
	    //    for(int j=1;j<=n;j++){
	    //        if(tree[j][i]!=0&&action[i].last-tree[j][i]-action[j].early<0){
	    //            isG=0;
	    //            return;
	    //        }
	    //        else if(tree[j][i]!=0&&action[i].last-tree[j][i]<action[j].last){
	    //            action[j].last = action[i].last-tree[j][i];
	    //        }
	    //    }
	    //}
	}
	
	
	
	void scan(int n){
	    if(isG==0){
	        printf("0\n");
	        return;
	    }
	    printf("%d\n",action[n].early);
	    for(int i=1;i<=n;i++){
	        if(action[i].early!=action[i].last)
	            continue;
	        for(int j=n;j>0;j--){
	            if(tree[i][j]>=0&&action[j].early==action[j].last&&action[j].last-tree[i][j]==action[i].early){
	                printf("%d->%d\n",i,j);
	            }
	
	        }
	    }
	}
	
b67ab15e78d10ddab1730f4b28e791ff|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|13|21|v|cpp
	 // 0 disconnect  1 indegree  2 outdegree
568cc4bf2ecf1758c9a827aabba05eae|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|55|5|V|cpp
	    int a,b,t;
8571133f765b82f3c6278d61a1324b96|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|75|1|V|cpp
	    int q[2000];
	    int front=-1,rear=-1;
	    int count=0;
	    int temp;
	
	    for(int i=1;i<=n;i++){
	        if(in[i]==0){
	            q[++rear]=i;
	        }
	    }
	    while(rear>front){
	        temp=q[++front];
	        count++;
	        for(int i=1;i<=n;i++){
	            if(tree[temp][i]>=0){
	                if(action[i].early<action[temp].early+tree[temp][i]){
	                    action[i].early=action[temp].early+tree[temp][i];
	                }
	                in[i]--;
	                if(in[i]==0){
	                    q[++rear]=i;
	                }
	            }
	        }
	    }
	
	
	    if(count!=n){
	        isG=0;
	        return;
	    }
1072edf0d0ed6864740700e9a3972415|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|206|1|V|cpp
	        return;
84379cba2b4e8b634554274a03fd1c69|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|107|1|V|cpp
	    int qu[2000];
	    front=rear=-1;
	
	    for(int i=1;i<=n;i++){
	        if(action[i].early>max){
	            max = action[i].early;
	        }
	    }
	    for(int i=1;i<=n;i++){
	        if(out[i]==0){
	            qu[++rear]=i;
	            action[i].last = max;
	        }
	    }
	    while(rear>front){
	        temp=qu[++front];
	        for(int i=n;i>0;i--){
	            if(tree[i][temp]>=0){
	                if(action[temp].last-tree[i][temp]<action[i].last){
	                    action[i].last = action[temp].last-tree[i][temp];
	                }
	                out[i]--;
	                if(out[i]==0){
	                    qu[++rear] = i;
	                }
	            }
	        }
	    }
701582c3d1096f670dba03be08c8c030|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|67|1|V|cpp
	    early(n);
	    last(n);
93951bc62f0a49def2ae70fd98f17002|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|11|6|^v|cpp
	   
	   
30d2f40082659838fc76491e7e788f90|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	typedef struct{
	    int early,last;
	}Action;
	
	void createTree(int n,int m);
	void scan(int n);
	void early(int n);
	void last(int n);
	
	int out[200];
	int in[200];
	int tree[200][200]; 
	Action action[200];
	int isG = 1;
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createTree(n,m);
	    scan(n);
	
	//    for(int i=1;i<=n;i++){
	//        printf("%d:",end[i]);
	//        for(int j=1;j<=n;j++){
	//
	//            printf("%d ",tree[i][j]);
	//        }
	//        printf("\n");
	//    }
	//    for(int i=1;i<=n;i++){
	//        for(int j=1;j<=n;j++){
	//            if(tree[i][j]!=0){
	//                printf("i %d %d;",action[i].early,action[i].last);
	//                printf("j %d %d||",action[j].early,action[j].last);
	//            }
	//        }
	//        printf("\n");
	//    }
	    return 0;
	}
	
	
	void createTree(int n,int m){
	    int max = 0;
	    int a,b,t;
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            tree[i][j]=-1;
	        }
	        action[i].early = 0;
	        action[i].last = 65535;
	        in[i]=  0;
	        out[i] = 0;
	    }
	    while(m--){
	        scanf("%d %d %d",&a,&b,&t);
	        tree[a][b] = t;
	        out[a]++;
	        in[b]++;
	  //      if(action[b].early<action[a].early+t){
	  //          action[b].early=action[a].early+t;
	  //          max = action[b].early;
	  //      }
	    }
	
	    early(n);
	    last(n);
	
	 //   for(i=1;i<=n;i++){
	 //       if(end[i]){
	 //           action[i].last = max;
	 //       }
	 //   }
	    
	
	    
	 //   int q[2000];
	 //   int front=-1,rear=-1;
	 //   int count=0;
	 //   int temp;
	 //
	 //   for(int i=1;i<=n;i++){
	 //       if(in[i]==0){
	 //           q[++rear]=i;
	 //       }
	 //   }
	 //   while(rear>front){
	 //       temp=q[++front];
	 //       count++;
	 //       for(int i=1;i<=n;i++){
	 //           if(tree[temp][i]>=0){
	 //               if(action[i].early<action[temp].early+tree[temp][i]){
	 //                   action[i].early=action[temp].early+tree[temp][i];
	 //               }
	 //               in[i]--;
	 //               if(in[i]==0){
	 //                   q[++rear]=i;
	 //               }
	 //           }
	 //       }
	 //   }
	 //
	 //
	 //   if(count!=n){
	 //       isG=0;
	 //       return;
	 //   }
	
	//    int qu[2000];
	//    front=rear=-1;
	//
	//    for(int i=1;i<=n;i++){
	//        if(action[i].early>max){
	//            max = action[i].early;
	//        }
	//    }
	//    for(int i=1;i<=n;i++){
	//        if(out[i]==0){
	//            qu[++rear]=i;
	//            action[i].last = max;
	//        }
	//    }
	//    while(rear>front){
	//        temp=qu[++front];
	//        for(int i=n;i>0;i--){
	//            if(tree[i][temp]>=0){
	//                if(action[temp].last-tree[i][temp]<action[i].last){
	//                    action[i].last = action[temp].last-tree[i][temp];
	//                }
	//                out[i]--;
	//                if(out[i]==0){
	//                    qu[++rear] = i;
	//                }
	//            }
	//        }
	//    }
	
	    //for(i=n;i>0;i--){
	    //    isG = 1;
	    //    for(int j=1;j<=n;j++){
	    //        if(tree[j][i]!=0&&action[i].last-tree[j][i]-action[j].early<0){
	    //            isG=0;
	    //            return;
	    //        }
	    //        else if(tree[j][i]!=0&&action[i].last-tree[j][i]<action[j].last){
	    //            action[j].last = action[i].last-tree[j][i];
	    //        }
	    //    }
	    //}
	}
	
	
	
	void scan(int n){
	    if(isG==0){
	        printf("0\n");
	        return;
	    }
	    printf("%d\n",action[n].early);
	    for(int i=1;i<=n;i++){
	        if(action[i].early!=action[i].last)
	            continue;
	        for(int j=n;j>0;j--){
	            if(tree[i][j]>=0&&action[j].early==action[j].last&&action[j].last-tree[i][j]==action[i].early){
	                printf("%d->%d\n",i,j);
	            }
	
	        }
	    }
	}
	
	
	void last(int n){
	
	    int qu[2000];
	    int front,rear,temp;
	    int max=0;
	    front=rear=-1;
	
	    for(int i=1;i<=n;i++){
	        if(action[i].early>max){
	            max = action[i].early;
	        }
	    }
	    for(int i=1;i<=n;i++){
	        if(out[i]==0){
	            qu[++rear]=i;
	            action[i].last = max;
	        }
	    }
	    while(rear>front){
	        temp=qu[++front];
	        for(int i=n;i>0;i--){
	            if(tree[i][temp]>=0){
	                if(action[temp].last-tree[i][temp]<action[i].last){
	                    action[i].last = action[temp].last-tree[i][temp];
	                }
	                out[i]--;
	                if(out[i]==0){
	                    qu[++rear] = i;
	                }
	            }
	        }
	    }
	}
	
	
	void early(int n){
	    int q[2000];
	    int front=-1,rear=-1;
	    int count=0;
	    int temp;
	
	    for(int i=1;i<=n;i++){
	        if(in[i]==0){
	            q[++rear]=i;
	        }
	    }
	    while(rear>front){
	        temp=q[++front];
	        count++;
	        for(int i=1;i<=n;i++){
	            if(tree[temp][i]>=0){
	                if(action[i].early<action[temp].early+tree[temp][i]){
	                    action[i].early=action[temp].early+tree[temp][i];
	                }
	                in[i]--;
	                if(in[i]==0){
	                    q[++rear]=i;
	                }
	            }
	        }
	    }
	
	
	    if(count!=n){
	        isG=0;
	    }
	}
1f44126f11a776d653d7a4b8c3a3e522|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|142|5|V|cpp
	        isG = 1;
df84b501eb5f14cc39823d6cd6cdc97c|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|143|13|v|cpp
	if(tree[j][i]!=0&&action[i].last-tree[j][i]-action[j].early<0){
	                isG=0;
	                return;
	            }
	            else 
5e0ba018b38a9a8ee642d157e00efe03|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|72|5|V|cpp
	 //   for(i=1;i<=n;i++){
	 //       if(end[i]){
	 //           action[i].last = max;
	 //       }
	 //   }
	    
	
	    
	 //   int q[2000];
	 //   int front=-1,rear=-1;
	 //   int count=0;
	 //   int temp;
	 //
	 //   for(int i=1;i<=n;i++){
	 //       if(in[i]==0){
	 //           q[++rear]=i;
	 //       }
	 //   }
	 //   while(rear>front){
	 //       temp=q[++front];
	 //       count++;
	 //       for(int i=1;i<=n;i++){
	 //           if(tree[temp][i]>=0){
	 //               if(action[i].early<action[temp].early+tree[temp][i]){
	 //                   action[i].early=action[temp].early+tree[temp][i];
	 //               }
	 //               in[i]--;
	 //               if(in[i]==0){
	 //                   q[++rear]=i;
	 //               }
	 //           }
	 //       }
	 //   }
	 //
	 //
	 //   if(count!=n){
	 //       isG=0;
	 //       return;
	 //   }
	
	//    int qu[2000];
	//    front=rear=-1;
	//
	//    for(int i=1;i<=n;i++){
	//        if(action[i].early>max){
	//            max = action[i].early;
	//        }
	//    }
	//    for(int i=1;i<=n;i++){
	//        if(out[i]==0){
	//            qu[++rear]=i;
	//            action[i].last = max;
	//        }
	//    }
	//    while(rear>front){
	//        temp=qu[++front];
	//        for(int i=n;i>0;i--){
	//            if(tree[i][temp]>=0){
	//                if(action[temp].last-tree[i][temp]<action[i].last){
	//                    action[i].last = action[temp].last-tree[i][temp];
	//                }
	//                out[i]--;
	//                if(out[i]==0){
	//                    qu[++rear] = i;
	//                }
	//            }
	//        }
	//    }
	
	    //for(i=n;i>0;i--){
	    //    isG = 1;
	    //    for(int j=1;j<=n;j++){
	    //        if(tree[j][i]!=0&&action[i].last-tree[j][i]-action[j].early<0){
	    //            isG=0;
	    //            return;
	    //        }
	    //        else if(tree[j][i]!=0&&action[i].last-tree[j][i]<action[j].last){
	    //            action[j].last = action[i].last-tree[j][i];
	    //        }
	    //    }
	    //}
454daef4fcdcadd960eb178ca2e313c9|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|25|1|V|cpp
	//    for(int i=1;i<=n;i++){
	//        printf("%d:",end[i]);
	//        for(int j=1;j<=n;j++){
	//
	//            printf("%d ",tree[i][j]);
	//        }
	//        printf("\n");
	//    }
	//    for(int i=1;i<=n;i++){
	//        for(int j=1;j<=n;j++){
	//            if(tree[i][j]!=0){
	//                printf("i %d %d;",action[i].early,action[i].last);
	//                printf("j %d %d||",action[j].early,action[j].last);
	//            }
	//        }
	//        printf("\n");
	//    }
21d93bbc3fbc82c3da76b266c69367ef|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	typedef struct{
	    int early,last;
	}Action;
	
	void createTree(int n,int m);
	void scan(int n);
	void early(int n);
	void last(int n);
	
	int out[200];
	int in[200];
	int tree[200][200]; 
	Action action[200];
	int isG = 1;
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createTree(n,m);
	    early(n);
	    last(n);
	    scan(n);
	
	    return 0;
	}
	
	
	void createTree(int n,int m){
	    int max = 0;
	    int a,b,t;
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            tree[i][j]=-1;
	        }
	        action[i].early = 0;
	        action[i].last = 65535;
	        in[i]=  0;
	        out[i] = 0;
	    }
	    while(m--){
	        scanf("%d %d %d",&a,&b,&t);
	        tree[a][b] = t;
	        out[a]++;
	        in[b]++;
	  //      if(action[b].early<action[a].early+t){
	  //          action[b].early=action[a].early+t;
	  //          max = action[b].early;
	  //      }
	    }
	}
	
	
	
	void scan(int n){
	    if(isG==0){
	        printf("0\n");
	        return;
	    }
	    printf("%d\n",action[n].early);
	    for(int i=1;i<=n;i++){
	        if(action[i].early!=action[i].last)
	            continue;
	        for(int j=n;j>0;j--){
	            if(tree[i][j]>=0&&action[j].early==action[j].last&&action[j].last-tree[i][j]==action[i].early){
	                printf("%d->%d\n",i,j);
	            }
	
	        }
	    }
	}
	
	
	void last(int n){
	
	    int qu[2000];
	    int front,rear,temp;
	    int max=0;
	    front=rear=-1;
	
	    for(int i=1;i<=n;i++){
	        if(action[i].early>max){
	            max = action[i].early;
	        }
	    }
	    for(int i=1;i<=n;i++){
	        if(out[i]==0){
	            qu[++rear]=i;
	            action[i].last = max;
	        }
	    }
	    while(rear>front){
	        temp=qu[++front];
	        for(int i=n;i>0;i--){
	            if(tree[i][temp]>=0){
	                if(action[temp].last-tree[i][temp]<action[i].last){
	                    action[i].last = action[temp].last-tree[i][temp];
	                }
	                out[i]--;
	                if(out[i]==0){
	                    qu[++rear] = i;
	                }
	            }
	        }
	    }
	}
	
	
	void early(int n){
	    int q[2000];
	    int front=-1,rear=-1;
	    int count=0;
	    int temp;
	
	    for(int i=1;i<=n;i++){
	        if(in[i]==0){
	            q[++rear]=i;
	        }
	    }
	    while(rear>front){
	        temp=q[++front];
	        count++;
	        for(int i=1;i<=n;i++){
	            if(tree[temp][i]>=0){
	                if(action[i].early<action[temp].early+tree[temp][i]){
	                    action[i].early=action[temp].early+tree[temp][i];
	                }
	                in[i]--;
	                if(in[i]==0){
	                    q[++rear]=i;
	                }
	            }
	        }
	    }
	
	
	    if(count!=n){
	        isG=0;
	    }
	}
afac702618cba042104351a8fe90d954|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	typedef struct{
	    int early,last;
	}Action;
	
	void createTree(int n,int m);
	void scan(int n);
	
	int out[200];
	int in[200];
	int tree[200][200]; 
	Action action[200];
	int isG = 1;
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createTree(n,m);
	    scan(n);
	
	//    for(int i=1;i<=n;i++){
	//        printf("%d:",end[i]);
	//        for(int j=1;j<=n;j++){
	//
	//            printf("%d ",tree[i][j]);
	//        }
	//        printf("\n");
	//    }
	//    for(int i=1;i<=n;i++){
	//        for(int j=1;j<=n;j++){
	//            if(tree[i][j]!=0){
	//                printf("i %d %d;",action[i].early,action[i].last);
	//                printf("j %d %d||",action[j].early,action[j].last);
	//            }
	//        }
	//        printf("\n");
	//    }
	    return 0;
	}
	
	
	void createTree(int n,int m){
	    int max = 0;
	    int a,b,t;
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            tree[i][j]=-1;
	        }
	        action[i].early = 0;
	        action[i].last = 65535;
	        in[i]=  0;
	        out[i] = 0;
	    }
	    while(m--){
	        scanf("%d %d %d",&a,&b,&t);
	        tree[a][b] = t;
	        out[a]++;
	        in[b]++;
	  //      if(action[b].early<action[a].early+t){
	  //          action[b].early=action[a].early+t;
	  //          max = action[b].early;
	  //      }
	    }
	
	 //   for(i=1;i<=n;i++){
	 //       if(end[i]){
	 //           action[i].last = max;
	 //       }
	 //   }
	    
	
	    
	    int q[2000];
	    int front=-1,rear=-1;
	    int count=0;
	    int temp;
	
	    for(int i=1;i<=n;i++){
	        if(in[i]==0){
	            q[++rear]=i;
	        }
	    }
	    while(rear>front){
	        temp=q[++front];
	        count++;
	        for(int i=1;i<=n;i++){
	            if(tree[temp][i]>=0){
	                if(action[i].early<action[temp].early+tree[temp][i]){
	                    action[i].early=action[temp].early+tree[temp][i];
	                }
	                in[i]--;
	                if(in[i]==0){
	                    q[++rear]=i;
	                }
	            }
	        }
	    }
	
	
	    if(count!=n){
	        isG=0;
	        return;
	    }
	
	    int qu[2000];
	    front=rear=-1;
	
	    for(int i=1;i<=n;i++){
	        if(action[i].early>max){
	            max = action[i].early;
	        }
	    }
	    for(int i=1;i<=n;i++){
	        if(out[i]==0){
	            qu[++rear]=i;
	            action[i].last = max;
	        }
	    }
	    while(rear>front){
	        temp=qu[++front];
	        for(int i=n;i>0;i--){
	            if(tree[i][temp]>=0){
	                if(action[temp].last-tree[i][temp]<action[i].last){
	                    action[i].last = action[temp].last-tree[i][temp];
	                }
	                out[i]--;
	                if(out[i]==0){
	                    qu[++rear] = i;
	                }
	            }
	        }
	    }
	
	    //for(i=n;i>0;i--){
	    //    isG = 1;
	    //    for(int j=1;j<=n;j++){
	    //        if(tree[j][i]!=0&&action[i].last-tree[j][i]-action[j].early<0){
	    //            isG=0;
	    //            return;
	    //        }
	    //        else if(tree[j][i]!=0&&action[i].last-tree[j][i]<action[j].last){
	    //            action[j].last = action[i].last-tree[j][i];
	    //        }
	    //    }
	    //}
	}
	
	
	
	void scan(int n){
	    if(isG==0){
	        printf("0\n");
	        return;
	    }
	    printf("%d\n",action[n].early);
	    for(int i=1;i<=n;i++){
	        if(action[i].early!=action[i].last)
	            continue;
	        for(int j=n;j>0;j--){
	            if(tree[i][j]>=0&&action[j].early==action[j].last&&action[j].last-tree[i][j]==action[i].early){
	                printf("%d->%d\n",i,j);
	            }
	
	        }
	    }
	}
	
ac44f26838c259bddb5735a560abb81a|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|136|1|V|cpp
	    //for(i=n;i>0;i--){
	    //    isG = 1;
	    //    for(int j=1;j<=n;j++){
	    //        if(tree[j][i]!=0&&action[i].last-tree[j][i]-action[j].early<0){
	    //            isG=0;
	    //            return;
	    //        }
	    //        else if(tree[j][i]!=0&&action[i].last-tree[j][i]<action[j].last){
	    //            action[j].last = action[i].last-tree[j][i];
	    //        }
	    //    }
	    //}
381225f1415544e7cbaa90acfb4e155f|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|61|1|V|cpp
	  //      if(action[b].early<action[a].early+t){
	  //          action[b].early=action[a].early+t;
	  //          max = action[b].early;
	  //      }
bfbd90ac68b6e9875531fb6bfe5a7e50|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|62|1|V|cpp
	
	 //   for(i=1;i<=n;i++){
	 //       if(end[i]){
	 //           action[i].last = max;
	 //       }
	 //   }
3e7f7ca3f59dbfd16cfd19b49e42b94a|file:///Users/ring/Documents/code/c/pintia_trains/7-11_key_action.cpp|1|1|V|cpp
	#include<stdio.h>
	#include<stdlib.h>
	
	typedef struct{
	    int early,last;
	}Action;
	
	void createTree(int n,int m);
	void scan(int n);
	
	int out[200];
	int in[200];
	int tree[200][200]; 
	Action action[200];
	int isG = 1;
	int max =0 ;
	
	int main(){
	    int n,m;
	    scanf("%d %d",&n,&m);
	    createTree(n,m);
	    scan(n);
	
	    return 0;
	}
	
	
	void createTree(int n,int m){
	    int a,b,t;
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=n;j++){
	            tree[i][j]=-1;
	        }
	        action[i].early = 0;
	        action[i].last = 65535;
	        in[i]=  0;
	        out[i] = 0;
	    }
	    while(m--){
	        scanf("%d %d %d",&a,&b,&t);
	        tree[a][b] = t;
	        out[a]++;
	        in[b]++;
	    }
	    
	
	    
	    int q[2000];
	    int front=-1,rear=-1;
	    int count=0;
	    int temp;
	
	    for(int i=1;i<=n;i++){
	        if(in[i]==0){
	            q[++rear]=i;
	        }
	    }
	    while(rear>front){
	        temp=q[++front];
	        count++;
	        for(int i=1;i<=n;i++){
	            if(tree[temp][i]>=0){
	                if(action[i].early<action[temp].early+tree[temp][i]){
	                    action[i].early=action[temp].early+tree[temp][i];
	                }
	                in[i]--;
	                if(in[i]==0){
	                    q[++rear]=i;
	                }
	            }
	        }
	    }
	
	
	    if(count!=n){
	        isG=0;
	        return;
	    }
	
	    int qu[2000];
	    front=rear=-1;
	
	    for(int i=1;i<=n;i++){
	        if(action[i].early>max){
	            max = action[i].early;
	        }
	    }
	    for(int i=1;i<=n;i++){
	        if(out[i]==0){
	            qu[++rear]=i;
	            action[i].last = max;
	        }
	    }
	    while(rear>front){
	        temp=qu[++front];
	        for(int i=n;i>0;i--){
	            if(tree[i][temp]>=0){
	                if(action[temp].last-tree[i][temp]<action[i].last){
	                    action[i].last = action[temp].last-tree[i][temp];
	                }
	                out[i]--;
	                if(out[i]==0){
	                    qu[++rear] = i;
	                }
	            }
	        }
	    }
	}
	
	
	
	void scan(int n){
	    if(isG==0){
	        printf("0\n");
	        return;
	    }
	    printf("%d\n",max);
	    for(int i=1;i<=n;i++){
	        if(action[i].early!=action[i].last)
	            continue;
	        for(int j=n;j>0;j--){
	            if(tree[i][j]>=0&&action[j].early==action[j].last&&action[j].last-tree[i][j]==action[i].early){
	                printf("%d->%d\n",i,j);
	            }
	
	        }
	    }
	}
	
	
5b1342f9709b642abd8b4da61750c06a|file:///private/tmp/zshWNTSWK|1|9|v|zsh
	https://www.youtube.com/watch\?
9c934d0603ee05cda798d8bdb2840c9b|file:///private/tmp/zshjy1kpq|1|1|V|zsh
	you-get 'https://www.youtube.com/watch?v=mjREZoRqTWM'
	you-get 'https://www.youtube.com/watch?v=KYvMERGto0o'
	you-get 'https://www.youtube.com/watch?v=wWrxfcLtJGI'
	you-get 'https://www.youtube.com/watch?v=rTC4JshmUog'
	you-get 'https://www.youtube.com/watch?v=ZHRG5NaADjU'
	you-get 'https://www.youtube.com/watch?v=Mm8G8F7lX1s'
	you-get 'https://www.youtube.com/watch?v=88oR5GjjZ6k'
	you-get 'https://www.youtube.com/watch?v=t-2i3rxIXX4'
	you-get 'https://www.youtube.com/watch?v=Fimgf3yx85U'
	you-get 'https://www.youtube.com/watch?v=GFA-gPjgmmI'
	you-get 'https://www.youtube.com/watch?v=drOguXu4z38'
	you-get 'https://www.youtube.com/watch?v=QlbAPjEsWS0'
	you-get 'https://www.youtube.com/watch?v=cBGPX8LL22A'
	you-get 'https://www.youtube.com/watch?v=UbjnDcHgmyI'
	you-get 'https://www.youtube.com/watch?v=9i_MPsLcLVk'
	you-get 'https://www.youtube.com/watch?v=HEy-StskvuI'
	you-get 'https://www.youtube.com/watch?v=Tm_ShG0QNq8'
bd9cc5d02ca3fad77234c5964f55ecfd|file:///Users/ring/.vimrc|287|1|v|vim
	map <Right> <Nop>
fa65cd26724b62ef519f0ec70236efa5|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|535|5|V|markdown
	    - dsfa
e556922668575e4d1a509771db52ed58|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|535|11|v|markdown
	$D(p|q)$
4889e3eb24d5becfa76adea05c484fbd|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|525|7|v|markdown
	$Entropy = -\sum P(i)\log_2{P(i)}$
	
15fc3950b7c08c0b533f05a119795393|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|539|9|v|markdown
	Entropy
08ec187ed8176dafd361b6237589609b|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|539|1|V|markdown
	    - $h(p) = -1\log_2{1}=0$
995686fdcb9e77f43bda4ebdbcdb6437|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|540|33|v|markdown
	= -1\log_2{1}
10b206e463dd5d6ad8014d07d59ac7ea|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|533|8|v|markdown
	H(p,q) = -\sum{p(x) \log_2{q(x)}}
a959ebc6f2afca1e7d3966bf2ccaaf4c|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|554|1|V|markdown
	$$
	\begin{align}
	y &= \cos t + 1 \\
	y &= 2sin t \\
	\end{align}
	$$
13636f604905b7b0f3100e6bb237175d|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|561|1|V|markdown
	tf.losses.categorical_crossentropy(p,q);
cdcf5d53ed6b7759d1a1dbaacf99df6c|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|563|11|v|markdown
	categorical_crossentropy
43ae286a249404b0c4513468756de8a9|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|562|1|V|markdown
	tf.losses.categorical_crossentropy(p,q); # 函数的形式
32c2c7fb83d658f324afda233d4651d2|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|570|70|v|markdown
	# 函数的形式
	
728ca665532fda00a3f64ea203e0b01a|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|570|1|V|markdown
	tf.losses.categorical_crossentropy(one_hot,logits,from_logits=True);  # 这样能处理logits转换成prob时的错误
cda61fd92393b78fc32fd8a2f54cd782|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|571|44|v|markdown
	logits,from_logits=True
d9a4c5404b665b567bdbab1db2232dd7|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|571|52|v|markdown
	# 这样能处理logits转换成prob时的错误
5bb14faafd22e3ab602502e71cf3e494|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|648|1|V|markdown
	$$loss = \sum_i(w\times x_i+b-y_i)^2 \tag{1}$$
fc2e104f0d567c55b158d7bb89955c39|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|652|1|V|markdown
	$$w^` = w - lr \times \frac{\partial{loss}}{\partial{w}} \tag{2}$$
7ed634d801bad3315f551e2b73d06085|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|579|1|V|markdown
	$loss = \sum_i(w\times x_i+b-y_i)^2 \tag{1}$$
7756cf2fb7816188e0f1b508d8bae05c|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|579|59|v|markdown
	\tag{2}
a3b53c6cecca3a92ab016d3c96e593dd|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|585|1|V|markdown
	[w_grad] = tape.gradient(loss,[w])  # 自动求解参数的梯度,并返回相应的列表
04b93e8d57fcad2d85eebf7b7382d511|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|583|1|V|markdown
	with tf.GradientTape as tape:  # 把计算过程包在里面
d9cffd6165fbde9de70000ba55bd121e|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|583|1|V|markdown
	with tf.GradientTape() as tape:  # 把计算过程包在里面
2dfe362f9fc5b471828c07e0ac836edf|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|587|51|v|markdown
	把计算过程包在里面
1d3bc67840179a3152c9620e51201257|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|588|1|V|markdown
	grad1 = tape.gradient(loss,[w])  # 自动求解参数的梯度,并返回相应的列表
044218cbb4db7f9a905cc610cb4b1e20|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|588|34|v|markdown
	自动求解参数的梯度
089761cd56f4c4187de59f65aa3fe619|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|588|33|v|markdown
	 ,并返回相应的列表
d7acacf2e6cef2a88bb7797a22a2e056|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|589|35|v|markdown
	 自动求解参数的梯度,并返回相应的列表
4c491ef0cb0b3eb971e84657c765f3bb|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|598|2|v|markdown
	 连续的光滑的激活函数
fe18110e73090d0af11be3062d37c488|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|613|6|V|markdown
	     \mathbb{R}\setminus\mathbb{Q}.
508ae96ca606dcae253cdd43dd950102|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|616|5|V|markdown
	    - sehgnduxuex
618622d0e4b634ddb06af462a89f7ed4|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|620|5|V|markdown
	    - `tf.nn.relu()`
b3c5b5b2369228e1e06d9be553cb680c|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|598|1|V|markdown
	当大于某个条件时激活  
9fc0a20868cfa14eb787b1403064a999|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|597|1|V|markdown
	因此在深度学习中就可模仿设点，设计神经网络，因此有了激活函数  
	
2572e44ab8c4fcc7b8806d87c08a16a4|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|597|1|V|markdown
	因此在深度学习中就可模仿设点，设计神经网络，因此有了激活函数  
70210ac76a94b30dd6df2badda7033cd|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|627|3|v|markdown
	Mean Squared Error
1cb1fcda97e90500e0e828ea2958833c|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|517|1|V|markdown
	$$loss=\frac{1}{N}\sum(y-out)^2$$
bc2a742ef428a1ad57e4ced3a8934bea|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|519|1|V|markdown
	loss1 = tf.reduce_mean(tf.square(y-out))
	loss2 = tf.reduce_mean(tf.losses.MSE(y,out))
42148ca61fa8b1ffb11880cd9baf3c2f|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|631|1|V|markdown
	loss1 = tf.reduce_mean(tf.square(y-out))
df437ef51f6b50611939c4d72076ba64|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|632|5|V|markdown
	    - ``
049b11c8384f5da60e3f195dd378199b|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|625|5|V|markdown
	    - 常用于多分类问题，因为它把logits转换为prob
3878d37ec48003e56304688ba3308222|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|630|5|V|markdown
	    II
cc84dc2e6f67fd756e2f40a8adf8f907|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|629|5|V|markdown
	    $$
bb0506510ed49b23b751162cd7d98eb9|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|612|1|V|markdown
	        \begin{equation}
	        f(x) = \begin{cases}
	        0, & \text{if } x < 0  \\
	        x, & \text{if } x \geq 0 
	        \end{cases}
	        \end{equation}
f0aac25315a1bd9c2b200c81633e6b10|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|632|13|v|markdown
	\text{if } x < 0
65b4185ba8b540f65bed4bc4d0c253a2|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|656|1|V|markdown
	#### 
2e40c7c01da359985efb94b5e09197e1|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|653|9|v|markdown
	mathrmt
92f064b136ab3fd020347c5f60dffdf2|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|653|2|v|markdown
	\frac{\partial y}{\partial x}
68c5e27e15a04a84a8529baca470da45|file:///Users/ring/var/tem/himmelblau.py|1|1|V|python
	inpormt
fe498aa910351e83de04d71ae1804c5a|file:///Users/ring/var/tem/himmelblau.py|6|1|V|python
	x = np.arange(-6,6,0.1)
9c9ebad35bd37456f336b0a5f67f65ab|file:///Users/ring/var/tem/himmelblau.py|16|1|V|python
	ax.set_xlabel('x')
b2a876a5fb4976e5182b68c678c5767c|file:///Users/ring/var/tem/himmelblau.py|2|1|V|python
	import matplotlib as plt
93473a7344419b15c4219cc2b6c64c6f|file:///Users/ring/var/tem/himmelblau.py|2|1|v|python
	import
79922c8fc00dfdf845f35df192d94dd9|file:///Users/ring/var/tem/himmelblau.py|16|1|V|python
	# ax = fig.gca(projection='3d')
c928205b738e04e433a161d4a2976b17|file:///Users/ring/.config/ranger/rc.conf|31|20|v|conf
	/home/${USER}
d0cab90d8d20d57e2f2b9be52f7dd25d|file:///Users/ring/var/blog/_config.yml|76|8|v|yaml
	next
97ee0c4232909706d598d21ddfcfbde8|file:///Users/ring/var/blog/source/_posts/arithmetic.md|375|3|v|markdown
	效率问题
c5c214a46a7ba2f3d1815226b9a8df2e|file:///Users/ring/var/blog/source/_posts/arithmetic.md|388|1|V|markdown
	--- 效率问题 ---
78653064661c2e271f91a695adbf0e06|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/fasion_mnist/fasion_mnist.py|1|1|V|python
	import tensorflow as tf
	from tensorflow.keras import datasets
	
	tf.enable_eager_execution()
	(x, y), (test_x, test_y) = datasets.fashion_mnist.load_data()
	
	print('datasets:', x.shape, y.shape, test_x.shape, test_y.shape)
	
	x = tf.convert_to_tensor(x, dtype=tf.float32) / 255
	test_x = tf.convert_to_tensor(test_x, dtype=tf.float32) / 255
	
	db = tf.data.Dataset.from_tensor_slices((x, y)).batch(128)
	test_db = tf.data.Dataset.from_tensor_slices((test_x, test_y)).batch(128)
	lr = 0.001
	
	w1 = tf.Variable(tf.random.truncated_normal([784, 256], stddev=0.1))
	w2 = tf.Variable(tf.random.truncated_normal([256, 125], stddev=0.1))
	w3 = tf.Variable(tf.random.truncated_normal([125, 10], stddev=0.1))
	b1 = tf.Variable(tf.zeros([256]))
	b2 = tf.Variable(tf.zeros([125]))
	b3 = tf.Variable(tf.zeros([10]))
	
	acc = 0
	while acc<0.95:
	    for step, (x, y) in enumerate(db):
	        x = tf.reshape(x, [-1, 28*28])
	        with tf.GradientTape() as tape:
	            # tape.watch([w1, w2, w3, b1, b2, b3])
	            h1 = x@w1 + b1
	            h1 = tf.nn.relu(h1)
	            h2 = h1@w2 + b2
	            h2 = tf.nn.relu(h2)
	            out = h2@w3 + b3
	
	            y_onehot = tf.one_hot(y, depth=10)
	            loss = tf.compat.v1.losses.cross_entropy(out, y_onehot)
	
	        grads = tape.gradient(loss, [w1, b1, w2, b2, w3, b3])
	
	
	        w1.assign_sub(lr * grads[0])
	        b1.assign_sub(lr * grads[1])
	        w2.assign_sub(lr * grads[2])
	        b2.assign_sub(lr * grads[3])
	        w3.assign_sub(lr * grads[4])
	        b3.assign_sub(lr * grads[5])
	
	        if step % 100 == 0:
	            print(step/100, loss)
	
8617a6c09eb76d9882db8ee31a420654|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/fasion_mnist/fasion_mnist.py|2|1|V|python
	import 
715fee921a5ae3445a4fa0f13b75babf|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/fasion_mnist/fasion_mnist.py|7|1|V|python
	    x = tf.convert_to_tensor(x, dtype=tf.float32)/255
3693fb6bb805cc2fc1746f1a3c9f05b4|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/fasion_mnist/fasion_mnist.py|14|1|V|python
	db = tf.data.Dataset.from_tensor_slices((x, y))
7a7f3f3fd680bfa36b0d757a43ac58ad|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/fasion_mnist/fasion_mnist.py|15|1|V|python
	db = db.map(preprocess).shuffle(10000).batch(batchsz)
edb1a064f22aaa5e820582f13a893922|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/fasion_mnist/fasion_mnist.py|18|29|v|python
	.shuffle(10000)
ad907dd4d15184e3f659e503fd917c2d|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/fasion_mnist/fasion_mnist.py|25|1|V|python
	    layers.Dense(256, activation=tf.nn.relu),
e8bf0f1472e1c147cdce4fe2daa2ff25|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/fasion_mnist/fasion_mnist.py|42|1|V|python
	            # x:[b, 28, 28] => [b, 784]
	            # y:[b]
	            x = tf.reshape(x, [-1, 28*28])
3f95f23d0e4c08915c5a9f2d84ae3146|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|664|25|v|markdown
	`summary_writer 
66a6973a50e51f1b55037859cdd6fb08|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|666|14|V|markdown
	        - 喂数据点：
	            - 
31c98eecba34bc0b360811d5fc92ebf6|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|669|1|V|markdown
	with summary_writer.as_default():
	    tf.summary.scalar('NAME1', float(LOSS), step=STEP)  # (图的名字,数据,坐标(默认是x轴))
a27a6549ade38cc036f7b8c58a840510|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|674|16|v|markdown
	scalar
456ca334384f52f799537a2510cb70df|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|674|31|v|markdown
	float(LOSS)
522f694f92e679d874a1cc2b2616c3d7|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|674|41|v|markdown
	STEP
12ba79da281720c8f1f1853ce4b0fffe|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|691|10|v|markdown
	`loss_meter = metrics.Mean()`
	
4547d9305f787710d7af49f06d07a3f1|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|691|41|v|markdown
	loss_meter
3d6c9ac08ada31c184094bbc67afe00d|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|691|55|v|markdown
	Mean
901889f4f34f8ca18ac2f53d1fed346e|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|708|5|v|markdown
	while
d876ed4207d6d120f91a66c41864b10d|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|708|11|v|markdown
	acc < 0.95:
4771beb5fac4328cd1ee59be8db1fac2|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|708|1|^v|markdown
	    
	    
	    
	    
	    
	
	    
	    
	    
	    
	
	    
	    
	    
	
	    
	    
	
	    
	    
	    
	
	    
cd80b509bec011210452ac2848b0ba08|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|710|1|V|markdown
	        # x:[b, 28, 28] => [b, 784]
	        # y:[b]
	        x = tf.reshape(x, [-1, 28*28])
	
52583d5d22e22c2860be741b289ca1ae|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|715|13|V|markdown
	            loss_mse = tf.reduce_mean(tf.losses.MSE(y_onehot, logits))
	            loss_ce = tf.losses.categorical_crossentropy(y_onehot, logits, from_logits=True)
aae50246ac3700d671f5299bb3eeff59|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|715|13|V|markdown
	            loss_mse = tf.reduce_mean(tf.losses.MSE(y_onehot, logits))
faab27c05d00aba1bf6e811b6cb51b91|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|722|13|V|markdown
	            # loss_ce = tf.cast(loss_ce, dtype=tf.float32)
	            # loss_mse = tf.cast(loss_mse, dtype=tf.float32)
f2744551092feb3c2a75db8c0ba32c02|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|723|13|V|markdown
	            print(step/100, 'loss:', float(loss_ce), float(loss_mse))
914379b198e6d7e348530a26a0bcc93c|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|721|31|v|markdown
	# 测试
fca3ffea6534176432f58b5a22ed22e1|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|738|20|v|markdown
	steps
64286eb8fc6f85b5725686b5eaa7f197|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|727|1|V|markdown
	network.compile(
	        optimizer=optimizers.Adam(lr=0.01),    # 指定优化器
	        loss=tf.loss.CategoricalCrossentropy(from_logits=True),   # 指定loss函数
	        metrics=['accuracy']     # 指定测试标准
	    )
	
	network.fit(
	        db,   # 要训练的数据集
	        epochs=10,    # 训练的周期
	        validation_data=db_test,    # 用于做测试的数据集,一般写作ds_val
	        validation_freq=2    # 测试的周期,如这里一共10个epochs,每2个epochs就进行一次测试
	    )
	
	network.evaluate(ds_val)    # 训练完后对模型的评估,传入一个数据集
	
	pred = network(x)
30433afb46a8c65782c650b65e174577|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerase_compile%26fit/compile_fit.py|8|46|v|python
	batchsz
9c8870437f9d6c9c9e5ac5d26df1eb9d|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerase_compile%26fit/compile_fit.py|7|5|V|python
	    y = 
09fcf862519c7d5cc006745753654ad0|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerase_compile%26fit/compile_fit.py|6|1|V|python
	    x = tf.cast(x, dtype=tf.float32)
d33ec2b0bbea6d471a4706cea030e1e3|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerase_compile%26fit/compile_fit.py|7|29|v|python
	float32
341cd7e45ec821e8f250deff4107b332|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerase_compile%26fit/compile_fit.py|14|1|V|python
	db = tf.data.Datasets.from_tensor_slices((x, y))
	db = db.map(preprocess).shuffle(10000).batch(batchsz)
c5d6b15ae7fc1b93ffb5d9def0f3367f|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerase_compile%26fit/compile_fit.py|18|19|v|python
	map(preprocess).shuffle(10000).
9c6e7d6e26577f40e535c8cca34cb3bc|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerase_compile%26fit/compile_fit.py|18|34|v|python
	.shuffle(10000).
20f35e630daf44dbfa4c3f68f5399d8c|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|490|1|v|markdown
	model
0cae390ca8aa481115d42a7d74ae9cdd|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|708|1|V|markdown
	network = Sequential([...])   # 如果是别的没学到的话...
1b4f044d9e4851d5040e6cd98bc4a810|file:///Users/ring/.bash_profile|49|1|V|sh
	# added by Anaconda3 2019.10 installer
	# >>> conda init >>>
	# !! Contents within this block are managed by 'conda init' !!
	__conda_setup="$(CONDA_REPORT_ERRORS=false '/Users/ring/opt/anaconda3/bin/conda' shell.bash hook 2> /dev/null)"
	if [ $? -eq 0 ]; then
	    \eval "$__conda_setup"
	else
	    if [ -f "/Users/ring/opt/anaconda3/etc/profile.d/conda.sh" ]; then
	        . "/Users/ring/opt/anaconda3/etc/profile.d/conda.sh"
	        CONDA_CHANGEPS1=false conda activate base
	    else
	        \export PATH="/Users/ring/opt/anaconda3/bin:$PATH"
	    fi
	fi
	unset __conda_setup
	# <<< conda init <<<
d7835a17d8f2c40839f7e453442b6259|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/universe/pipenv_manual.md|5|1|V|markdown
	`pip install pipenv
c40961449fa1179fbf2fd474f02efd3e|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/universe/pipenv_manual.md|21|1|^v|markdown
	   
	
	   
	   
	
	   
	   
	
	   
	   
	
	   
	   
	
	   
	   
	
	   
	   
4c0af04d877a4ecbb5b799e37cdaa16e|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/universe/pipenv_manual.md|73|1|V|markdown
	pipenv shell
5e056c500a1c4b6a7110b50d807bade5|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/Pipfile|3|8|v|config
	https
e42dc74fc55d3c62c153f7219fc589fe|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/Pipfile|3|8|v|config
	://pypi.org/simple
c252d3a92dddf2175e7e4a5c9d8aee9f|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/universe/pipenv_manual.md|19|40|v|markdown
	python interpreter
24e3c73210886b5e8d11c5c155ae2ce2|file:///Users/ring/.vimrc|216|9|v|vim
	fuzzy finder
50925b6276c836348d855ca09fadcdba|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/universe/pipenv_manual.md|15|16|v|markdown
	t
	pipenv install  # create virtual environmen
6c80748056c68870655c15fa0aeca7f9|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/universe/pipenv_manual.md|20|16|v|markdown
	# show location of this python interpreter
	pipenv shell  # 
ae4ff06f3cc95a9e1e009a5cd7bf8951|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/Pipfile|3|8|v|config
	https://pypi.tuna.tsinghua.edu.cn/simple
627410ede08b775ff44414858042986f|file:///Users/ring/Documents/code/py/spider/Pipfile|3|8|v|config
	https://pypi.org/simple
d7f2e7affcae471086ccc8eaa5538720|file:///Users/ring/.zshrc|6|1|V|zsh
	# alias python="/usr/local/bin/python3.7"
	# alias pip="/usr/local/bin/pip3.7"
e71163226849ce899f8655af5b60c296|file:///Users/ring/.vimrc|282|1|V|vim
	" C
	Plug 'octol/vim-cpp-enhanced-highlight'
	"" Highlighting of class scope is disabled by default. To enable set
	"let g:cpp_class_scope_highlight = 1
	"" Highlighting of member variables is disabled by default. To enable set
	"let g:cpp_member_variable_highlight = 1
	"" Highlighting of class names in declarations is disabled by default. To enable set
	"let g:cpp_class_decl_highlight = 1
	"" Highlighting of POSIX functions is disabled by default. To enable set
	"let g:cpp_posix_standard = 1
	"" There are two ways to highlight template functions. Either
	"" let g:cpp_experimental_simple_template_highlight = 1
	"" which works in most cases, but can be a little slow on large files. Alternatively set
	"let g:cpp_experimental_template_highlight = 1
3c82a37c4bf3a4e539739c0688bc26d4|file:///Users/ring/Documents/code/c/pintia_trains/7-14_phone_mader.cpp|3|9|v|cpp
	MAXSIZA 
b6203b520807d3d289b28a410004f089|file:///Users/ring/Documents/code/c/pintia_trains/7-14_phone_mader.cpp|15|1|V|cpp
	    for(int i=0;i<n;i++){
	
	    }<++>
d428fca5f92a1fb0ae6da2e3024638c8|file:///Users/ring/Documents/code/c/pintia_trains/7-14_phone_mader.cpp|25|9|V|cpp
	        size
08125771f76bc5a8b30ae86dc46559b9|file:///Users/ring/Documents/code/c/pintia_trains/7-14_phone_mader.cpp|6|9|v|cpp
	[11]
ad2e8033332df6562ca404fdc48a6026|file:///Users/ring/Documents/code/c/pintia_trains/7-14_phone_mader.cpp|10|1|V|cpp
	int getNum(char p[11]);
	void insert(int tar, char p[11]);
f3acb7f3669445f3cb7972591a70fe83|file:///Users/ring/Documents/code/c/pintia_trains/7-14_phone_mader.cpp|52|5|V|cpp
	    hash[tar].phone = p;
f64cdf292f19e1aa8c7e604fca883825|file:///Users/ring/Documents/code/c/pintia_trains/7-14_phone_mader.cpp|54|5|V|cpp
	    hash[tar].cnt++;
	    strcpy(hash->phone, p);
50c2906826a1628dc4cb26f971639548|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|752|3|v|markdown
	keras.layers.Layer()
	
5f8689351f5abb4fd9d13c809cf237ab|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|767|1|V|markdown
	        self.kernel = self.add_variable('name1', [inp_dim, outp_dim])
50484c19f1afdaf3841a0d821ed393d2|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|768|14|v|markdown
	kernel
dbdd651ac3f5a5ababa290d1dcfd91cf|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|768|49|v|markdown
	inp_dim
2c04f98759d784b2d79bd72e8df2457c|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|775|1|v|markdown
	       
fe1029a004458821f22637a21883de9a|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|782|1|V|markdown
	- save/load
d3a5b392586875f8baa5bcf15d413766|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|784|5|V|markdown
	    - dd
e23e575729ef6a8066531c29a3231978|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|782|1|V|markdown
	- save/load weights
49ebf2da0cfe9108cea405377d630854|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|791|1|V|markdown
	save/load weights
	
	``` python
	# save
	model.save_weights('PATH')
	
	# load
	model = create_model()
	model.load_weights('PATH')
	```
6d1060db1dffbe66c8db87e91d8a177a|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|791|1|V|markdown
	save/load weights
	
	``` python
	# save
	model.save_weights('PATH')
	
	# load
	model = create_model()
	model.load_weights('PATH')
	```
	
63f4f1e9b725370f459720575cd5f953|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|802|11|v|markdown
	weights
c332808de97208644ef120859f2aa96a|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|806|11|v|markdown
	_weights
0f490ca7d26834bfbd95ea41b03716a1|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|809|1|V|markdown
	model = create_model()
c3447e324cab6265404b33081d57433f|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|809|1|V|markdown
	model.load_weights('PATH')
1e3dab21fa88b9239f92dbf6236a3202|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|802|1|V|markdown
	**save/load entire model**
	
	``` python
	# save
	model.save('PATH')
	
	# load
	model = tf.keras.models.load_model('PATH')  # 不需要人工创建网络
	```
ec4d1eb36b22d19728e9d1d23ca84d1c|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|812|8|v|markdown
	load
7c10823384f671da269524a71be271c3|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|812|9|v|markdown
	entire 
fbc816b63e5f893a3f326e480a0f2fff|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|816|1|V|markdown
	model.save('PATH')
c58709e5cb5fbf13100ca622bd1db9a4|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|819|1|V|markdown
	model = tf.keras.models.load_model('PATH')  # 不需要人工创建网络
a2c622a8036c13c7d8f1702f9e0d1e00|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerasAPI/CIFAR10.py|1|1|V|python
	import tensorflow as tf
	from tensorflow importo
95c388a761278ef1d6f7945bc9d0859e|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerasAPI/CIFAR10.py|11|37|v|python
	fashion_mnist
5e85ad2ea3cd24877335fe647bfd71d8|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerasAPI/CIFAR10.py|14|1|V|python
	(x,)<++>
ab9db20d17238451402fe71edd2ef585|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerasAPI/CIFAR10.py|16|1|V|python
	y = tf.one_hot(y, depth=10)
153a209ae06540f27d2736e52c7ce35b|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerasAPI/CIFAR10.py|22|1|V|python
	db = tf.data.Dataset.from_tensor_slices((x, y))
	db = db.map(preprocess).shuffle(10000).batch(batchsz)
636876841981a197c73beb4b64be0a24|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerasAPI/CIFAR10.py|26|30|v|python
	shuffle(10000).
5e8ff9bf55ba3508199d22e984129be6|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerasAPI/CIFAR10.py|28|1|v|python
	sample
40757c7d9e400804b1aa13a7ab12fe96|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerasAPI/CIFAR10.py|29|10|v|python
	db_iter
590f53e8699817c6fa498cc11a4cbe63|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerasAPI/CIFAR10.py|37|15|v|python
	self
3f2fbe902265f2bc3e432217714a3516|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerasAPI/CIFAR10.py|38|1|V|python
	        self.kernel = self.add_variable('w', [inp_dim, outp_dim])
14b36e00c8e69be001922b8dc31c31b9|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerasAPI/CIFAR10.py|51|1|V|python
	        self.fc1 = MyDense(32*32*3, 256)
c07c2c348d8653df4fc10096306a9146|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerasAPI/CIFAR10.py|53|28|v|python
	32*32*3
2bd5de019b7d8030bff9d450800121a6|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerasAPI/CIFAR10.py|54|29|v|python
	2*32*3
00bc755bae87587766d242bf7cac5ea0|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerasAPI/CIFAR10.py|41|5|V|python
	    def _all(inp_dim):
d99b05df622123afbe900098e9e09eea|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerasAPI/CIFAR10.py|58|1|V|python
	        res = self.fc1(inputs)
f719e2519a059439972954f906fe2bc4|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerasAPI/CIFAR10.py|59|1|V|python
	        res = tf.nn.relu(res)
9d5dcaa795f4632be8f86ccd7fbb39e8|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerasAPI/CIFAR10.py|73|24|v|python
	Catestro
2764ca9d34e90313978d044f27ae433b|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerasAPI/CIFAR10.py|80|20|v|python
	step
20ec31432a905f2bd386811588eb394e|file:///Users/ring/Documents/code/py/Tensorflow%2BOpenCv/kerasAPI/CIFAR10.py|86|27|v|python
	ckpt/weights.ckpt
448b2bde654d2a25f26f7b82cde02b34|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|228|4|v|markdown
	.sha
e04aa5104d082e4a51d241391941ba26|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|768|32|v|markdown
	variable
b68c3feda9c8c0c11b45c1e7460a2589|file:///Users/ring/.vimrc|282|5|V|vim
	" C/C++
	Plug 'octol/vim-cpp-enhanced-highlight'
f6926ea62344ab65dbf72862e49cd87b|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|729|1|V|markdown
	network.compile(
	        optimizer=optimizers.Adam(lr=0.01),    # 指定优化器
	        loss=tf.loss.CategoricalCrossentropy(from_logits=True),   # 指定loss函数
	        metrics=['accuracy']     # 指定测试标准
	    )
	
	network.fit(
	        db,   # 要训练的数据集
	        epochs=10,    # 训练的周期
	        validation_data=db_test,    # 用于做测试的数据集,一般写作ds_val
	        validation_freq=2    # 测试的周期,如这里一共10个epochs,每2个epochs就进行一次测试
	    )
	
	network.evaluate(ds_val)    # 训练完后对模型的评估,传入一个数据集
e3c4968ab754cef58cc5af99e269791a|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|844|47|v|markdown
	 # 指定优化器
6651e61a3308c92c9ae9123ae66cfbae|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|731|69|v|markdown
	指定loss函数
	        metrics=['accuracy']     # 指定测试标准
	    )
	
	network.fit(
	        db,   # 要训练的数据集
	        epochs=10,    # 训练的周期
	        validation_data=db_test,    # 用于做测试的数据集,一般写作ds_val
	        validation_freq=2    # 测试的周期,如这里一共10个epochs,每2个epochs就进行一次测试
	    )
	
	network.evaluate(ds_val)    # 训练完后对模型的评估,传入一个数据集
	
	pred = network(x)
	# 或 pred = network.predict(x)    预测
	```
	
	
	#### 自定义网络
	
	- keras.Sequential(layer1, layer2, ...)
	    - 参数要继承自`keras.layers.Layer()`
	    - 建立好网络后variable(w和b)是没有的
	        - 法1:指定输入shape`network.build(input_shape=(None, 28*28))`
	        - 法2:自动识别`network(x)`
	            - 这个的原理是调用了类中的call()方法,相当于network.__call__(x)。同理自定义类中也可如此
	- keras.layers.Layer()
	    - 任何要自定义的层要继承自它
	- keras.Model()
	    - compile/fit/evaluate
	    - Sequential也是继承自该类，所以自定义的网络应该继承这个
	
	``` python
	class MyDense(layers.Layer):    # 自定义层继承
	    
	    def __init__(self, inp_dim, outp_dim):
	        super(MyDense, self).__init__() 
	        self.kernel = self.add_weight('name1', [inp_dim, outp_dim])   # 用母类的add_weight而不是用tf.variable
	        self.bias = self.add_weight('name2', [outp_dim])    # name是给母类管理用的
	        
	    def call(self, inputs, training=None):
	        out = inputs @ self.kernel + self.bias
	        return out
	
	# 对比
	layers.Dense(256, activation=tf.nn.relu),
	
	# 同理Model自定义方法也一样
	```
	
	#### 模型的加载与保持
	
	- save/load weights
	    - 只保存模型参数
	    - 缺点是没有源代码，网络不得而知
	- save/load entire model
	    - 简单粗暴的
	- saved_model 
	    - 通用的保存格式
	    
	**save/load weights**
	
	``` python
	# save
	model.save_weights('PATH')
	
	# load
	model = create_model()    # 需要人工创建网络
	model.load_weights('PATH')
	```
	
	**save/load entire model**
	
	``` python
	# save
	model.save('PATH')
	
	# load
	model = tf.keras.models.load_model('PATH')  # 不需要人工创建网络
	```
	
	**saved model**
	
	``` python
	# save
	tf.saved_model.saved(model, 'PATH')   # 标准的，可供其他模型使用的保存
	
	# load
	imported = tf.saved_model.load(path)   
	
	# 还原除网络
	f = imported.signature['serving_defaut']
	```
	
	
	
	### 过拟合和欠拟合
	现实情况是我们并不知道模型的符合什么分布  
	
	- model capacity,模型的学习能力
	    - 显然项越多越高
	- underfitting
	    - 模型的表达能力弱于真实数据，如用直线拟合双曲线
	- overfitting
	    - 模型的表达能力大于真实数据，把不必要的噪声也拟合进来了
	
	#### 交叉验证
	检查欠拟合和过拟合的方法   
	
	一般情况下会把数据集切分(splitting)成三份,作用分别是train，test，evaluate
	
	``` python
	network.compile(
	        optimizer=optimizers.Adam(lr=0.01),   
	        loss=tf.loss.CategoricalCrossentropy(from_logits=True), 
200195f55ead4498a176ab127d1c8553|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|845|67|v|markdown
	# 指定loss函数
96a2f775fbdb2c826334332d53b6839f|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|846|32|v|markdown
	  # 指定测试标准
a3bebd70acd7f4a28629fe613f4731bf|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|736|17|v|markdown
	要训练的数据集
	        epochs=10,    # 训练的周期
	        validation_data=db_test,    # 用于做测试的数据集,一般写作ds_val
	        validation_freq=2    # 测试的周期,如这里一共10个epochs,每2个epochs就进行一次测试
	    )
	
	network.evaluate(ds_val)    # 训练完后对模型的评估,传入一个数据集
	
	pred = network(x)
	# 或 pred = network.predict(x)    预测
	```
	
	
	#### 自定义网络
	
	- keras.Sequential(layer1, layer2, ...)
	    - 参数要继承自`keras.layers.Layer()`
	    - 建立好网络后variable(w和b)是没有的
	        - 法1:指定输入shape`network.build(input_shape=(None, 28*28))`
	        - 法2:自动识别`network(x)`
	            - 这个的原理是调用了类中的call()方法,相当于network.__call__(x)。同理自定义类中也可如此
	- keras.layers.Layer()
	    - 任何要自定义的层要继承自它
	- keras.Model()
	    - compile/fit/evaluate
	    - Sequential也是继承自该类，所以自定义的网络应该继承这个
	
	``` python
	class MyDense(layers.Layer):    # 自定义层继承
	    
	    def __init__(self, inp_dim, outp_dim):
	        super(MyDense, self).__init__() 
	        self.kernel = self.add_weight('name1', [inp_dim, outp_dim])   # 用母类的add_weight而不是用tf.variable
	        self.bias = self.add_weight('name2', [outp_dim])    # name是给母类管理用的
	        
	    def call(self, inputs, training=None):
	        out = inputs @ self.kernel + self.bias
	        return out
	
	# 对比
	layers.Dense(256, activation=tf.nn.relu),
	
	# 同理Model自定义方法也一样
	```
	
	#### 模型的加载与保持
	
	- save/load weights
	    - 只保存模型参数
	    - 缺点是没有源代码，网络不得而知
	- save/load entire model
	    - 简单粗暴的
	- saved_model 
	    - 通用的保存格式
	    
	**save/load weights**
	
	``` python
	# save
	model.save_weights('PATH')
	
	# load
	model = create_model()    # 需要人工创建网络
	model.load_weights('PATH')
	```
	
	**save/load entire model**
	
	``` python
	# save
	model.save('PATH')
	
	# load
	model = tf.keras.models.load_model('PATH')  # 不需要人工创建网络
	```
	
	**saved model**
	
	``` python
	# save
	tf.saved_model.saved(model, 'PATH')   # 标准的，可供其他模型使用的保存
	
	# load
	imported = tf.saved_model.load(path)   
	
	# 还原除网络
	f = imported.signature['serving_defaut']
	```
	
	
	
	### 过拟合和欠拟合
	现实情况是我们并不知道模型的符合什么分布  
	
	- model capacity,模型的学习能力
	    - 显然项越多越高
	- underfitting
	    - 模型的表达能力弱于真实数据，如用直线拟合双曲线
	- overfitting
	    - 模型的表达能力大于真实数据，把不必要的噪声也拟合进来了
	
	#### 交叉验证
	检查欠拟合和过拟合的方法   
	
	一般情况下会把数据集切分(splitting)成三份,作用分别是train，test，evaluate
	
	``` python
	network.compile(
	        optimizer=optimizers.Adam(lr=0.01),   
	        loss=tf.loss.CategoricalCrossentropy(from_logits=True),   
	        metrics=['accuracy']   
	    )
	
	network.fit(
	        db,  
884c8d92fb497cf080949b03ed601306|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|736|15|v|markdown
	# 要训练的数据集
	        epochs=10,    # 训练的周期
	        validation_data=db_test,    # 用于做测试的数据集,一般写作ds_val
	        validation_freq=2    # 测试的周期,如这里一共10个epochs,每2个epochs就进行一次测试
	    )
	
	network.evaluate(ds_val)    # 训练完后对模型的评估,传入一个数据集
	
	pred = network(x)
	# 或 pred = network.predict(x)    预测
	```
	
	
	#### 自定义网络
	
	- keras.Sequential(layer1, layer2, ...)
	    - 参数要继承自`keras.layers.Layer()`
	    - 建立好网络后variable(w和b)是没有的
	        - 法1:指定输入shape`network.build(input_shape=(None, 28*28))`
	        - 法2:自动识别`network(x)`
	            - 这个的原理是调用了类中的call()方法,相当于network.__call__(x)。同理自定义类中也可如此
	- keras.layers.Layer()
	    - 任何要自定义的层要继承自它
	- keras.Model()
	    - compile/fit/evaluate
	    - Sequential也是继承自该类，所以自定义的网络应该继承这个
	
	``` python
	class MyDense(layers.Layer):    # 自定义层继承
	    
	    def __init__(self, inp_dim, outp_dim):
	        super(MyDense, self).__init__() 
	        self.kernel = self.add_weight('name1', [inp_dim, outp_dim])   # 用母类的add_weight而不是用tf.variable
	        self.bias = self.add_weight('name2', [outp_dim])    # name是给母类管理用的
	        
	    def call(self, inputs, training=None):
	        out = inputs @ self.kernel + self.bias
	        return out
	
	# 对比
	layers.Dense(256, activation=tf.nn.relu),
	
	# 同理Model自定义方法也一样
	```
	
	#### 模型的加载与保持
	
	- save/load weights
	    - 只保存模型参数
	    - 缺点是没有源代码，网络不得而知
	- save/load entire model
	    - 简单粗暴的
	- saved_model 
	    - 通用的保存格式
	    
	**save/load weights**
	
	``` python
	# save
	model.save_weights('PATH')
	
	# load
	model = create_model()    # 需要人工创建网络
	model.load_weights('PATH')
	```
	
	**save/load entire model**
	
	``` python
	# save
	model.save('PATH')
	
	# load
	model = tf.keras.models.load_model('PATH')  # 不需要人工创建网络
	```
	
	**saved model**
	
	``` python
	# save
	tf.saved_model.saved(model, 'PATH')   # 标准的，可供其他模型使用的保存
	
	# load
	imported = tf.saved_model.load(path)   
	
	# 还原除网络
	f = imported.signature['serving_defaut']
	```
	
	
	
	### 过拟合和欠拟合
	现实情况是我们并不知道模型的符合什么分布  
	
	- model capacity,模型的学习能力
	    - 显然项越多越高
	- underfitting
	    - 模型的表达能力弱于真实数据，如用直线拟合双曲线
	- overfitting
	    - 模型的表达能力大于真实数据，把不必要的噪声也拟合进来了
	
	#### 交叉验证
	检查欠拟合和过拟合的方法   
	
	一般情况下会把数据集切分(splitting)成三份,作用分别是train，test，evaluate
	
	``` python
	network.compile(
	        optimizer=optimizers.Adam(lr=0.01),   
	        loss=tf.loss.CategoricalCrossentropy(from_logits=True),   
	        metrics=['accuracy']   
	    )
	
	network.fit(
	        db,   # 
e0a9f5b630946ac2d5f1805b359952cb|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|736|15|v|markdown
	# 要训练的数据集
30fd441027b4a87519c8fd443d89e663|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|737|20|v|markdown
	   # 训练的周期
928af265f7d973c8e7370f8655c548eb|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|738|34|v|markdown
	   # 用于做测试的数据集,一般写作ds_val
a8b76d1c35fbf6d21510232d8504f7aa|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|739|27|v|markdown
	   # 测试的周期,如这里一共10个epochs,每2个epochs就进行一次测试
b53567959961a106a4eb19ff084b18dd|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|742|26|v|markdown
	   # 训练完后对模型的评估,传入一个数据集
2a8ea173d3eb094918fac8fb0264e612|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|744|17|V|markdown
	pred = network(x)
	# 或 pred = network.predict(x)    预测
d095a7e432c72d83ba4f506c84fa4004|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|850|14|v|markdown
	 # 要训练的数据集
dccff1d91b9936fcb4b8a0d22923b234|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|851|19|v|markdown
	    # 训练的周期
e363e72dedba65fafdcdcc8a274be369|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|852|33|v|markdown
	    # 用于做测试的数据集,一般写作ds_val
763bef91ad8cf437a2e9eca40e5aab33|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|853|29|v|markdown
	 # 测试的周期,如这里一共10个epochs,每2个epochs就进行一次测试
e40b4046a594d8e42dae3671a7af9e00|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|856|27|v|markdown
	  # 训练完后对模型的评估,传入一个数据集
d3e0e9244a79fa06441b135130ea7e1d|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|857|1|V|markdown
	# 这也是
098f6bcd4621d373cade4e832627b4f6|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|840|85|v|markdown
	test
94d2f2aabfda3169d54a9531cdb99890|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|840|95|v|markdown
	evaluate
95c011463a76aea8cdea52cb232ae898|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|837|6|v|markdown
	交叉验证
6857ae674e9a5320bd76409fb6522060|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|880|1|V|markdown
	- L1-regularization
7d39d9e4c1af0012d79ba04713f9a68d|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|881|1|V|markdown
	    - loss加上lambda约束的一范式
e2adb4d8be89e047d2776597db4f42e8|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|895|28|v|markdown
	# 这是范式里面的参数w1,w2...b1,b2...取法很灵活
2787910b1b16428d65412fca2718a92e|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|878|29|v|markdown
	decade
6d1d901c2b7cfe9b66586f426a0387ce|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|906|1|V|markdown
	 904 ##### Momentum 动量
24202d15137c2e40ab325032cb083569|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|908|1|V|markdown
	optimizer = SGD(learing_rate=0.02, momentum=0.9)
8b7e7a5042b628c66683f8edec5dd219|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|911|13|v|markdown
	ing_rate
9d975148cd7d9913f20908669061482a|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|910|13|v|markdown
	Adom
4599e64bf1ff7d14b996ca293e1b3ec9|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|920|34|v|markdown
	, momentum=0.9
6d6bfc9ede872a3b188f6cece10edee5|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|938|29|v|markdown
	  # 如果是别的没学到的话...
01b3a86339c513c975eb0af17fff29fa|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|938|23|v|markdown
	...])
097d727d80ac45a4ca379529bb8f0d6d|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|938|23|v|markdown
	layers.Dense(256, activation='relu'),
	                      layers.Dropout(0.5),    # 0.5 rate to dropout
	
767c057393e3582e42c4334763309b9c|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|942|3|V|markdown
	  ...
5bad8b7335f9f2bd7787a757af6c6606|file:///Users/ring/var/blog/node_modules/nunjucks/src/lexer.js|17|1|V|javascript
	var TOKEN_BLOCK_START = 'block-start';
	var TOKEN_BLOCK_END = 'block-end';
14511f2f5564650d129ca7cabc333278|file:///Users/ring/var/blog/node_modules/nunjucks/src/lexer.js|19|26|v|javascript
	block
ac2bf15bbb729dcc823887572192a692|file:///Users/ring/var/blog/node_modules/nunjucks/src/lexer.js|19|26|v|javascript
	-start
4026e70b85f41d665802c0515845616f|file:///Users/ring/var/blog/node_modules/nunjucks/src/lexer.js|20|24|v|javascript
	block-end
cbf93909e6306c77448f7d284de0be5a|file:///Users/ring/var/blog/node_modules/nunjucks/src/lexer.js|19|26|v|javascript
	block-start
c78cb8035c3f5571051c426e9958bf29|file:///Users/ring/var/blog/node_modules/nunjucks/src/lexer.js|10|1|V|javascript
	var VARIABLE_START = '{{';
	var VARIABLE_END = '}}';
ecf1af8bbe2a3020d96fe7ea971a03ad|file:///Users/ring/var/blog/_config.yml|96|8|v|yaml
	hexo
d14ef9bb897763b0e514b88930984897|file:///Users/ring/var/blog/_config.yml|96|8|v|yaml
	huweihuang
1072bc960be396acc407e9ccb5f71388|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|981|1|V|markdown
	``` python
6cd475e996f898c8adae0caf6f19d432|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|981|1|^v|markdown
	# 
	# 
	# 
bb5ea812333c2020dd2315a5e3ad092d|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|980|62|v|markdown
	通道层数,
41785fa08babf67a326322a2a6ad8a4a|file:///Users/ring/Documents/Typora%E7%AC%94%E8%AE%B0/Major/tensorflow_learning/OpenCV%2Btensorflow.md|995|1|V|markdown
	O _ {j} = \sum {x _ {ij} * w _ {ij}}
b613371536e217e95cef77c15640ce2a|file:///usr/ring/var/dwm/config.mk|17|1|V|make
	# freetype
	FREETYPELIBS = -lfontconfig -lXft
	FREETYPEINC = /usr/include/freetype2
88c189a42c87aa49d667fc8ab76bc323|file:///usr/ring/var/st/config.mk|26|1|V|make
	FREE
ecec46b8aa4616c9aa608fa429a6b938|file:///usr/ring/var/st/config.mk|28|1|V|make
	FREETYPELIBS = -lfontconfig -lXft
a2f9b0d2a8ec8a2ead504700d5b881cb|file:///usr/ring/var/st/config.mk|29|9|v|make
	LIBS
e7e97c86b7153bfd8c073cdd8ffa3d49|file:///usr/ring/var/st/config.mk|29|15|v|make
	-lfontconfig -lXft
b9f95bc2dcc5a4573a798beaafc72f43|file:///usr/ring/var/st/config.mk|28|1|V|make
	#FREETYPELIBS = -lfontconfig -lXft
	#FREETYPEINC = /usr/include/freetype2
72bfa63c110a7c73072874a0ed1bba45|file:///usr/ring/.zshrc|17|1|V|zsh
	#>>> conda initialize >>>
	# !! Contents within this block are managed by 'conda init' !!
	__conda_setup="$('/Users/ring/opt/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
	if [ $? -eq 0 ]; then
	    eval "$__conda_setup"
	else
	    if [ -f "/Users/ring/anaconda3/etc/profile.d/conda.sh" ]; then
	        . "/Users/ring/anaconda3/etc/profile.d/conda.sh"
	    else
	        export PATH="/Users/ring/anaconda3/bin:$PATH"
	    fi
	fi
	unset __conda_setup
	# <<< conda initialize <<<
	#alias python="/usr/local/bin/python3.7"
899bf973bcd732ea9224f3889811a3c0|file:///usr/ring/.zshrc|148|1|V|zsh
	plugins=(git)
8b54e24a5fbb07fe6f7c786267a7dce8|file:///usr/ring/var/st/config.h|90|1|V|cpp
		/* 8 normal colors */
		"black",
		"red3",
		"green3",
		"yellow3",
		"blue2",
		"magenta3",
		"cyan3",
		"gray90",
	
		/* 8 bright colors */
		"gray50",
		"red",
		"green",
		"yellow",
		"#5c5cff",
		"magenta",
		"cyan",
		"white",
	
		[255] = 0,
	
		/* more colors can be added after 255 to use with DefaultXX */
		"#cccccc",
		"#555555",
		"black",
	};
06a111f79f2311543f642fae5607551d|file:///usr/ring/var/st/config.h.rej|34|1|V|diff
	+  /* 8 normal colors */
	+  [0] = "#000000", /* black   */
	+  [1] = "#ff5555", /* red     */
	+  [2] = "#50fa7b", /* green   */
	+  [3] = "#f1fa8c", /* yellow  */
	+  [4] = "#bd93f9", /* blue    */
	+  [5] = "#ff79c6", /* magenta */
	+  [6] = "#8be9fd", /* cyan    */
	+  [7] = "#bbbbbb", /* white   */
	+
	+  /* 8 bright colors */
	+  [8]  = "#44475a", /* black   */
	+  [9]  = "#ff5555", /* red     */
	+  [10] = "#50fa7b", /* green   */
	+  [11] = "#f1fa8c", /* yellow  */
	+  [12] = "#bd93f9", /* blue    */
	+  [13] = "#ff79c6", /* magenta */
	+  [14] = "#8be9fd", /* cyan    */
	+  [15] = "#ffffff", /* white   */
	+
	+  /* special colors */
	+  [256] = "#282a36", /* background */
	+  [257] = "#f8f8f2", /* foreground */
	+};
c845415245962dd7316191fbed316d05|file:///usr/ring/var/st/config.h|91|1|^v|cpp
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
ceb86a55f41fc9ce3d1da63adefb1080|file:///usr/ring/var/st/config.h|118|2|V|cpp
	 * foreground, background, cursor, reverse cursor
df0153b59a3de348edeb6f81f75a26a5|file:///usr/ring/var/st/config.h.rej|62|1|V|diff
	+ * foreground, background, cursor
83c12b85e1f73dd7aca01a9f819a129c|file:///usr/ring/var/st/config.h|120|1|V|cpp
	unsigned int defaultfg = 7;
	unsigned int defaultbg = 258;
	static unsigned int defaultcs = 256;
91010086966f3ace9780437e6bbc7445|file:///usr/ring/var/st/config.h.rej|67|1|V|diff
	+unsigned int defaultfg = 257;
	+unsigned int defaultbg = 256;
	+static unsigned int defaultcs = 257;
43fd72c33cf5ed50f496ba2ade067dad|file:///usr/ring/var/st/config.h|120|1|^v|cpp
	+
	+
	+
f5ddaf0ca7929578b408c909429f68f2|file:///usr/ring/.zshrc|3|17|v|zsh
	local
0bca257b6f7866ff5362718e8319fe13|file:///usr/ring/.zshrc|4|16|v|zsh
	local/
5af8847bac9aa897846700a82754a6d7|file:///usr/ring/var/st/x.c.rej|7|1|V|diff
	+	if (!xw.pointerisvisible) {
	+		XDefineCursor(xw.dpy, xw.win, xw.vpointer);
	+		xw.pointerisvisible = 1;
	+		if (!IS_SET(MODE_MOUSEMANY))
	+			xsetpointermotion(0);
	+	}
	+
44cee3fd0ce65ea6977c8429df83398d|file:///usr/ring/var/st/x.c|689|1|^v|c
	+
	+
	+
	+
	+
	+
	+
c6b638cb84ffb0651f45ce02e661e276|file:///usr/ring/var/st/x.c|1090|2|V|c
		Cursor cursor;
fec1c67291cfb058328909c1993b4587|file:///usr/ring/var/st/x.c.rej|25|1|V|diff
	+	Pixmap blankpm;
0fc4357c8356c0d7de6a014f0206614d|file:///usr/ring/var/st/config.h.rej|7|1|V|diff
	+	{ ShiftMask,            XK_Page_Up,     kscrollup,      {.i = -1} },
	+	{ ShiftMask,            XK_Page_Down,   kscrolldown,    {.i = -1} },
35c70ad96558f0665df7c07a7b082c38|file:///usr/ring/var/st/config.h|205|4|^v|cpp
	ShiftMask
	ShiftMask
7b1357db9455e5a1d97ee8e239e90f8c|file:///usr/ring/var/st/config.h|205|29|v|cpp
	Page_Up,     
e159fa7467938719c473830720d3a902|file:///usr/ring/var/st/config.h|205|29|v|cpp
	Page_Up
0d3e1697dc94b35c5c59fc2277b1543b|file:///usr/ring/var/st/config.h|206|29|v|cpp
	Page_Down
12dd54ec1642f647ba9d37cbb6733165|file:///usr/ring/var/st/config.h|205|1|V|cpp
		{ ShiftMask,            XK_i,           kscrollup,      {.i =  1} },
		{ ShiftMask,            XK_k,           kscrolldown,    {.i =  1} },
da2b621c73c5d565c834923f5023b5c9|file:///usr/ring/var/st/config.h|207|26|^v|cpp
	            
	            
c00c06529a5a62e1d48393ffafbaed21|file:///tmp/zsh862q4M|1|1|V|zsh
	iav
31ebcb51a5e978ffd60a9123f0a74477|file:///usr/ring/var/st/config.h|118|35|v|cpp
	 reverse cursor
	
9dfb15f2515c30f98b5a9978ea2931e8|file:///usr/ring/var/st/config.h|91|1|V|cpp
	  /* 8 normal colors */
	  [0] = "#000000", /* black   */
	  [1] = "#ff5555", /* red     */
	  [2] = "#50fa7b", /* green   */
	  [3] = "#f1fa8c", /* yellow  */
	  [4] = "#bd93f9", /* blue    */
	  [5] = "#ff79c6", /* magenta */
	  [6] = "#8be9fd", /* cyan    */
	  [7] = "#bbbbbb", /* white   */
	
	  /* 8 bright colors */
	  [8]  = "#44475a", /* black   */
	  [9]  = "#ff5555", /* red     */
	  [10] = "#50fa7b", /* green   */
	  [11] = "#f1fa8c", /* yellow  */
	  [12] = "#bd93f9", /* blue    */
	  [13] = "#ff79c6", /* magenta */
	  [14] = "#8be9fd", /* cyan    */
	  [15] = "#ffffff", /* white   */
	
	  /* special colors */
	  [256] = "#282a36", /* background */
	  [257] = "#f8f8f2", /* foreground */
	};
1b728535798ad2b6b38719b29d9e7d14|file:///usr/ring/var/st/config.h|121|1|V|cpp
	unsigned int defaultfg = 257;
	unsigned int defaultbg = 256;
	static unsigned int defaultcs = 257;
7ee7c76405d45dcc2a3ce4e4046a144d|file:///usr/ring/var/st/config.h|205|1|V|cpp
		{ MODKEY,            XK_Page_Up,     kscrollup,      {.i = 1} },
		{ MODKEY,            XK_Page_Down,   kscrolldown,    {.i = 1} },
03020e0f3d1d71b098cf2a8beddf2df4|file:///usr/ring/var/st/config.h|207|23|^v|cpp
	      
	      
a25fe57b342959c01dfc177b56b2614d|file:///usr/ring/var/dwm/config.h.rej|7|1|V|diff
	+	{ MODKEY,                       XK_k,      hidewin,        {0} },
	+	{ MODKEY|ShiftMask,             XK_k,      restorewin,     {0} },
3992912e263f3f11cf18196a46b77342|file:///usr/ring/var/dwm/dwm.c|756|3|V|c
			occ |= c->tags;
f12fdb9d870b716d75f2fa070eac2628|file:///usr/ring/var/dwm/dwm.c.rej|8|1|V|diff
	+		occ |= c->tags == 255 ? 0 : c->tags;
34089eda3b3bb444e28206d8e1a8e912|file:///usr/ring/var/dwm/dwm.c.rej|14|1|V|diff
	+		/* do not draw vacant tags */
	+		if (!(occ & 1 << i || m->tagset[m->seltags] & 1 << i))
	+		continue;
	+
5b52dc57b4860c4330395155461d6343|file:///usr/ring/var/dwm/dwm.c|769|1|V|c
			if (occ & 1 << i)
				drw_rect(drw, x + boxs, boxs, boxw, boxw,
					m == selmon && selmon->sel && selmon->sel->tags & 1 << i,
					urg & 1 << i);
988b234087552f9ad6598aa4e1011c0e|file:///usr/ring/var/dwm/dwm.c|756|1|^v|c
	+
	+
	+
	+
28c75657340f3c4e7734060f1f3253cf|file:///usr/ring/var/dwm/dwm.c.rej|7|1|V|diff
	+static void setgaps(int oh, int ov, int ih, int iv);
	+static void incrgaps(const Arg *arg);
	+static void incrigaps(const Arg *arg);
	+static void incrogaps(const Arg *arg);
	+static void incrohgaps(const Arg *arg);
	+static void incrovgaps(const Arg *arg);
	+static void incrihgaps(const Arg *arg);
	+static void incrivgaps(const Arg *arg);
	+static void togglegaps(const Arg *arg);
	+static void defaultgaps(const Arg *arg);
390a20bbaa1db8acf63c7afbd8eda966|file:///usr/ring/var/dwm/dwm.c|217|1|^v|c
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
2510681a5856ecf1e678c8ef784dff13|file:///usr/ring/.zshrc|28|1|V|zsh
	bindkey -M vicmd "i" up-line-or-history
eb2e9977fa9187605f588aab2078f805|file:///usr/ring/var/dwm/config.h|80|10|v|cpp
	|ShiftMask
b270a34bd81d467d6a1bb08bd2a93745|file:///usr/ring/var/dwm/config.h|73|1|V|cpp
	static const char *termcmd[]  = { "st", NULL };
34c8f77334d5e763041bbfc306768b0f|file:///usr/ring/var/dwm/config.h|74|20|v|cpp
	termcmd
6e9efe1eb4f2930acf0e0a3c9e338fa5|file:///usr/ring/var/dwm/config.h|81|1|V|cpp
		{ MODKEY,                       XK_Return, spawn,          {.v = termcmd } },
988fd738de9c6d177440c5dcf69e73ce|file:///usr/ring/var/dwm/config.h|82|37|v|cpp
	Return
41b394758330c83757856aa482c79977|file:///usr/ring/var/dwm/config.h|95|34|v|cpp
	          
176b8d40b761a7c63d1d44cb3c06f877|file:///usr/ring/var/dwm/config.h|92|34|^v|cpp
	          
	          
d4fd3871aea5fa7f0df6a7abd6421024|file:///usr/ring/var/dwm/config.h|103|43|v|cpp
	  setlayout,      {0} },
5eb53825827e5c42884829af9c0054ec|file:///usr/ring/var/dwm/config.h|73|41|v|cpp
	"su root", "0229ljl", "cd ~" ,
3f644f39e5f817ed43836c34a21e5126|file:///usr/ring/var/st/config.h|199|1|V|cpp
		{ TERMMOD,              XK_C,           clipcopy,       {.i =  0} },
		{ TERMMOD,              XK_V,           clippaste,      {.i =  0} },
8d749aef12b506f1aff0f9ece2e6dbbc|file:///usr/ring/var/st/config.h|201|4|v|cpp
	TERMMOD
e6f3f11c684a872b6f0660481f75c4e2|file:///usr/ring/var/st/config.h|201|1|V|cpp
		{ ControlMask,              XK_C,           clipcopy,       {.i =  0} },
		{ ControlMask,              XK_V,           clippaste,      {.i =  0} },
2b78fbaacd4207e793d3c6931ab074e8|file:///usr/ring/var/st/st.h.orig|84|1|V|cpp
	void kscrolldown(const Arg *);
	void kscrollup(const Arg *);
fdb9cee7373e0a7b8766659dd1f3a9e6|file:///usr/ring/.zshrc|52|1|^v|zsh
	#
	#
	#
	#
	#
	#
	#
	#
7efb1b14f3e4572fc7652e89d4ceb73e|file:///tmp/zsh0vDS6u|1|1|V|zsh
	sdfasdfasdfasdfasdfavv
84cc9705e27335f6428c806896f19e99|file:///tmp/zshSGS83k|1|1|V|zsh
	 sdfdfv
0cc51ff96dcd2f5e51149bfe13638537|file:///etc/X11/xinit/xinitrc|51|1|V|sh
	exec dwm
1a991fd5ca77c0b0a8f629ec548f1bb8|file:///usr/ring/var/st/config.h|201|4|^v|cpp
	MODKEY
	MODKEY
44555ce334e4417e06aacfce544bd88b|file:///usr/ring/var/st/config.h|201|26|^v|cpp
	  
	  
76cb52088651b7ad731072ac3f686ef9|file:///usr/ring/var/dwm/config.h|80|4|^v|cpp
	MODKEY
	MODKEY
	MODKEY
f9a69b6a1a1265890d35e8004c66b3ec|file:///usr/ring/var/dwm/config.h|60|1|V|cpp
	#define MODKEY Mod1Mask
d63f407f17dd2eab9a8be1e7fcdd7746|file:///usr/ring/var/dwm/config.h|61|9|v|cpp
	MODKEY Mod1Mask
90307eb332a51378ee3ccadf2d603916|file:///usr/ring/var/dwm/config.h|61|9|v|cpp
	MODKEY
1dd32a98e8cff06cb479a5ca38394ee0|file:///usr/ring/var/dwm/config.h|81|4|^v|cpp
	Mod4Mask
	Mod4Mask
	Mod4Mask
9d84c98b09539140315b394b73eb913c|file:///usr/ring/var/st/README.md|1|1|V|markdown
	st - simple terminal
	--------------------
	st is a simple terminal emulator for X which sucks less.
	
	
	Requirements
	------------
	In order to build st you need the Xlib header files.
	
	
	Installation
	------------
	Edit config.mk to match your local setup (st is installed into
	the /usr/local namespace by default).
	
	Afterwards enter the following command to build and install st (if
	necessary as root):
	
	    make clean install
	
	
	Running st
	----------
	If you did not install st with make clean install, you must compile
	the st terminfo entry with the following command:
	
	    tic -sx st.info
	
	See the man page for additional details.
	
	Credits
	-------
	Based on Aurélien APTEL <aurelien dot aptel at gmail dot com> bt source code.
	
17fb47ff9edcebf6272da1c5269f1c91|file:///usr/ring/.zshrc|75|1|V|zsh
	# xauth
	DISPLAY=:0
7b0484a1ed699f943f5fb1b0778b1041|file:///usr/ring/.zshrc|75|1|V|zsh
	export DISPLAY
	
887904812217cca9bc2b9adb875daf42|file:///usr/ring/.zshrc|78|19|v|zsh
	/root
739614e6e102b07fc6aa0a313336e4d0|file:///usr/ring/var/dwm/config.h|75|39|v|cpp
	google-chrome-stable
cd87cd5ef753a06ee79fc75dc7cfe66c|file:///usr/ring/var/dwm/config.h|18|41|v|cpp
	eeeeee
8e530ccf2b84dc59c627b76e01516ffa|file:///usr/ring/var/dwm/config.h|19|40|v|cpp
	#005577
cdc228f94ce4a45c13eec3dad76ae05d|file:///usr/ring/var/dwm/config.h|75|39|v|cpp
	chromium
8505aa856874319e53c1180378da4d75|file:///usr/ring/.zprofile|2|5|v|zsh
	exec 
ae94a559d5c298af8e89a72865fb8b63|file:///usr/ring/.zprofile|2|2|V|zsh
	    startx
	fi
a503151db7ddbf8c4d7b81f686269f4e|file:///usr/ring/.zprofile|1|1|V|zsh
	if[[ ! $DISPLAY && $XDG_VTNR -eq 1]];then
b878ab222629ac7ff0854515f6cc2850|file:///usr/ring/.zshrc|6|1|V|zsh
	alias ra='ranger'
ad92694923612da0600d7be498cc2e08|file:///usr/ring/.zshrc|7|13|v|zsh
	ranger
001c1eff7d47fcb373d7b192653e3d3b|file:///usr/ring/var/dwm/dwm.c|1571|1|V|c
		system("cd ~/.dwm; ./autostart_blocking.sh");
4d73022a8754c6cb2a184f153b16bda3|file:///usr/ring/scripts/autostart.sh|4|1|V|sh
	/bin/zsh ~/scripts/dwm-status.sh &
9acb44549b41563697bb490144ec6258|file:///usr/ring/scripts/autostart.sh|5|23|v|sh
	status
eb7ad9d0e504ba3569368c2fb7cc3747|file:///usr/ring/scripts/autostart.sh|1|1|V|sh
	
	# 别人的外姐显示器的脚本
	# xrandr --auto --output HDMI1 --same-as eDP1 --size 分辨率
	/bin/zsh ~/scripts/dwm-status.sh &
	/bin/zsh ~/scripts/wp-autochange.sh &
1b95d35ee14d8c00766293d83210a054|file:///usr/ring/.vimrc|92|1|^v|vim
	"
	"
	"
	"
	"
	"
	"
	"
5428ca91f98786bd73f039ece86cbcd0|file:///usr/ring/.vimrc|92|1|^v|vim
	 
	 
	 
	 
	 
	 
	 
	 
16170c14972a7a27d901baf2775c1e43|file:///usr/ring/.vimrc|106|1|V|vim
	" Uncomment the following to have Vim jump to the last position when       
ae4512310a7f6ab013739ad00c3f6389|file:///usr/ring/.vimrc|105|1|V|vim
	" reopening a file                                                         
b2a93850b32b508c086fb841d547f0c1|file:///usr/ring/scripts/autostart.sh|6|1|V|sh
	picom -o 0.95 -i 0.88 --detect-rounded-corners --vsync --blur-background-fixed -f -D 5 -c -b
abc37411dde0b18da8dc021a0b832773|file:///usr/ring/var/dwm/dwm.c|1570|10|v|c
	cd ~/scripts; 
056f7302026f2261e6d0fa913a7c3484|file:///usr/ring/.zprofile|5|1|V|zsh
	export GTK_IM_MODULE=fcitx
	export QT_IM_MODULE=fcitx
	export XMODIFIERS="@im=fcitx"
4cc41b78d5472c16e04a8deaa1f0813a|file:///usr/ring/.xprofile|1|1|V|
	picom -o 0.95 -i 0.88 --detect-rounded-cor    ners --vsync --blur-background-fixed -f -D     5 -c -b
94e3053c1204419b7ab59bf97670e193|file:///usr/ring/.zprofile|5|1|V|zsh
	export GTK_IM_MODULE=fcitx
	export QT_IM_MODULE=fcitx
7150d12f51b9cf030f879ccade5e7ff0|file:///usr/ring/.zprofile|5|1|V|zsh
	export XMODIFIERS="@im=fcitx"
f46e2d3f5f3ed2f93bae1ee4cdd4ea68|file:///usr/ring/scripts/tap-to-click.sh|1|1|V|sh
	#!/bin/bash
d0bfed6abd79623d1ea64b0d7c9cfe21|file:///usr/ring/scripts/autostart.sh|3|1|V|sh
	picom -o 0.95 -i 0.88 --detect-rounded-corners --vsync --blur-background-fixed -f -D 5 -c -b
	/bin/bash ~/scripts/tap-to-click.sh &
3f918e834d255b126bd3d07c573a98a9|file:///usr/ring/scripts/autostart.sh|3|1|V|sh
	## 别人的外接显示器脚本
	## xrandr --auto --output HDMI1 --same-as eDP1 --size 分辨率
	#/bin/zsh ~/scripts/dwm-status.sh &
	#/bin/zsh ~/scripts/wp-autochange.sh &
25470700d1c4a609402825c7cf9edde1|file:///usr/ring/scripts/autostart.sh|5|1|V|sh
	#/bin/zsh ~/scripts/inverse-scroll.sh &
	#/bin/zsh ~/scripts/setxmodmap-colemak.sh &
	#nm-applet &
	#xfce4-power-manager &
	#xfce4-volumed-pulse &
	#/bin/zsh ~/scripts/run-mailsync.sh &
	#~/scripts/autostart_wait.sh &
889f0ec16b4137f5c011bade432bf86c|file:///usr/ring/scripts/scripts/autostart.sh|3|1|V|sh
	xrandr --auto --output HDMI1 --same-as eDP1 --size 1920x1080
	/bin/bash ~/scripts/dwm-status.sh &
	/bin/bash ~/scripts/wp-autochange.sh &
	picom -o 0.95 -i 0.88 --detect-rounded-corners --vsync --blur-background-fixed -f -D 5 -c -b
	/bin/bash ~/scripts/tap-to-click.sh &
	/bin/bash ~/scripts/inverse-scroll.sh &
	/bin/bash ~/scripts/setxmodmap-colemak.sh &
	nm-applet &
	xfce4-power-manager &
	xfce4-volumed-pulse &
	/bin/bash ~/scripts/run-mailsync.sh &
	~/scripts/autostart_wait.sh &
d6c60b6624926dadf74bf41206cab46a|file:///tmp/zsh5l0Ovg|1|1|V|zsh
	dasfadfads
63012f7d54ec43cd1af4d9640a4fa08c|file:///usr/share/nvim/runtime/doc/provider.txt|157|1|V|help
	Nvim has no direct connection to the system clipboard. Instead it depends on
	a |provider| which transparently uses shell commands to communicate with the
952bc27dc740e058c110c71c36bd38ab|file:///usr/share/nvim/runtime/doc/provider.txt|158|1|V|help
	a |provider| which transparently uses shell commands to communicate with the
	system clipboard or any other clipboard "backend".
59b7f6d046ef316fc4b0dbf9b95b7b98|file:///usr/ring/.vimrc|47|9|v|vim
	Y "+y
	noremap P "+p
	
	"************************
	"*Part: split the screen
	"*Desc:  
	"************************
	map sl :set splitright<CR>:vsplit<CR>
	map sj :set nosplitright<CR>:vsplit<CR>
	map si :set nosplitbelow<CR>:split<CR>
	map sk :set splitbelow<CR>:split<CR>
	"=== split screen movement===
	noremap <LEADER>w <C-w>w
	noremap <LEADER>i <C-w>k
	noremap <LEADER>k <C-w>j
	noremap <LEADER>j <C-w>h
	noremap <LEADER>l <C-w>l
	"=== split operation===
	map s<up> :res-5<CR>
	map s<down> :res+5<CR>
	map s<left> :vertical resize+5<CR>
	map s<right> :vertical resize-5<CR>
	
	
	"************************
	"*Part: quick operation
	"*Desc:  
	"************************
	map S :w<CR>
	map s <nop>
	map Q :q<CR>
	map R :source $MYVIMRC<CR>
	
	
	"************************
	"*Part: something Useful
	"*Desc:  
	"************************
	" open a terminal window
	noremap <LEADER>/ :terminal<CR>
	" exit terminal mode
	tnoremap <LEADER><Esc> <C-\><C-n>
	" to next <++>
	map <LEADER><LEADER> <Esc>/<++><CR>:nohlsearch<CR>c4l
	
	"undo the changes made previously
	"if has("vms")
	"  set nobackup
	"else
	"  if has('persistent_undo')
	"    set undofile
	"  endif
	"endif
	
	"************************
	"*Part: last position
	"*Desc: Uncomment the following to have Vim jump to the last position when       
	"************************
	if has("autocmd")                                                          
	  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif                                                        
	endif
	
	
	" Start interactive EasyAlign in visual mode (e.g. vipga)
	xmap ga <Plug>(EasyAlign)
	" Start interactive EasyAlign for a motion/text object (e.g. gaip)
	nmap ga <Plug>(EasyAlign)
	
	"************************
	"*Part: quick run code
	"*Desc:  
	"************************
	map <F5> :call RunCode()<CR>
	func! RunCode()
	    exec "w" 
	    if &filetype == 'c' 
	        exec 'terminal time ./%<'
	    elseif &filetype == 'cpp'
	        exec 'terminal time ./%<'
	    elseif &filetype == 'python'
	        exec 'terminal time python %'
	    elseif &filetype == 'java'
	        exec 'terminal time java %'
	    elseif &filetype == 'sh'
	        :!time bash %
		elseif &filetype == 'markdown'
			exec 'MarkdownPreviewStop'
			exec 'MarkdownPreview'
		elseif &filetype == 'vimwiki'
			exec 'MarkdownPreviewStop'
			exec 'MarkdownPreview'
	    endif                                                                              
	endfunc
	
	map <F6> :call CompileGcc()<CR>
	func! CompileGcc()
	    exec "w" 
	    if &filetype == 'c' 
	        exec '! clang % -o %<'
	    elseif &filetype == 'cpp'
	        exec '! clang++ % -o %<'
	    endif                                                                              
	
	endfunc
	
	
	"************************
	"*Part: setting for neovim
	"*Desc:  
	"************************
	autocmd FileType json syntax match Comment +\/\/.\+$+
4b8884ba6083ce54cd255c3d40edaa89|file:///tmp/zshIrUDmJ|7|1|V|zsh
	adsfs
1273f67fb9d296d27a57eb0a2b16396b|file:///usr/ring/.zshrc|14|1|V|zsh
	# arch jetbrains GUI
	export _JAVA_AWT_WM_NONREPARENTING=1
125f8f6da70786e9f7e2b399744aa885|file:///usr/ring/var/st/config.h|201|26|^v|cpp
	     
	     
3bdca26da092b853f5219bfbe23e8b3c|file:///usr/ring/var/st/config.h|201|4|v|cpp
	ControlMask
d741ae0f27b98a535da4dbb215c0c30e|file:///usr/ring/Documents/code/py/Tensorflow%2BOpenCv/Pipfile|9|1|V|config
	tensorflow = "*"
87cfcfa451275b3d26fa3727950f079c|file:///usr/ring/scripts/scripts/autostart.sh|11|1|V|sh
	xfce4-power-manager &
0ec18d2b7da5cd71d7439c4ab500d88e|file:///usr/ring/var/dwm/config.h|75|1|V|cpp
	static const char *browsercmd[]  = { "google-chrome-stable", NULL };
15438d792723a2a0a2901f5d317fdfe9|file:///usr/ring/var/dwm/config.h|76|39|v|cpp
	trayer
172522ec1028ab781d9dfd17eaca4427|file:///usr/ring/var/dwm/config.h|76|45|v|cpp
	david
106a6c241b8797f52e1e77317b96a201|file:///usr/ring/var/dwm/config.h|76|40|v|cpp
	home
beef876dd2fc6a2bd3ced57c4516d043|file:///usr/ring/var/dwm/config.h|76|20|v|cpp
	browse
e72f743c28d6f0d1efec7ee2c58d1e31|file:///usr/ring/var/dwm/config.h|84|1|V|cpp
		{ SUPER,                        XK_c,      spawn,          {.v = browsercmd } },
bd32b087ea6ae9bb911ed1a2c4664f9e|file:///usr/ring/var/dwm/config.h|85|67|v|cpp
	browsercmd
c935da815e02685e52ca26d8d03aa9a1|file:///tmp/zsheHV4Pj|1|1|V|zsh
	systemctl --type=service 
4dbc1d519ccdcecea379044f1d120e7e|file:///etc/shadowsocks/gui-config.json|15|1|V|json
				"server": "hk20-server.shadowflycn.com",
5d37cff24d43b85d6246734a26eddadc|file:///etc/shadowsocks/gui-config.json|15|1|V|json
				"server": "hk20-server.shadowflycn.com",
				"server_port": 60227,
22612f2e210adf3ceeaab1ff47abe094|file:///usr/ring/scripts/autostart_wait.sh|4|1|V|sh
	electron-ssr &
2fc975a891d2012bba93a877b7137fa4|file:///etc/vconsole.conf|1|1|V|
	FONT=/usr/share/fonts/DejaVu Sans Mono Nerd Font Complete Windows Compatible.ttf
dce3690b11f4785f3e3cf89079d29d71|file:///usr/ring/.config/ranger/rc.conf|35|1|V|conf
	map <C-f> fzf_select
767c1adb2495b0b975c920fd4e98593f|file:///usr/ring/.config/ranger/rc.conf|34|1|V|conf
	# search
6f2dc1823aaf6958c3cf4cbc6eed074e|file:///usr/ring/.vimrc|79|1|V|vim
	noremap <C-o> :prev
fcb08b164ac83e09964deb24f2d2e80b|file:///usr/ring/.vimrc|80|16|v|vim
	prev
19814b9c3fb2fdeeb8136563d118b672|file:///usr/ring/var/dwm/config.h|77|1|V|cpp
	static const char scratchpadname[] = "scratchpad";
ddd00e8aa510789a93c3dc71795f73f0|file:///usr/ring/var/dwm/config.h|79|19|v|cpp
	scratchpadname
0b872b9f12a9f7dbe18009a374b1bd5e|file:///usr/ring/var/dwm/config.h|79|30|v|cpp
	"scratchpad"
651f3ee82ab154cf367d6dc04c506cf1|file:///usr/ring/var/dwm/config.h|79|1|V|cpp
	static const char *upvol[] = {"amixer", "set", "Master", "5%+", NULL};
aa1be0c56bd4fffe125adadc90457e26|file:///usr/ring/var/dwm/config.h|80|1|V|cpp
	static const char *updowm[] = {"amixer", "set", "Master", "5%-", NULL};
88538b6bccb05fb1d3d298f9e62c19ba|file:///usr/ring/var/dwm/config.h|81|20|v|cpp
	updowm
1b69f6c1e12346071eb0c0eaffc0c4e8|file:///usr/ring/var/dwm/config.h|81|34|v|cpp
	amixer
0dbaa0babf66c34c44a7882434819a98|file:///usr/ring/var/dwm/config.h|81|48|v|cpp
	"Master"
1b20d33c65ed111fd16c5af467034062|file:///usr/ring/var/dwm/config.h|81|1|V|cpp
	static const char *lightup[] = {"light", "-A", "10", NULL};
33941ea2ecea39d3dd2d8cc4fa615cf7|file:///usr/ring/var/dwm/config.h|82|31|v|cpp
	amixer", "set", "Master", "5%-
287c41e726a00159129380397b66d4ab|file:///usr/ring/var/dwm/config.h|93|1|V|cpp
		{ MODKEY,                       XK_grave,  togglescratch,  {.v = scratchpadcmd } },
f568c3d38ae35a163e40eb1fa4a056d9|file:///usr/ring/var/dwm/config.h|97|1|V|cpp
		{ F11,                       XK_grave,  togglescratch,  {.v = scratchpadcmd } },
d8a48040e04e5fda35946a76b40d9056|file:///usr/ring/var/dwm/config.h|94|4|^v|cpp
	F1
	F2
	F3
	F1
	F1
7082ba7cb93d00eabbf8e127f524900c|file:///usr/ring/var/dwm/config.h|94|30|^v|cpp
	XK_grave
	XK_grave
	XK_grave
	XK_grave
	XK_grave
b0b27ea9c1cf743eea99a868eac95b44|file:///usr/ring/var/dwm/config.h|94|38|v|cpp
	glescratch
5c14cbbb19c04859c2ff7a21a1f409ce|file:///usr/ring/var/dwm/config.h|95|35|v|cpp
	togglescratch
3398e9d23852bc67383cd4630b7007ac|file:///usr/ring/var/dwm/config.h|94|48|v|cpp
	scratchpadcmd
def9cbe59ce34853e7081f62b095e348|file:///usr/ring/var/dwm/config.h|94|35|v|cpp
	mute
3147010b38c778a08479e9a2c179bc3d|file:///usr/ring/scripts/switch-mute.sh|1|1|V|sh
	amixer set Master toglle
b284388d0310326b4291b5bdff470eb7|file:///usr/ring/.xinitrc|64|1|V|sh
	xmodmap -e "keycode 121 = F1"
5f5ce68152e3ef6dce62be7803abd1d6|file:///usr/ring/var/dwm/config.h|89|2|^v|cpp
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
ecfb9f08f09baba9587e427bc8a820b1|file:///usr/ring/var/shadowsocksr/shadowsocks/crypto/openssl.py|53|34|v|python
	cleanup
86266ee937d97f812a8e57d22b62ee29|file:///usr/ring/.config/electron-ssr/shadowsocksr/shadowsocks/crypto/openssl.py|53|34|v|python
	reset
4b9001c9c058a8b31dda357f499e0687|file:///usr/ring/var/shadowsocksr/shadowsocks/crypto/openssl.py|1|1|V|python
	#!/usr/bin/env python
	#
	# Copyright 2015 clowwindy
	#
	# Licensed under the Apache License, Version 2.0 (the "License"); you may
	# not use this file except in compliance with the License. You may obtain
	# a copy of the License at
	#
	#     http://www.apache.org/licenses/LICENSE-2.0
	#
	# Unless required by applicable law or agreed to in writing, software
	# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
	# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
	# License for the specific language governing permissions and limitations
	# under the License.
	
	from __future__ import absolute_import, division, print_function, \
	    with_statement
	
	from ctypes import c_char_p, c_int, c_long, byref,\
	    create_string_buffer, c_void_p
	
	from shadowsocks import common
	from shadowsocks.crypto import util
	
	__all__ = ['ciphers']
	
	libcrypto = None
	loaded = False
	
	buf_size = 2048
	
	
	def load_openssl():
	    global loaded, libcrypto, buf
	
	    libcrypto = util.find_library(('crypto', 'eay32'),
	                                  'EVP_get_cipherbyname',
	                                  'libcrypto')
	    if libcrypto is None:
	        raise Exception('libcrypto(OpenSSL) not found')
	
	    libcrypto.EVP_get_cipherbyname.restype = c_void_p
	    libcrypto.EVP_CIPHER_CTX_new.restype = c_void_p
	
	    libcrypto.EVP_CipherInit_ex.argtypes = (c_void_p, c_void_p, c_char_p,
	                                            c_char_p, c_char_p, c_int)
	
	    libcrypto.EVP_CipherUpdate.argtypes = (c_void_p, c_void_p, c_void_p,
	                                           c_char_p, c_int)
	
	    if hasattr(libcrypto, "EVP_CIPHER_CTX_cleanup"):
	        libcrypto.EVP_CIPHER_CTX_cleanup.argtypes = (c_void_p,)
	    else:
	        libcrypto.EVP_CIPHER_CTX_reset.argtypes = (c_void_p,)
	    libcrypto.EVP_CIPHER_CTX_free.argtypes = (c_void_p,)
	
	    libcrypto.RAND_bytes.restype = c_int
	    libcrypto.RAND_bytes.argtypes = (c_void_p, c_int)
	
	    if hasattr(libcrypto, 'OpenSSL_add_all_ciphers'):
	        libcrypto.OpenSSL_add_all_ciphers()
	
	    buf = create_string_buffer(buf_size)
	    loaded = True
	
	
	def load_cipher(cipher_name):
	    func_name = 'EVP_' + cipher_name.replace('-', '_')
	    cipher = getattr(libcrypto, func_name, None)
	    if cipher:
	        cipher.restype = c_void_p
	        return cipher()
	    return None
	
	def rand_bytes(length):
	    if not loaded:
	        load_openssl()
	    buf = create_string_buffer(length)
	    r = libcrypto.RAND_bytes(buf, length)
	    if r <= 0:
	        raise Exception('RAND_bytes return error')
	    return buf.raw
	
	class OpenSSLCrypto(object):
	    def __init__(self, cipher_name, key, iv, op):
	        self._ctx = None
	        if not loaded:
	            load_openssl()
	        cipher = libcrypto.EVP_get_cipherbyname(common.to_bytes(cipher_name))
	        if not cipher:
	            cipher = load_cipher(cipher_name)
	        if not cipher:
	            raise Exception('cipher %s not found in libcrypto' % cipher_name)
	        key_ptr = c_char_p(key)
	        iv_ptr = c_char_p(iv)
	        self._ctx = libcrypto.EVP_CIPHER_CTX_new()
	        if not self._ctx:
	            raise Exception('can not create cipher context')
	        r = libcrypto.EVP_CipherInit_ex(self._ctx, cipher, None,
	                                        key_ptr, iv_ptr, c_int(op))
	        if not r:
	            self.clean()
	            raise Exception('can not initialize cipher context')
	
	    def update(self, data):
	        global buf_size, buf
	        cipher_out_len = c_long(0)
	        l = len(data)
	        if buf_size < l:
	            buf_size = l * 2
	            buf = create_string_buffer(buf_size)
	        libcrypto.EVP_CipherUpdate(self._ctx, byref(buf),
	                                   byref(cipher_out_len), c_char_p(data), l)
	        # buf is copied to a str object when we access buf.raw
	        return buf.raw[:cipher_out_len.value]
	
	    def __del__(self):
	        self.clean()
	
	    def clean(self):
	        if self._ctx:
	            if hasattr(libcrypto, "EVP_CIPHER_CTX_cleanup"):
	                libcrypto.EVP_CIPHER_CTX_cleanup(self._ctx)
	            else:
	                libcrypto.EVP_CIPHER_CTX_reset(self._ctx)
	            libcrypto.EVP_CIPHER_CTX_free(self._ctx)
	
	
	ciphers = {
	    'aes-128-cbc': (16, 16, OpenSSLCrypto),
	    'aes-192-cbc': (24, 16, OpenSSLCrypto),
	    'aes-256-cbc': (32, 16, OpenSSLCrypto),
	    'aes-128-cfb': (16, 16, OpenSSLCrypto),
	    'aes-192-cfb': (24, 16, OpenSSLCrypto),
	    'aes-256-cfb': (32, 16, OpenSSLCrypto),
	    'aes-128-ofb': (16, 16, OpenSSLCrypto),
	    'aes-192-ofb': (24, 16, OpenSSLCrypto),
	    'aes-256-ofb': (32, 16, OpenSSLCrypto),
	    'aes-128-ctr': (16, 16, OpenSSLCrypto),
	    'aes-192-ctr': (24, 16, OpenSSLCrypto),
	    'aes-256-ctr': (32, 16, OpenSSLCrypto),
	    'aes-128-cfb8': (16, 16, OpenSSLCrypto),
	    'aes-192-cfb8': (24, 16, OpenSSLCrypto),
	    'aes-256-cfb8': (32, 16, OpenSSLCrypto),
	    'aes-128-cfb1': (16, 16, OpenSSLCrypto),
	    'aes-192-cfb1': (24, 16, OpenSSLCrypto),
	    'aes-256-cfb1': (32, 16, OpenSSLCrypto),
	    'bf-cfb': (16, 8, OpenSSLCrypto),
	    'camellia-128-cfb': (16, 16, OpenSSLCrypto),
	    'camellia-192-cfb': (24, 16, OpenSSLCrypto),
	    'camellia-256-cfb': (32, 16, OpenSSLCrypto),
	    'cast5-cfb': (16, 8, OpenSSLCrypto),
	    'des-cfb': (8, 8, OpenSSLCrypto),
	    'idea-cfb': (16, 8, OpenSSLCrypto),
	    'rc2-cfb': (16, 8, OpenSSLCrypto),
	    'rc4': (16, 0, OpenSSLCrypto),
	    'seed-cfb': (16, 16, OpenSSLCrypto),
	}
	
	
	def run_method(method):
	
	    cipher = OpenSSLCrypto(method, b'k' * 32, b'i' * 16, 1)
	    decipher = OpenSSLCrypto(method, b'k' * 32, b'i' * 16, 0)
	
	    util.run_cipher(cipher, decipher)
	
	
	def test_aes_128_cfb():
	    run_method('aes-128-cfb')
	
	
	def test_aes_256_cfb():
	    run_method('aes-256-cfb')
	
	
	def test_aes_128_cfb8():
	    run_method('aes-128-cfb8')
	
	
	def test_aes_256_ofb():
	    run_method('aes-256-ofb')
	
	
	def test_aes_256_ctr():
	    run_method('aes-256-ctr')
	
	
	def test_bf_cfb():
	    run_method('bf-cfb')
	
	
	def test_rc4():
	    run_method('rc4')
	
	
	if __name__ == '__main__':
	    test_aes_128_cfb()
3b3b8e1af3fc71c4dc4b59375dbce6c8|file:///usr/ring/.config/electron-ssr/gui-config.json|223|15|v|json
	hk2-server.shadowflycn.com
f1f17934834ae2613699701054ef9684|file:///usr/ring/var/shadowsocksr/config.json|2|16|v|json
	0.0.0.0
c42af2fa7356818e0389593714f59b52|file:///usr/ring/var/shadowsocksr/config.json|4|20|v|json
	8388
0f1352c0d4d77ab0e34666f8aa04eaa5|file:///usr/ring/.config/electron-ssr/gui-config.json|218|17|v|json
	RP95iZ
a35554192e1e82d26b2896c41fcaedd6|file:///usr/ring/.config/electron-ssr/gui-config.json|215|15|v|json
	aes-256-cfb
23456e334edfeab778c0aaaebc107ee9|file:///usr/ring/var/shadowsocksr/config.json|9|16|v|json
	aes-128-ctr
731c83db8d2ff01bdc000083fd3c3740|file:///etc/v2ray/config.json|18|13|v|json
	1080
cfee190cd8d0221c2309b6d3a521e4ea|file:///etc/v2ray/config.json|6|1|V|json
	    // By default, V2Ray writes access log to stdout.
	    // "access": "/path/to/access/log/file",
	
	    // By default, V2Ray write error log to stdout.
	    // "error": "/path/to/error/log/file",
	
	    // Log level, one of "debug", "info", "warning", "error", "none"
cf1e8c14e54505f60aa10ceb8d5d8ab3|file:///usr/ring/tem/config.json|14|21|v|json
	server
6412121cbb2dc2cb9e460cfee7046be2|file:///usr/ring/tem/config.json|15|17|v|json
	10086
9df864028743e438755a322953475266|file:///usr/ring/tem/config.json|16|28|v|json
	b831381d-6324-4d53-ad4f-8cda48b30811
54eb9695a393cfb9ffde7493f8e26b0b|file:///usr/ring/var/dwm/config.h|94|34|v|cpp
	XF86AudioLowerVolume
41f984bb082af806e510740db289125d|file:///usr/ring/var/dwm/config.h|94|75|v|cpp
	toggle
9a6470fd54bf1fbdf19176ae5cc4b1a7|file:///usr/ring/var/dwm/config.h|61|1|V|cpp
	#define SUPER  Mod4Mask
fc91b14eef9c58c4cad8fdf87b4c0bea|file:///usr/ring/var/dwm/config.h|62|9|v|cpp
	SUPER
be50501c54e056581eb3f6c64ec2de70|file:///usr/ring/var/dwm/config.h|62|18|v|cpp
	Mod4Mask
7096424afee9d384ee6c491ec2f2f2d5|file:///usr/ring/var/dwm/config.h|62|1|V|cpp
	#define VOLMUTE  0x1008ff12
5415e9052565ecaf84f33d7f20996fd9|file:///usr/ring/var/dwm/config.h|63|12|v|cpp
	MUTE
94d28c3926c1024dad79073e0e961025|file:///usr/ring/var/dwm/config.h|63|18|v|cpp
	0x1008ff12
3741323aa99ac7d8ab981060e93e84c6|file:///usr/ring/var/dwm/config.h|65|9|v|cpp
	VOLMUTE
b8114d6ee7fd7cb9070b237461324297|file:///usr/ring/var/dwm/config.h|102|33|v|cpp
	XF86XK_AudioLowerVolume,
d4fef653a42497461722a0d05826f7c8|file:///usr/ring/var/dwm/config.h|100|49|v|cpp
	voldowm
fbe5ed41f17900a3530df39e77c3caa2|file:///usr/ring/var/dwm/config.h|101|47|v|cpp
	volup
5dcca707fa6b3a3fb4a5db2f3f8e7c6a|file:///usr/ring/var/dwm/config.h|102|50|v|cpp
	lightdowm
bcad78c2cf231b4139f8d3606867ad48|file:///usr/ring/var/dwm/config.h|103|48|v|cpp
	lightup
2f0c39509dbfa90b8e30e43597df0ecb|file:///usr/ring/var/dwm/config.h|85|32|v|cpp
	amixer", "set", "Master", "5%+"
a9ced3338a5e0b7c632433e418806efe|file:///usr/ring/var/dwm/config.h|85|41|v|cpp
	"-c", "1",
83194cd1027eff79a275ce2f5bc75c3d|file:///usr/ring/var/dwm/config.h|62|21|v|cpp
	1008ff12
695892d4bf05d45a92719bf75ad1af4a|file:///usr/ring/var/dwm/config.h|63|21|v|cpp
	1008ff11
	
b9c118a24290fa088b1c883c8ec4007d|file:///usr/ring/scripts/switch-mute.sh|1|1|V|sh
	amixer -c 1 set Master toggle
f03bde11d261f185cbacfa32c1c6538c|file:///usr/ring/scripts/switch-mute.sh|2|17|v|sh
	Master
aeba38ee78a6f1db4839fc1059c98d17|file:///usr/ring/var/dwm/config.h|85|53|v|cpp
	"set", "Master", 
2ccbaf0f0aacb7c6c596db692ff34e12|file:///usr/ring/var/dwm/config.h|85|1|V|cpp
	static const char *upvol[] = {"pamixer", "-i", "1", "10", NULL};
0b5c70b04b84af2d83e58f375e040a5b|file:///usr/ring/var/dwm/config.h|87|1|V|cpp
	static const char *dowmvol[] = {"amixer", "-c", "1","set", "Master", "5%-", NULL};
280289d58e4151d723d15761d7dde81d|file:///usr/ring/var/dwm/config.h|86|20|v|cpp
	upvol
f56c456fe42db6078902bde1ad9442a1|file:///usr/ring/var/dwm/config.h|86|1|V|cpp
	static const char *dowmvol[] = {"pamixer", "-i", "1", "10", NULL};
34bf3a2b3f000de55a265fb9ac5ed05c|file:///usr/ring/var/dwm/config.h|85|48|v|cpp
	"1",
d9a8fb05423ee44d4bdb93a58204fb0c|file:///usr/ring/var/dwm/config.h|87|52|v|cpp
	switch_mute.sh
0988d58e5f5fd2eb532406eef3a97eff|file:///usr/ring/var/dwm/config.h|87|34|v|cpp
	/usr/ring/scripts/switch-mute.sh
b593aa6d140e0c7444ace47a201798df|file:///usr/ring/.config/ranger/rc.conf|4|1|V|conf
	set colorscheme scheme
68934a3e9455fa72420237eb05902327|file:///usr/ring/.config/ranger/rc.conf|2|24|v|conf
	false
0974ad290d7c42c23783eef34abc8356|file:///usr/ring/.config/ranger/scope.sh|129|9|^v|sh
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	#
	# 
	# 
	# 
	# 
	# 
	# 
	#
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
17ecac4dcc0f6b25b508f9a5c19cae2d|file:///usr/ring/.vimrc|100|1|V|vim
	"else
ddf546e4f17018e8e29880e6709c913f|file:///usr/ring/.vimrc|97|1|V|vim
	au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
d59798275a74005f16c3f1d8b93a8377|file:///usr/ring/.vimrc|101|1|V|vim
	"if has("vms")
	"  set nobackup
	"  if has('persistent_undo')
	"    set undofile
	"  endif
	"endif
d81742cfe57b1f4df1c345d3efec07ac|file:///usr/ring/.vimrc|81|1|V|vim
	noremap <C-o> :prev<CR>
	noremap <C-n> :n<CR>
f4df1dc1c51096805ed022a4110ef165|file:///usr/ring/.config/ranger/rc.conf|2|1|V|conf
	RANGER_LOAD_DEFAULT_RC FALSE
acf8c40143d9d48a4befa35944e80856|file:///usr/ring/.config/ranger/rc.conf|7|27|v|conf
	iterm2
538ee8731c9f4f92b0d69a1c1ff2f018|file:///usr/ring/.config/ranger/scope.sh|113|9|^v|sh
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	  
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
	# 
946003f97ccc52d5d3b54ac0ec31bbfc|file:///usr/ring/.zshrc|14|32|v|zsh
	FALSE
1694ece19895dc6b30906aa32ab04774|file:///usr/ring/.zshrc|14|1|V|zsh
	export RANGER_LOAD_DEFAULT_R = false
1fb14d590a80f3eb0871bd27c484c017|file:///usr/ring/.config/ranger/rc.conf|1|1|V|conf
	# ranger with my config
7c2f782cb6bd22194187ee3eb7306fcd|file:///usr/ring/.zshrc|14|1|V|zsh
	export RANGER_LOAD_DEFAULT_RC=FALSE
1f436c52bdb83cfc97a7e56db866b897|file:///etc/resolv.conf|2|11|v|resolv
	 .168.1.1
aad65f6f306b50963928cfd7db7f6110|file:///etc/resolv.conf|2|1|V|resolv
	nameserver 192.168.1.1
66efff4c945d3c3b87fc271b47d456db|file:///etc/resolv.conf|3|12|v|resolv
	192.168.1.1
4bc672332eaf517acc92fb3cefcb048d|file:///usr/ring/.vimrc|88|1|V|vim
	cmap :w !sudo tee %
49326c6cc8008670fd7ea17efef08d7c|file:///usr/ring/scripts/dwm-status-refresh.sh|65|25|v|sh
	acpitool -B | grep -E 'Remaining capacity' | awk '{print $4}' | grep -Eo "[0-9]+" | paste -sd+ | bc
463cdad4e15c506da83993ca38c99dfd|file:///usr/ring/scripts/dwm-status-refresh.sh|96|9|v|sh
	🔋";
a3aafff73cc7e6e2524efd00451e7a06|file:///usr/ring/scripts/dwm-status-refresh.sh|98|9|v|sh
	🔌";
edb8fdc191f7996ab033146799c0f09a|file:///usr/ring/.xinitrc|56|6|v|sh
	/usr/ring/scripts/startdwm
ecf4da31d75d41f7eb2a912ba3ed1c42|file:///usr/ring/scripts/dwm-status-refresh.sh|90|8|v|sh
	ercent
ce5379a4dae2eaa17d2ef67a6629f96b|file:///usr/ring/scripts/dwm-status-refresh.sh|84|5|V|sh
	    total_charge=$(acpi -b | awk '{ print $3, $4 }' | tr -d ',');
e8dfecb1a25115640d390f9162b198b6|file:///usr/ring/scripts/startdwm|2|5|V|
	    # Log stderror to a file 
ca4399fc92420e2a65829a8768afae8f|file:///usr/ring/scripts/dwm-status-refresh.sh|99|7|v|sh
	# acpi can give Unknown or Charging if charging, https://unix.stackexchange.com/questions/203741/lenovo-t440s-battery-status-unknown-but-charging
d9c0d5aeb2e80d85b6682ef5c9a920e7|file:///usr/ring/scripts/dwm-status-refresh.sh|121|71|v|sh
	, $(get_time_until_charged )
738c6f5ff41006e7c73d21bf92959f04|file:///usr/ring/scripts/dwm-status-refresh.sh|68|17|v|sh
	ACPITOOL -B | GREP -E 'PRESENT RATE' | AWK '{PRINT $4}' | GREP -EO "[0-9]+" | PASTE -SD+ | BC
5032ec22797d180caebc2840dff74694|file:///usr/ring/scripts/dwm-status-refresh.sh|68|17|v|sh
	acpitool -B | grep -E 'Present rate' | awk '{print $4}' | grep -Eo "[0-9]+" | paste -sd+ | bc
9de2a76534480d9db130dd6c462b561a|file:///usr/ring/scripts/dwm-status-refresh.sh|74|6|V|sh
	    else
	        seconds="";
0e5243d9965540f62aac19a985f3f33e|file:///usr/ring/scripts/dwm-status-refresh.sh|72|5|v|sh
	then
f8ffaa808c2bb9d75f8fad580b9ebe77|file:///usr/ring/scripts/dwm-status-refresh.sh|73|1|V|sh
	        seconds="";
874ab70da01fb66ff03ce0fd95eb7fa7|file:///usr/ring/scripts/dwm-status-refresh.sh|81|37|v|sh
	 +%T
a22f235c96d6117d57bc9e36a17e2834|file:///usr/ring/scripts/dwm-status-refresh.sh|72|1|^v|sh
	#
	#
	#
	#
	#
	#
	#
2d368d70c6e748e2da0841cb98737dff|file:///usr/ring/scripts/dwm-status-refresh.sh|77|1|V|sh
		    #seconds=$(bc <<< "scale = 10; ($sum_remaining_charge / $present_rate) * 3600");
e663f07c8aaf23fb10d2db4860ae15a7|file:///usr/ring/scripts/dwm-status-refresh.sh|75|9|V|sh
	        p
b6b1eb5be785e7858cbb196993fad39a|file:///usr/ring/scripts/dwm-status-refresh.sh|68|19|v|sh
	pito
f4f8967d146d9c3090f1866658247dce|file:///usr/ring/scripts/dwm-status-refresh.sh|71|5|V|sh
	    seconds="";
11fb1fdca7971ab0f34174d6f0ed6059|file:///usr/ring/scripts/dwm-status-refresh.sh|74|6|V|sh
		    seconds=$(bc <<< "scale = 10; ($sum_remaining_charge / $present_rate) * 3600");
b94f6c9c90abb60603fe6f7dc90c28be|file:///usr/ring/scripts/dwm-status-refresh.sh|65|25|v|sh
	ACPITOOL -B | GREP -E 'REMAINING CAPACITY' | AWK '{PRINT $4}' | GREP -EO "[0-9]+" | PASTE -SD+ | BC
45cff63f2b8f56ffc0e8c61bf1d3b7c0|file:///usr/ring/scripts/dwm-status-refresh.sh|80|1|V|sh
		pretty_time=$(date -u -d ${seconds} +%T);
7c94772dc968be98aa370c3dd0c27390|file:///usr/ring/scripts/dwm-status-refresh.sh|81|14|v|sh
	$(date -u -d 
525de4446f4c3317f3aaea5db3d6951b|file:///usr/ring/scripts/dwm-status-refresh.sh|80|1|V|sh
		# pretty_time=$(date -u -d "${seconds}" +%T);
89c96d96ffea7f221c7f5142c44e8014|file:///usr/ring/scripts/dwm-status-refresh.sh|81|16|v|sh
	date -u -d "
02b2eb37b97c3eb3e002b1279b50c1c0|file:///usr/ring/scripts/dwm-status-refresh.sh|81|26|v|sh
	" +%T
8138b491fabfb26b1521ceea0b527754|file:///usr/ring/scripts/dwm-status-refresh.sh|75|9|V|sh
	        seconds=0;
0422dfc7a7e26d5cc5b771cd35f4b917|file:///usr/ring/scripts/dwm-status-refresh.sh|167|1|V|sh
	xsetroot -name "  💿$(print_mem)M ⬇️$vel_recv ⬆️$vel_trans $(dwm_alsa) [ $(print_bat) ]$(show_record) $(print_date) "
0653891fa2cbb272a542520164933b6f|file:///usr/ring/scripts/dwm-status-refresh.sh|168|18|v|sh
	 💿$(print_mem)M ⬇️$vel_recv ⬆️$vel_trans $(dwm_alsa) [ $(print_bat) ]$(show_record) $(print_date) 
bd741e760f7a43a1dbbe5c91f71b3e03|file:///usr/ring/scripts/autostart.sh|6|1|V|sh
	picom -o 0.95 -i 0.78 --detect-rounded-corners --vsync --blur-background-fixed -f -D 5 -c -b
ff9483d210113a41726ad784fe809efe|file:///usr/ring/tm|10|1|V|
	map K scrollAHalfPageDown
08a38277b0309070706f6652eeae9a53|file:///usr/ring/tm|11|22|v|
	Down
d515911b44b82c7c9e9019309b0b53a3|file:///usr/ring/tm|12|1|V|
	map I Scroll a half page up
668c8d0475a152bb5a6ff996d7b681c9|file:///usr/ring/tm|12|1|V|
	map <a-w> closeCurrentTab
1f79f57f0879ac5738c4060ce9ff6244|file:///usr/ring/tm|13|16|v|
	CurrentTab
bde4fb07da351ced2b36bfe589b169ee|file:///usr/ring/tm|14|1|V|
	map <a-t> Create new tab
955f5be4e3f63d16be048b1a7d581c9a|file:///usr/ring/tm|1|1|V|
	# Insert your preferred key mappings here.
	map k scrollDown
	map i scrollUp
	map j scrollLeft
	map l scrollRight
	map J goOneTabLeft
	map L goOneTabRight
	map <a-j> goBackInHistory
	map <a-l> goForwardInHistory
	map K scrollAHalfPageDown
	map I scrollAHalfPageUp
	map <a-w> closeCurrentTab
	map <a-t> closeNewTab
	map <a-r> reloadThePage
22931d2a78e7f37030cbcdc148e01760|file:///usr/ring/var/dwm/config.h|94|34|^v|cpp
	 
	 
	 
	 
3602b348464a3c2bb6db6bfd40514ccc|file:///usr/ring/tem.md|1|1|V|markdown
	# Insert your preferred key mappings here.
	map k scrollDown
	map i scrollUp
	map j scrollLeft
	map l scrollRight
	map J previousTab
	map L nextTab
	map K scrollPageDown
	map I scrollPageUp
	map <a-j> goBack
	map <a-l> goForward
	map <a-w> removeTab
	map <a-t> createTab
	map <a-r> reload
	map <a-T> restoreTab
5626b09081789e1980ac89a2c32bc23d|file:///usr/ring/var/vimium/README.md|28|1|V|markdown
	|-----|-----------|
194fd01eed9cbffcb181220a23bc0b14|file:///usr/ring/var/vimium/README.md|38|1|V|markdown
	|<a-T
fb9261ad67bae5038e4442ad56cbf958|file:///usr/ring/var/vimium/README.md|40|1|V|markdown
	|-------|-----------------------|
4b2a0e42d69061d08fa60a772981ab45|file:///usr/ring/var/vimium/README.md|40|3|^v|markdown
	<
	<
	<
	<
	<
	<
bf924d9c183f8eb52916ab4236caac8e|file:///usr/ring/var/vimium/README.md|40|10|^v|markdown
	>
	>
	>
	>
	>
	>
d6173469e2d971528b28cf53c1a2d3de|file:///usr/ring/var/vimium/README.md|40|1|V|markdown
	|---------------|-----------------------
23aa3b64c2471eeedf675f2b016536c5|file:///usr/ring/var/dwm/config.h|81|1|V|cpp
	static const char *trayercmd[]  = { "/usr/ring/scripts/tr-toggle.sh", NULL };
8a6d38cc5a46b7cdd363bb29233bfd74|file:///usr/ring/var/dwm/config.h|82|20|v|cpp
	trayercmd
2814cbcb8701ed7b884cca1536afb752|file:///usr/ring/var/dwm/config.h|82|33|v|cpp
	/usr/ring/scripts/tr-toggle.sh
51a23af1d80cf8f55981bb2fee6560c6|file:///usr/ring/var/dwm/config.h|66|1|V|cpp
	#define LIGHTUP   0x1008ff02
95668290f3e9ba8c5b0f32fad23df0b0|file:///usr/ring/var/dwm/config.h|67|9|v|cpp
	LIGHTUP
a4f67c8138a736c45fc94b7976b53219|file:///usr/ring/var/dwm/config.h|105|1|V|cpp
		{ 0,                            LIGHTUP,   spawn,          {.v = lightup       } },
5144a37b82f2618852d23544a387a7be|file:///usr/ring/var/st/config.h|175|14|v|cpp
	Mod1Mask
e3d5e88745fd884d551c7f25237a5b5e|file:///usr/ring/var/st/config.h|198|29|v|cpp
	Prior
26f6e108f3104e03da4be03b0462465f|file:///usr/ring/var/st/config.h|199|26|v|cpp
	XK_Next
cc00b32fae1803964d7af6f211f93ed6|file:///usr/ring/.config/fontconfig/fonts.conf|33|1|V|
	Testing area
6732cd23cbdc0957776bd72c7b9c4d68|file:///usr/ring/.config/fontconfig/_fonts.conf|2|1|V|xml
	<fontconfig>
	    <dir>~/.fonts</dir>
	    <match target="font">
	        <edit name="rgba" mode="assign">
	            <const>none</const>
	        </edit>
	    </match>
	    <match target="font">
	        <edit name="hinting" mode="assign">
	            <bool>true</bool>
	        </edit>
	    </match>
	    <match target="font">
	        <edit name="hintstyle" mode="assign">
	            <const>hintfull</const>
	        </edit>
	    </match>
	    <match target="font">
	        <edit name="antialias" mode="assign">
	            <bool>true</bool>
	        </edit>
	    </match>
	    <match target="font">
	        <edit mode="assign" name="lcdfilter">
	            <const>lcddefault</const>
	        </edit>
	    </match>
	    <match target="font">
	        <edit mode="assign" name="embeddedbitmap">
	            <bool>false</bool>
	        </edit>
	    </match>
	</fontconfig>
ed53a67e733e849a2401bdd248c693a6|file:///usr/ring/.config/fontconfig/fonts.conf|37|1|V|xml
	     <family>sans-serif</family>
	     <prefer>
542796fe290b6a43cd42255eeec24f54|file:///usr/ring/.config/fontconfig/fonts.conf|37|5|^v|xml
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
5e68e4e4c7e00d8b386a08be60e82476|file:///usr/ring/.config/fontconfig/fonts.conf|52|9|V|xml
	        <family>DejaVu Serif</family>
459d24b63e5a5fda317e0ae30e044e04|file:///usr/ring/.config/fontconfig/fonts.conf|49|24|v|xml
	Serif
740c2a26bcb936dd937c1b5e7e241db1|file:///usr/ring/.config/fontconfig/fonts.conf|42|9|V|xml
	        <family>DejaVu Sans Mono Nerd</family>
e9897dc40bd45cefd018474a201e5db5|file:///usr/ring/.config/fontconfig/fonts.conf|61|8|V|xml
	       <family>Noto Mono</family>
06a605208c855dc2444d8826278dd9b7|file:///usr/ring/.config/fontconfig/fonts.conf|35|1|V|xml
	
	    <alias>
	        <family>DejaVu-Sans-Mono-Nerd</family>
	      <family>sans-serif</family>
	      <prefer>
	        <family>DejaVu Sans Mono Nerd</family>
	        <family>Noto Sans</family>
	        <family>Noto Color Emoji</family>
	        <family>Noto Emoji</family>
	      </prefer> 
	    </alias>
	   
	    <alias>
	      <family>serif</family>
	      <prefer>
	        <family>DejaVu Sans Mono Nerd</family>
	        <family>DejaVu Sans</family>
	        <family>Noto Serif</family>
	        <family>Noto Color Emoji</family>
	        <family>Noto Emoji</family>
	      </prefer>
	    </alias>
	   
	    <alias>
	     <family>monospace</family>
	      <prefer>
	        <family>DejaVu Sans Mono Nerd</family>
	       <family>Noto Mono</family>
	       <family>Noto Color Emoji</family>
	       <family>Noto Emoji</family>
	      </prefer>
	    </alias>
9b3cc0d65e2c7f783770ee7881da4cd4|file:///usr/ring/var/dwm/config.h|14|40|v|cpp
	monospace
d8414208d08bac7c66bd31ec652eef83|file:///usr/ring/var/dwm/config.h|13|42|v|cpp
	dejavu
1f3870be274f6c49b3e31a0c6728957f|file:///usr/ring/var/dwm/config.h|13|42|v|cpp
	apple
781f4cb83459a0b07c4d95236037fa70|file:///usr/ring/var/dwm/config.h|13|42|v|cpp
	AppleColorEmoji
b09de0534545acff9249a32cd463b1ff|file:///usr/ring/var/dwm/config.h|13|42|v|cpp
	Apple Color Emoji:style=RegularApple Garamond:style=Bold:
9f3e0e42a8819592e2030c6cd14172a3|file:///usr/ring/var/dwm/config.h|13|42|v|cpp
	Apple Garamond:style=Bold
d2203cb1237cb6460cbad94564e39345|file:///usr/ring/var/dwm/config.h|13|66|v|cpp
	Regular
c5a6559201546710bd4f6646ed535ff7|file:///usr/ring/var/dwm/config.h|13|42|v|cpp
	Apple Color Emoji:style=Normal
834f091ce2efce2606c97802cff84a31|file:///usr/ring/var/dwm/config.h|13|42|v|cpp
	Apple Garamond:style=Regular
fac0068da5fcfaa59da83ed438557e1e|file:///usr/ring/var/st/config.h|8|1|V|cpp
	static char *font = "Liberation Mono:pixelsize=30:antialias=true:autohint=true";
3098fee62edb75d9e0dbd4be909541c8|file:///usr/ring/var/st/config.h|9|22|v|cpp
	Liberation Mono
80f4f1f4aedbc7254bce302862db0ba4|file:///usr/ring/var/st/config.h|9|22|v|cpp
	DejaVu-Sans-Mono-Nerd-Font-Complete-mono
336fbff3af7f9736cc848001e32dd2f1|file:///usr/ring/.config/fontconfig/fonts.conf1|39|15|v|xml
	zh_CN
510cc5d21f12739ff47d6aaf437f2fd1|file:///usr/ring/.config/fontconfig/fonts.conf|5|1|V|xml
	  <match target="font">
	    <edit mode="assign" name="rgba">
	      <const>rgb</const>
	    </edit>
	  </match>
	
	  <match target="font">
	    <edit mode="assign" name="hintstyle">
	      <const>hintfull</const>
	    </edit>
	  </match>
	
	  <match target="font">
	    <edit mode="assign" name="antialias">
	      <bool>true</bool>
	    </edit>
	  </match>
	
	  <match target="font">
	    <edit name="lcdfilter" mode="assign">
	      <const>lcddefault</const>
	    </edit>
	  </match>
	
	<!-- Default font (no fc-match pattern) -->
	  <match>
	    <edit mode="prepend" name="family">
	      <string>Noto Sans</string>
	    </edit>
	  </match>
	
	<!-- Default font for the zh_CN locale (no fc-match pattern) -->
	  <match>
	    <test compare="contains" name="lang">
	      <string>en_US</string>
	    </test>
	    <edit mode="prepend" name="family">
	      <string>Noto Sans CJK SC</string>
	    </edit>
	  </match>
	
799a0b11d33352c77088b73a329d351a|file:///usr/ring/.config/fontconfig/fonts.conf|79|1|V|xml
	      <family>Noto Sans</family>
8914892a3c29d8d868590910dc02daf8|file:///usr/ring/.config/fontconfig/fonts.conf|79|15|v|xml
	Noto Sans
f28d66f709c9fa9c692165156302ed4f|file:///usr/ring/.config/fontconfig/fonts.conf|79|15|v|xml
	</family>
0a792f6e1510963857e9c27c7a632899|file:///usr/ring/.config/fontconfig/fonts.conf|103|7|V|xml
	      <family>Meslo LG L DZ</family>
93c50a8f15826bda8692b4b34384d5cf|file:///usr/ring/.config/fontconfig/fonts.conf|103|15|v|xml
	Meslo LG L DZ
ffb67aee203e2e3456be6c135b0526f8|file:///usr/ring/.config/fontconfig/fonts.conf|114|1|V|xml
	  <dir>~/.fonts</dir>
980d14c0c85495b48b9a9134658e6121|file:///usr/ring/.config/fontconfig/fonts.conf|115|8|v|xml
	fonts
9a8165f3c9d32bfb7de1e1b2f81484bb|file:///usr/ring/.config/fontconfig/fonts.conf|115|3|V|xml
	  <dir>/usr/share/fonts</dir>
1ec8e22f99fe06bf3c3cf983b434b9c4|file:///usr/ring/.config/fontconfig/fonts.conf|104|1|V|xml
	      <family>Meslo LG L DZ</family>
	      <family>Noto Sans CJK SC</family>
	      <family>Noto Sans CJK TC</family>
	      <family>Noto Sans CJK JP</family>
	      <family>Noto Sans CJK KR</family>
	      <family>Noto Color Emoji</family>
	      <family>Noto Emoji</family>
00ae7c8f919e1f9e3c2321df36cccf8e|file:///usr/ring/.config/fontconfig/fonts.conf|92|1|V|xml
	      <family>Noto Serif CJK SC</family>
	      <family>Noto Serif CJK TC</family>
	      <family>Noto Serif CJK JP</family>
	      <family>Noto Serif CJK KR</family>
	      <family>Noto Color Emoji</family>
	      <family>Noto Emoji</family>
b80e7888989d4ba4c44d99822df5dfac|file:///usr/ring/.config/fontconfig/fonts.conf|80|1|V|xml
	      <family>Noto Sans CJK SC</family>
	      <family>Noto Sans CJK TC</family>
	      <family>Noto Sans CJK JP</family>
	      <family>Noto Sans CJK KR</family>
	      <family>Noto Color Emoji</family>
	      <family>Noto Emoji</family>
6f1dafe23ecb6b0f5aefe750d94536aa|file:///usr/ring/.config/fontconfig/fonts.conf|115|3|V|xml
	  <dir>fonts</dir>
e21f3d2050d0b998b920a143b6fd34d8|file:///usr/ring/.config/fontconfig/fonts.conf|79|15|v|xml
	Noto Sans</
2ca9f9ce112243f0333caa763941d482|file:///usr/ring/.config/fontconfig/fonts.conf|78|1|V|xml
	    <prefer>
	      <family>Noto Sans</family>
7dc55d2bd77ba5ba845ed02c307fbee2|file:///usr/ring/.config/fontconfig/fonts.conf|79|1|V|xml
	      <family>AppleGaramond</family>
957b395492683d088f5f676ffd0a082f|file:///usr/ring/.config/fontconfig/fonts.conf|106|1|V|xml
	      <family>Dejavu</family>
	      <family>Meslo LG L DZ</family>
	      <family>Noto Sans CJK SC</family>
	      <family>Noto Sans CJK TC</family>
	      <family>Noto Sans CJK JP</family>
	      <family>Noto Sans CJK KR</family>
	      <family>Noto Color Emoji</family>
3ff2745ec58b9ac5e11b330df1ddcc87|file:///usr/ring/.config/fontconfig/fonts.conf|93|1|V|xml
	      <family>Noto Serif</family>
	      <family>Noto Serif CJK SC</family>
	      <family>Noto Serif CJK TC</family>
	      <family>Noto Serif CJK JP</family>
	      <family>Noto Serif CJK KR</family>
	      <family>Noto Color Emoji</family>
a28f43852a68dfdd7e53260ff4de16d5|file:///usr/ring/.config/fontconfig/fonts.conf|80|1|V|xml
	      <family>Noto Sans</family>
	      <family>Noto Sans CJK SC</family>
	      <family>Noto Sans CJK TC</family>
	      <family>Noto Sans CJK JP</family>
	      <family>Noto Sans CJK KR</family>
	      <family>Noto Color Emoji</family>
674703e3004f29049746c16d968a8c52|file:///usr/ring/.config/fontconfig/fonts.conf|113|1|V|xml
	      <family>Noto Emoji</family>
d0aaebd3082ade5960e82c26e1a6139c|file:///usr/ring/.config/fontconfig/fonts.conf|85|5|V|xml
	      <family>Noto Color Emoji</family>
c926f487b387b4e5aa20c3384db391eb|file:///usr/ring/.config/fontconfig/fonts.conf|101|7|V|xml
	      <family>Dejavu</family>
44772de07d2ae56f3f1cebf2cae4c377|file:///usr/ring/.config/fontconfig/fonts.conf|103|1|V|xml
	      <family>Meslo LG L DZ</family>
	      <family>Noto Sans CJK SC</family>
	      <family>Noto Sans CJK TC</family>
	      <family>Noto Sans CJK JP</family>
	      <family>Noto Sans CJK KR</family>
c8e94af6258ac6b5cdc4a151172fb26d|file:///usr/ring/.config/fontconfig/fonts.conf|91|1|V|xml
	      <family>Noto Serif</family>
	      <family>Noto Serif CJK SC</family>
	      <family>Noto Serif CJK TC</family>
	      <family>Noto Serif CJK JP</family>
	      <family>Noto Serif CJK KR</family>
b1a7629f02ecf470ebc49fcad739e431|file:///usr/ring/.config/fontconfig/fonts.conf|80|1|V|xml
	      <family>Noto Sans</family>
	      <family>Noto Sans CJK SC</family>
	      <family>Noto Sans CJK TC</family>
	      <family>Noto Sans CJK JP</family>
	      <family>Noto Sans CJK KR</family>
3d3e6d41a7e30b9c563c902466491f42|file:///usr/ring/.config/fontconfig/fonts.conf|79|15|v|xml
	AppleGaramond<
428b1fe0f96c384f772347b46a134a8c|file:///usr/ring/.config/fontconfig/fonts.conf|79|15|v|xml
	AppleGaramond
6bc97de200705fc2f719ae709821b80d|file:///usr/ring/.config/fontconfig/fonts.conf|4|8|v|xml
	~/.fonts
91df8a5ff39c460e7463fa037e576e9b|file:///usr/ring/.config/fontconfig/fonts.conf_|9|1|V|xml
	    <match target="font">
	        <edit name="hinting" mode="assign">
	            <bool>true</bool>
	        </edit>
	    </match>
ecf489b1a1f807bbeb4e4585cdb5f7c6|file:///usr/ring/.config/fontconfig/fonts.conf|12|3|^v|xml
	  
	  
	  
	  
	  
f1840d0bba4398162233acc5298aa9e2|file:///usr/ring/.config/fontconfig/fonts.conf|23|3|V|xml
	  <!--
a9ce8c87b08ced99c816e6f17c62a65e|file:///usr/ring/.config/fontconfig/fonts.conf|12|3|V|xml
	  <match target="font">
	      <edit name="hinting" mode="assign">
	          <bool>true</bool>
	      </edit>
	  </match>
b4d93de28d90239baf8394509f537056|file:///usr/ring/.config/fontconfig/fonts.conf|41|12|v|xml
	<edit mode="prepend" name="family">
	      <string>Noto Sans</string>
	    </edit>
	
3d945423f8e9496c429a5d8c65b4604f|file:///usr/ring/.config/fontconfig/fonts.conf|39|62|v|xml
	Ubuntu
71095c56c641f2c4a4f189b9dfcd7a38|file:///usr/ring/.config/fontconfig/fonts.conf|50|15|v|xml
	en_US
5a0324895e4428d92bbf7e41bce96d39|file:///usr/ring/.config/fontconfig/fonts.conf|52|9|V|xml
	        </test>
fde25da58efb05d135f2077713c0bd4f|file:///usr/ring/.config/fontconfig/fonts.conf|56|15|v|xml
	Noto Sans CJK SC
8f71be86fbc49cfc13974afbdda2ace0|file:///usr/ring/.config/fontconfig/fonts.conf|49|1|V|xml
	    <test compare="contains" name="lang">
	      <string>zh</string>
	    </test>
d7fec6c5901654cd28dd730c7a56cd65|file:///usr/ring/.config/fontconfig/fonts.conf|79|15|v|xml
	Noto Serif
2f3f439d2ba32bbaf13b92f34a3b8ef6|file:///usr/ring/.config/fontconfig/fonts.conf|79|15|v|xml
	DejaVu-Sans-Mono-Nerd-Font-Complete-Mono
940ff6c680bf9f780f24788762740a62|file:///usr/ring/.config/fontconfig/fonts.conf|74|1|V|xml
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>serif</string>
	    </test>
	    <edit name="family" mode="prepend" binding="same">
	      <string>DejaVu-Sans-Mono-Nerd-Font-Complete-Mono</string>
	    </edit>
	  </match>
6d3c1a22ea15a6ddf11b58c586587705|file:///usr/ring/.config/fontconfig/fonts.conf|73|1|V|xml
	<!-- Default serif fonts -->
acac00431ea43babc0d62dcbf13a2e30|file:///usr/ring/.config/fontconfig/fonts.conf|83|14|v|xml
	serif
ed2c156c30846fbd46cd02504081a5ef|file:///usr/ring/.config/fontconfig/fonts.conf|111|15|v|xml
	Noto Sans CJK KR
aab7aa49d9f8ff03e06c6b810260e733|file:///usr/ring/.config/fontconfig/fonts.conf|107|29|V|xml
	      <family>Noto Sans</family>
	      <family>Noto Sans CJK SC</family>
9ff3bab23d1fabd3a5c9c2c05d1c6217|file:///usr/ring/.config/fontconfig/fonts.conf|107|7|V|xml
	      <family>Noto Sans CJK TC</family>
	      <family>Noto Sans CJK JP</family>
1b79a7633dda54474bf473b5e4be7579|file:///usr/ring/.config/fontconfig/fonts.conf|113|7|V|xml
	      <family>Noto Serif</family>
	      <family>Noto Serif CJK SC</family>
d59ee88cd787d0b578ff3f7d4e8e1d64|file:///usr/ring/.config/fontconfig/fonts.conf|113|7|V|xml
	      <family>Noto Serif CJK TC</family>
	      <family>Noto Serif CJK JP</family>
98d183cae27854e5b3114405c0b287f4|file:///usr/ring/.config/fontconfig/fonts.conf|113|7|V|xml
	      <family>Noto Serif CJK KR</family>
3e6c49525fd8d4fe53b21e41fbaa6e6b|file:///usr/ring/.config/fontconfig/fonts.conf|119|9|V|xml
	      <family>Meslo LG L DZ</family>
	      <family>Noto Sans CJK SC</family>
cceaf52ad6d8ab27c0a9c4081f359cd9|file:///usr/ring/.config/fontconfig/fonts.conf|120|7|V|xml
	      <family>Noto Sans CJK JP</family>
	      <family>Noto Sans CJK KR</family>
17eaf691e7a3537d9f5bd7f7488f6e45|file:///usr/ring/.config/fontconfig/fonts.conf|107|1|V|xml
	      <family>AppleColorEmoji</family>
ad979c7e793fdfcf433455757d107677|file:///usr/ring/.config/fontconfig/fonts.conf|108|1|V|xml
	      <family>EmojiOne</family>
	      <family>AppleColorEmoji</family>
aea1fc38a48f00fb89565b2f88938667|file:///usr/ring/.config/fontconfig/fonts.conf|99|1|V|xml
	      <string>DejaVu-Sans-Mono-Nerd-Font-Complete-Mono</string>
40b3cbf59b956d772fb5d432aa1121ee|file:///usr/ring/.config/fontconfig/fonts.conf|40|1|V|xml
	    <!--
	    <edit mode="prepend" name="family">
	      <string>Noto Sans</string>
	    </edit>
	    -->  
0dbe08fb9c3b77d58077a7f94b93bfa5|file:///usr/ring/.config/fontconfig/fonts.conf|66|1|V|xml
	<!-- ^^^ CN part  ^^^ -->
da74e2b401a5de19946ede2b08d4ac20|file:///usr/ring/.config/fontconfig/fonts.conf|117|5|V|xml
	    <prefer>
b45cffe084dd3d20d928bee85e7b0f21|file:///usr/ring/.config/fontconfig/fonts.conf|105|8|v|xml
	string
c9f4f2b7a3526b49a2dc0f35b2d0f1a0|file:///usr/ring/.config/fontconfig/fonts.conf|52|15|v|xml
	adobe-source-han-serif
560a6af3ca9eed524280933b0c6f3ecb|file:///usr/ring/.config/fontconfig/fonts.conf|39|62|v|xml
	DejaVu Sans Mono
a0cf2f68a13e39e67530763819aa80f8|file:///usr/ring/.config/fontconfig/fonts.conf|70|1|V|xml
	<!-- Default serif fonts -->
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>scan</string>
	    </test>
	    <edit name="family" mode="prepend" binding="same">
	      <string>adobe-source-han-serif</string>
	    </edit>
	  </match>
	      
	<!-- Default scan fonts -->
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>serif</string>
	    </test>
	    <edit name="family" mode="prepend" binding="same">
	      <string>Lucida MAC</string>
	    </edit>
	  </match>
	
	<!-- Default monospace fonts -->
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>monospace</string>
	    </test>
	    <edit name="family" mode="prepend" binding="same">
	      <string>DejaVu-Sans-Mono-Nerd-Font-Complete-Mono</string>
	    </edit>
	  </match>
1d5693569dfc89b3774295f4e15f8437|file:///usr/ring/.config/fontconfig/fonts.conf|42|1|V|xml
	<!--  CN part   -->
2810a5d9737cf9dcf833136f6c16a779|file:///usr/ring/.config/fontconfig/fonts.conf|55|1|V|xml
	<!-- Default sans-serif font -->
60f27eeefb9ecba6c51cebd1634c0490|file:///usr/ring/.config/fontconfig/fonts.conf|42|1|V|xml
	<!-- Default font for the zh_CN locale (no fc-match pattern) -->
666ddb16f6079ad2c9ba6d7a91657064|file:///usr/ring/.config/fontconfig/fonts.conf|37|40|v|xml
	 -->
468e41c989ae5bbfae8b41b66f395741|file:///usr/ring/.config/fontconfig/fonts.conf|37|1|V|xml
	<!-- Default font (no fc-match pattern)
	  <match>
	    <edit name="family" mode="assign" binding="same"><string>adobe-source-han-serif</string></edit>
	  </match>
	-->
	
64383995fefe9842a73b783031330e03|file:///usr/ring/.config/fontconfig/fonts.conf|92|13|v|xml
	sans-serif
6b9b794e4fc8a58d17659af84984e1b2|file:///usr/ring/.config/fontconfig/fonts.conf|77|15|v|xml
	Roboto
303ffc39417f055adfc04b07eb366ccb|file:///usr/ring/.config/fontconfig/fonts.conf|39|1|V|xml
	  <match>
	    <test compare="contains" name="lang">
	      <string>zh</string>
	    </test>
	    <test name="family">
	      <string>serif</string>
	    </test>
	    <edit mode="prepend" name="family">
	      <string>adobe-source-han-serif</string>
	    </edit>
	  </match>
	
	  <match target="pattern">
	    <test compare="contains" name="lang">
	      <string>zh</string>
	    </test>
	    <test qual="any" name="family">
	      <string>sans-serif</string></test>
	    <edit name="family" mode="prepend" binding="same">
	      <string>adobe-source-han-sans-cn-fonts</string>
	    </edit>
	  </match>
e0ab07457c3bd9e9e6deccdc4724616f|file:///usr/ring/.config/fontconfig/fonts.conf|39|5|v|xml
	 Default font for the zh_CN locale (no fc-match pattern) 
3f50a4d74a59578578fed3eb2fa2bfa6|file:///usr/ring/.config/fontconfig/fonts.conf|45|15|v|xml
	Source Han Sans CN
bd3571d8ec3281e618dc99c67c5ae697|file:///usr/ring/.config/fontconfig/fonts.conf|85|15|v|xml
	Source Han Serif CN
b06ee88cc6db3cc6280f26d7824faf03|file:///usr/ring/.config/fontconfig/fonts.conf|61|15|v|xml
	adobe-source-han-sans-cn-fonts
0ddd63424b5af786fdd47bcc9209bcf3|file:///usr/ring/.config/fontconfig/fonts.conf|85|32|v|xml
	sans
6bd715e6d77d7666f1f80a3c4497afac|file:///usr/ring/.config/fontconfig/fonts.conf|104|15|v|xml
	Lucida MAC
727fa461710a7ba72003d7f2a848a616|file:///usr/ring/.config/fontconfig/fonts.conf|112|15|v|xml
	Lucida MAC Bold
fa79fb198c9621c6c2e99e61e91ddfad|file:///usr/ring/.config/fontconfig/fonts.conf|112|36|v|xml
	-cn-fonts
989cf4d305ad0627104a926c9ee0910b|file:///usr/ring/.config/fontconfig/fonts.conf|140|1|V|xml
	      <family>DejaVu-Sans-Mono-Nerd-Font-Complete-Mono</family>
8611d3db05b8e80d9aef96041894ce0a|file:///usr/ring/.config/fontconfig/fonts.conf|112|15|v|xml
	adobe-source-han-sans
54580ad1dfafec29241b2449afb0c5f8|file:///usr/ring/.config/fontconfig/fonts.conf|112|15|v|xml
	SourceHanSansCN-Regula
a2e039a8e561c3396c6abfd566448d3b|file:///usr/ring/.config/fontconfig/fonts.conf|112|15|v|xml
	SourceHanSansCN-Regular
432a5a3729f02a60033228ec8aadcf80|file:///usr/ring/.config/fontconfig/fonts.conf|129|33|v|xml
	 Font:style=Book
b5f3ad67b92522416c28ed4a65925308|file:///usr/ring/.config/fontconfig/fonts.conf|129|15|v|xml
	DejaVu Sans Mono for Powerline
5386f7efda03815a2205cde66a573076|file:///usr/ring/.config/fontconfig/fonts.conf|129|1|V|xml
	      <family> DejaVuSansMono Nerd Font Mono</family>
5ba112da5cb1b752a8eed0e187d3bb60|file:///usr/ring/.config/fontconfig/fonts.conf|149|7|V|xml
	      <family>Noto Sans CJK TC</family>
2d5e39866b934c79383358a15d5a9186|file:///usr/ring/.config/fontconfig/fonts.conf|131|7|V|xml
	      <family>Apple Color Emoji</family>
406b0defb1ec99ee25c3987a3f130258|file:///usr/ring/.config/fontconfig/fonts.conf|130|5|V|xml
	      <family>EmojiOne</family>
07f978771c055c10c6b1efd74660e625|file:///usr/ring/.config/fontconfig/fonts.conf|129|1|V|xml
	      <family>DejaVuSansMono Nerd Font Mono</family>
b0cac3af8bfaf340943508d811fa22a2|file:///usr/ring/.config/fontconfig/fonts.conf|129|15|v|xml
	DejaVuSansMono Nerd Font Mono
156d0562c899763d989fe7d22ec04805|file:///usr/ring/.config/fontconfig/fonts.conf|129|39|v|xml
	 Mono
2c831f03a2fb0d41e993fc73c91a8fd4|file:///usr/ring/.config/fontconfig/fonts.conf|129|33|v|xml
	,思源黑体 C
91382ac707e689b50dfa68653c26bdbc|file:///usr/ring/.config/fontconfig/fonts.conf|85|15|v|xml
	adobe-source-han-serif-cn-fonts
0b46c1e2bcba08509694fde0c7981823|file:///usr/ring/.config/fontconfig/fonts.conf|85|26|v|xml
	Sans
4acbf87e236c1d300f88f21e1f481cbd|file:///usr/ring/.config/fontconfig/fonts.conf|85|34|v|xml
	,思源黑体 CN
e4c43cd3a5bc2f83dc2e49e6f9e0c26b|file:///usr/ring/.config/fontconfig/fonts.conf|85|15|v|xml
	Source Han Serif CN Medium
3fa41f6beef6c149bfb97b1814bde18d|file:///usr/ring/.config/fontconfig/fonts.conf|104|15|v|xml
	SourceHanSerifCN-Medium
2ef81a77e3d9f0351dc04fa6e0f725cc|file:///usr/ring/.config/fontconfig/fonts.conf|112|29|v|xml
	:style=Bold
02b8cfa97e2b0f45bf9b46c622351be4|file:///usr/ring/.config/fontconfig/fonts.conf|112|21|v|xml
	Garamond Bold
c1f2df134c6fa8969d46ab73583c84ff|file:///usr/ring/.config/fontconfig/fonts.conf|130|15|v|xml
	Apple Color Emoji
9b239e0f158a1dddf88079013a9c6636|file:///usr/ring/.config/fontconfig/fonts.conf|104|29|v|xml
	:style=Regular
2157b764e41a6ed825abee66415f7772|file:///usr/ring/.config/fontconfig/fonts.conf|131|15|v|xml
	.Apple Color Emoji
83cae4e78efd1db7c2fb7b210a6f8ae3|file:///usr/ring/.config/fontconfig/fonts.conf|131|1|V|xml
	      <family>.Apple Color Emoji UI</family>
3ad2623f6c3d9f4b8ca119ad1ca9ead2|file:///usr/ring/.config/fontconfig/fonts.conf|104|15|v|xml
	Apple Garamond
9373400632d94db7c47719addb80b8db|file:///usr/ring/.config/fontconfig/fonts.conf|130|1|V|xml
	      <family>Source Han Serif CN Medium</family>
ce2cb42930b54499651e4e3694cf8300|file:///usr/ring/.config/fontconfig/fonts.conf|130|7|V|xml
	      <family>Source Han Sans CN</family>
114c3050111d8b8ddd830b99ccebd246|file:///usr/ring/.config/fontconfig/fonts.conf|112|25|v|xml
	Bold
a47fb40153a7583f98213d03259c9676|file:///usr/ring/.config/fontconfig/fonts.conf|112|15|v|xml
	LucidaMacBold
d3ebccacbc5ef2a7a9e4e1585d3a9516|file:///usr/ring/.config/fontconfig/fonts.conf|134|15|v|xml
	EmojiOne
092987a19f24d86e77c3ef98c63bd9db|file:///usr/ring/.config/fontconfig/fonts.conf|134|1|V|xml
	      <family>Braille</family>
eceb5badcb37676a17f0f39b86d461c1|file:///usr/ring/.config/fontconfig/fonts.conf|132|15|v|xml
	.Apple Color Emoji UI
8d3478308f69cd295d408b56a9f163c0|file:///usr/ring/.config/fontconfig/fonts.conf|104|15|v|xml
	Lucida Mac
2a87e057b44b842b5073f610a552befe|file:///usr/ring/.config/fontconfig/fonts.conf|154|5|V|xml
	      <family>.Apple Color Emoji UI</family>
	      <family>AppleColorEmoji</family>
0db01fe035018d67b8103c41da242621|file:///usr/ring/.config/fontconfig/fonts.conf|144|5|V|xml
	      <family>.Apple Color Emoji UI</family>
	      <family>Apple Color Emoji</family>
9f6290f4436e5a2351f12e03b6433c3c|file:///usr/ring/.config/fontconfig/fonts.conf|144|15|v|xml
	Apple
1be91657130f7c7ff60097ae25d0c015|file:///usr/ring/.config/fontconfig/fonts.conf|144|14|v|xml
	> Color Emoji
89fd9819cff55b2f9aa23f85b04e7621|file:///usr/ring/.config/fontconfig/fonts.conf|144|1|V|xml
	      <family>Noto Color Emoji</family>
	      <family>EmojiOne</family>
ba323c3f5b3f1b536461d41cc7f1ba60|file:///usr/ring/.config/fontconfig/conf.d/01-emoji.conf|7|21|v|xml
	emoji
deb82ec7e7a996fcab1c77be9fcb3a73|file:///usr/ring/.config/fontconfig/conf.d/01-emoji.conf|1|1|V|xml
	<?xml version='1.0'?>
	<!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>
	<fontconfig>
	  <!-- Emoji config -->
	  <alias>
	    <family>Apple Color Emoji</family>
	    <prefer><family>Apple Color Emoji</family></prefer>
	  </alias>
	  <alias>
	    <family>Segoe UI Emoji</family>
	    <prefer><family>.Apple Color Emoji UI</family></prefer>
	  </alias>
	  <alias>
	    <family>Segoe UI Symbol</family>
	    <prefer><family>.Apple Color Emoji UI</family></prefer>
	  </alias>
	  <alias>
	    <family>Noto Emoji</family>
	    <prefer><family>Apple Color Emoji</family></prefer>
	  </alias>
	  <alias>
	    <family>Noto Color Emoji</family>
	    <prefer><family>Apple Color Emoji</family></prefer>
	  </alias>
	  <alias>
	    <family>Symbola</family>
	    <prefer><family>Apple Color Emoji</family></prefer>
	  </alias>
	  <alias>
	    <family>Android Emoji</family>
	    <prefer><family>Apple Color Emoji</family></prefer>
	  </alias>
	  <alias>
	    <family>EmojiSymbols</family>
	    <prefer><family>Apple Color Emoji</family></prefer>
	  </alias>
	</fontconfig>
b2daffcd3a9f848272890c5e6eefb4d4|file:///usr/ring/var/st/config.h|9|1|V|cpp
	static char *font = "DejaVuSansMono Nerd Font Mono:pixelsize=30:antialias=true:autohint=true";
82399c0eb416d9635550b0356bcc3a36|file:///usr/ring/var/st/config.h|10|43|v|cpp
	:pixelsize=30:antialias=true:autohint=true
471bd2443519287c36f9b0d24df8134c|file:///usr/ring/var/st/config.h.rej|7|1|V|diff
	+/* Spare fonts */
	+static char *font2[] = {
	+/*	"Inconsolata for Powerline:pixelsize=12:antialias=true:autohint=true", */
	+/*	"Hack Nerd Font Mono:pixelsize=11:antialias=true:autohint=true", */
	+};
	+
5d53bff1a04e04d666d4def8e1aa61b7|file:///usr/ring/var/st/config.h|10|1|^v|cpp
	+
	+
	+
	+
	+
	+
a01a2e4eb32a1f5ef5434e5c2d3a0127|file:///usr/ring/var/st/config.h|13|3|v|cpp
	Hack Nerd Font Mono
83106ad8b5d95aa0659e176b2d7ab9fd|file:///usr/ring/var/st/config.h|16|1|V|cpp
	static char *font2[] = {"Apple Color Emoji"};
4af910e3063c0377f7d9e041da58a15e|file:///usr/ring/.config/fontconfig/fonts.conf|144|15|v|xml
	Braille
bb335aa7a1c73b99c65d03c13489e626|file:///usr/ring/var/st/config.h|12|3|v|cpp
	Inconsolata for Powerline
14c283e34740348799ca7907c98df698|file:///usr/ring/var/st/config.h|13|1|V|cpp
		"AppleColorEmoji:pixelsize=11:antialias=true:autohint=true",
9010f9db6d11edaf3c42b01dddd080b5|file:///usr/ring/var/st/config.h|12|1|V|cpp
		"Braille:pixelsize=30:antialias=true:autohint=true",
1fe41171094a1a67f87218a8181efae8|file:///usr/ring/var/st/config.h|14|1|V|cpp
		"AppleColorEmoji:pixelsize=30:antialias=true:autohint=true",
499b5248759a34212831b5aa509e27cb|file:///usr/ring/var/st/config.h|13|1|V|cpp
		"Lucida Mac:pixelsize=30:antialias=true:autohint=true",
3d437fa8b5d44c9f70e632307c5c362f|file:///usr/ring/.config/fontconfig/fonts.conf|154|1|V|xml
	      <family>Apple Garamond Light</family>
c11bb7eec8b60626961f63cda07648ac|file:///usr/ring/.config/fontconfig/fonts.conf|37|1|V|xml
	<!--
407191c5505e96506a2a11d953a852d0|file:///usr/ring/.config/fontconfig/fonts.conf|145|1|V|xml
	      <family>.Apple Color Emoji UI</family>
	      <family>Apple Color Emoji</family>
	      <family>EmojiOne</family>
44cc2744531b82325b345a91d892b137|file:///usr/ring/.config/fontconfig/fonts.conf|151|5|V|xml
	      <family>.Apple Color Emoji UI</family>
	      <family>AppleColorEmoji</family>
	      <family>EmojiOne</family>
26503378383fba05fa8aecc76244b2a2|file:///usr/ring/.config/fontconfig/fonts.conf|37|1|V|xml
	
	<!-- Default font for the zh_CN locale (no fc-match pattern) -->
	<!-- Map all regular CN fonts to Source Han fonts-->
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>WenQuanYi Zen Hei</string>
	    </test>
	    <edit name="family" mode="assign" binding="same">
	      <string>Source Han Sans CN</string>
	    </edit>
	  </match>
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>WenQuanYi Micro Hei</string>
	    </test>
	    <edit name="family" mode="assign" binding="same">
	      <string>Source Han Sans CN</string>
	    </edit>
	  </match>
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>WenQuanYi Micro Hei Light</string>
	    </test>
	    <edit name="family" mode="assign" binding="same">
	      <string>Source Han Sans CN</string>
	    </edit>
	  </match>
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>Microsoft YaHei</string>
	    </test>
	    <edit name="family" mode="assign" binding="same">
	      <string>Source Han Sans CN</string>
	    </edit>
	  </match>
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>SimHei</string>
	    </test>
	    <edit name="family" mode="assign" binding="same">
	      <string>Source Han Sans CN</string>
	    </edit>
	  </match>
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>SimSun</string>
	    </test>
	    <edit name="family" mode="assign" binding="same">
	      <string>Source Han Serif CN Medium</string>
	    </edit>
	  </match>
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>SimSun-18030</string>
	    </test>
	    <edit name="family" mode="assign" binding="same">
	      <string>Source Han Serif CN Medium</string>
	    </edit>
	  </match>
	
	
	<!-- Default font for the en_US locale (no fc-match pattern) -->
	  <match>
	    <test qual="any" name="family">
	      <string>serif</string>
	    </test>
	    <edit name="family" mode="prepend" binding="strong">
	      <string>Lucida Mac</string>
	    </edit>
	  </match>
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>sans-serif</string>
	    </test>
	    <edit name="family" mode="prepend" binding="strong">
	      <string>LucidaMacBold</string>
	    </edit>
	  </match>
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>monospace</string>
	    </test>
	    <edit name="family" mode="prepend" binding="strong">
	      <string>DejaVu-Sans-Mono-Nerd-Font-Complete-Mono</string>
	    </edit>
	  </match>
	
	
	<!-- Fallback fonts preference order -->
	  <alias>
	    <family>sans-serif</family>
	    <prefer>
	      <family>Source Han Sans CN</family>
	      <family>DejaVuSansMono Nerd Font Mono</family>
	      <family>Braille</family>
	      <family>.Apple Color Emoji UI</family>
	      <family>Apple Color Emoji</family>
	      <family>EmojiOne</family>
	    </prefer>
	  </alias>
	
	
	  <alias>
	    <family>serif</family>
	    <prefer>
	      <family>Source Han Serif CN Medium</family>
	      <family>DejaVuSansMono Nerd Font Mono</family>
	      <family>Braille</family>
	      <family>.Apple Color Emoji UI</family>
	      <family>Apple Color Emoji</family>
	      <family>EmojiOne</family>
	    </prefer>
	  </alias>
	
	  <alias>
	    <family>monospace</family>
	    <prefer>
	      <family>Source Han Serif CN Medium</family>
	      <family>DejaVuSansMono Nerd Font Mono</family>
	      <family>Braille</family>
	      <family>.Apple Color Emoji UI</family>
	      <family>AppleColorEmoji</family>
	      <family>EmojiOne</family>
	    </prefer>
	  </alias>
c31df825d52bfb1a17c1adea82359717|file:///usr/ring/.config/fontconfig/fonts.conf|112|31|v|xml
	,Noto Sans CJK TC Medium
79dab3622cea920959f9ccc78b4f5467|file:///usr/ring/.config/fontconfig/fonts.conf|129|1|V|xml
	      <family>Noto Sans CJK HK</family>
e0196103d68b0403c80f2809119d8bda|file:///usr/ring/.config/fontconfig/fonts.conf|4|1|V|xml
	    <dir>/usr/share/fonts</dir>
e04098505ace4cd438f2591da1c37343|file:///usr/ring/.config/fontconfig/fonts.conf|5|10|v|xml
	/usr/share
1af5e4e63ff704e2eccd99d5b59a026d|file:///usr/ring/.config/fontconfig/fonts.conf|39|1|V|xml
	<!-- Default font for the zh_CN locale (no fc-match pattern) -->
	<!-- Map all regular CN fonts to Source Han fonts-->
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>WenQuanYi Zen Hei</string>
	    </test>
	    <edit name="family" mode="assign" binding="same">
	      <string>Source Han Sans CN</string>
	    </edit>
	  </match>
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>WenQuanYi Micro Hei</string>
	    </test>
	    <edit name="family" mode="assign" binding="same">
	      <string>Source Han Sans CN</string>
	    </edit>
	  </match>
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>WenQuanYi Micro Hei Light</string>
	    </test>
	    <edit name="family" mode="assign" binding="same">
	      <string>Source Han Sans CN</string>
	    </edit>
	  </match>
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>Microsoft YaHei</string>
	    </test>
	    <edit name="family" mode="assign" binding="same">
	      <string>Source Han Sans CN</string>
	    </edit>
	  </match>
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>SimHei</string>
	    </test>
	    <edit name="family" mode="assign" binding="same">
	      <string>Source Han Sans CN</string>
	    </edit>
	  </match>
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>SimSun</string>
	    </test>
	    <edit name="family" mode="assign" binding="same">
	      <string>Source Han Serif CN Medium</string>
	    </edit>
	  </match>
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>SimSun-18030</string>
	    </test>
	    <edit name="family" mode="assign" binding="same">
	      <string>Source Han Serif CN Medium</string>
	    </edit>
	  </match>
	
	
	<!-- Default font for the en_US locale (no fc-match pattern) -->
	  <match>
	    <test qual="any" name="family">
	      <string>serif</string>
	    </test>
	    <edit name="family" mode="prepend" binding="strong">
	      <string>Lucida Mac</string>
	    </edit>
	  </match>
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>sans-serif</string>
	    </test>
	    <edit name="family" mode="prepend" binding="strong">
	      <string>LucidaMacBold</string>
	    </edit>
	  </match>
	  <match target="pattern">
	    <test qual="any" name="family">
	      <string>monospace</string>
	    </test>
	    <edit name="family" mode="prepend" binding="strong">
	      <string>DejaVu-Sans-Mono-Nerd-Font-Complete-Mono</string>
	    </edit>
	  </match>
	
	
	<!-- Fallback fonts preference order -->
	  <alias>
	    <family>sans-serif</family>
	    <prefer>
	      <family>Source Han Sans CN</family>
	      <family>Noto Sans CJK HK</family>
	      <family>Noto Sans CJK TC</family>
	      <family>.Apple Color Emoji UI</family>
	      <family>Apple Color Emoji</family>
	      <family>EmojiOne</family>
	    </prefer>
	  </alias>
	
	
	  <alias>
	    <family>serif</family>
	    <prefer>
	      <family>Source Han Serif CN Medium</family>
	      <family>Noto Sans CJK HK</family>
	      <family>Noto Sans CJK TC</family>
	      <family>.Apple Color Emoji UI</family>
	      <family>Apple Color Emoji</family>
	      <family>EmojiOne</family>
	    </prefer>
	  </alias>
	
	  <alias>
	    <family>monospace</family>
	    <prefer>
	      <family>Source Han Serif CN Medium</family>
	      <family>Noto Sans CJK HK</family>
	      <family>Noto Sans CJK TC</family>
	      <family>.Apple Color Emoji UI</family>
	      <family>AppleColorEmoji</family>
	      <family>EmojiOne</family>
	    </prefer>
	  </alias>
	
27f98d2b8ac1cdbf9e1dd9fd31c25eb4|file:///usr/ring/var/dwm/config.h|19|41|v|cpp
	37474f
15a7016d3d34e2ad034cd8568551f4bc|file:///usr/ring/var/dwm/config.h|19|49|v|cpp
	 //37474f
	
a754824a4821cdc12266f8d49e6a1c05|file:///usr/ring/var/dwm/config.h|19|49|v|cpp
	 //37474f
7f4807bfbefece1687e93f53e10c410f|file:///usr/ring/var/dwm/config.h|19|41|v|cpp
	66CCFF
c861dc10b676a5504518a4fe387a2fd0|file:///usr/ring/var/dwm/config.h|19|40|v|cpp
	0000FF
a2b39a6ce99d1144adbd678b2835d29d|file:///usr/ring/var/dwm/config.h|19|41|v|cpp
	7AFFBD
d12519dc084b624aa9319c1eb780a664|file:///usr/ring/var/dwm/config.h|19|41|v|cpp
	7ABDFF
8d2f887c95f29b1910b06631d1795333|file:///usr/ring/var/dwm/config.h|19|41|v|cpp
	0099C
f833a90f32cda18e572afea83fa56292|file:///usr/ring/var/st/config.h|12|47|v|cpp
	autohint=true
0933edf0f7a0795f98529b6f85b50279|file:///usr/ring/var/st/config.h|14|39|v|cpp
	:autohint=true
74f028cc1c67ac71d2afdc40d9145917|file:///usr/ring/.config/ranger/rc.conf|5|27|v|conf
	urxvt
61ae15c5f7956f2170ccfc3e10ff4b3e|file:///usr/ring/.config/ranger/scope.sh|112|9|^v|sh
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	 
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
f6bdcb81f3b5159b44869dc4490ef53a|file:///usr/ring/.config/ranger/scope.sh|93|1|^v|sh
	        #
	        #
	        #
	
336b953ea710e0783203cdec135d384a|file:///usr/ring/.config/ranger/scope.sh|93|9|^v|sh
	#
	#
	#
12a0642e57ef75af81512460fcf105aa|file:///usr/ring/.config/ranger/scope.sh|129|56|v|sh
	x-7z-compressed
0fea1189f998de7fef1b7f634ef5afb0|file:///usr/ring/.config/ranger/scope.sh|117|9|^v|sh
	#
	#
	#
	#
	#
	#
	#
	#
	#
7a97f79d52125b276f3b3dea691dec04|file:///usr/ring/.config/ranger/scope.sh|113|9|^v|sh
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
e11439824cc5cba00285044c52f1aede|file:///usr/ring/.config/ranger/rc.conf|3|3|v|conf
	image 
fe33580c5f7fd251a355a8f7e7762860|file:///usr/ring/.config/ranger/rc.conf|4|1|V|conf
	set preview_images true
59b514174bffe4ae402b3d63aad79fe0|file:///usr/ring/.config/ranger/rc.conf|5|13|v|conf
	images
b326b5062b2f0e69046810717534cb09|file:///usr/ring/.config/ranger/rc.conf|5|20|v|conf
	true
099656d295dddb05f803c2395113930c|file:///usr/ring/.config/ranger/rc.conf|4|1|V|conf
	set preview_images false
31420ab7d63bbd13156874d834e6e8d6|file:///usr/ring/.vimrc|114|1|V|vim
	:smile:
518c1736437a6d9d80deeb351cbbacb5|file:///usr/ring/.vimrc|104|1|V|vim
	let g:gitgutter_sign_added = emoji#for('small_blue_diamond')
	let g:gitgutter_sign_modified = emoji#for('small_orange_diamond')
	let g:gitgutter_sign_removed = emoji#for('small_red_triangle')
	let g:gitgutter_sign_modified_removed = emoji#for('collision')
	
	for e in emoji#list()
	  call append(line('$'), printf('%s (%s)', emoji#for(e), e))
	endfor
	set completefunc=emoji#complete
4b406c5a484e8beed9a8827e5c9bb465|file:///usr/ring/var/dwm/config.h|44|1|V|cpp
		{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
763f7f1aec350cd1a46238d1d5c3c229|file:///usr/ring/var/dwm/config.h|45|5|v|cpp
	Firefox
0d080c30fecec740785fced1fea8f086|file:///usr/ring/var/dwm/config.h|45|35|v|cpp
	1 << 
24a43a806f1ed291e0e6d718fed5ccc2|file:///usr/ring/var/dwm/config.h|45|1|V|cpp
		{ "QQ",       NULL,       NULL,       4 << 9,       1,           -1 },
b8549b1d6f0ef4d326dc0d02b98712cd|file:///usr/ring/var/dwm/config.h|45|1|V|cpp
		{ "qq",       NULL,       NULL,       4 << 9,       1,           -1 },
774d4aff1819be845be0166e4abde8ea|file:///usr/ring/var/st/config.h|10|21|v|cpp
	"DejaVuSansMono Nerd Font Mono:pixelsize=30:antialias=true:autohint=true";
	
b2796a3a6d3a9295e7596e310ed2af86|file:///usr/ring/var/st/config.h|13|1|V|cpp
		"AppleColorEmoji:pixelsize=30:antialias=true",
45fe1f9b3e7022413dd744ccbacc3c12|file:///usr/ring/var/dwm/config.h|45|1|V|cpp
		{ "netease-cloud-music",       NULL,       NULL,       4 << 9,       1,           -1 },
544641b4c9e17de5886ba3016e317193|file:///usr/ring/var/dwm/config.h|46|5|v|cpp
	netease-cloud-music
c69719e4c0d6c981f4728ece175bb6c4|file:///usr/ring/var/dwm/config.h|46|1|V|cpp
		{ "ss-qt5",       NULL,       NULL,       4 << 9,       1,           -1 },
e07140835a5d806251bad51cb2f80a63|file:///usr/ring/var/dwm/config.h|47|5|v|cpp
	ss-qt5
3469089c5c2c2cf811229602e8129263|file:///usr/ring/var/dwm/dwm.c.rej|7|1|V|diff
	+	int sfx, sfy, sfw, sfh; /* stored float geometry, used on mode revert */
d614b2ee765bc6afe67c28ae2677a091|file:///usr/ring/var/dwm/dwm.c.rej|13|1|V|diff
	+	unsigned char expandmask;
	+	int expandx1, expandy1, expandx2, expandy2;
	+	Bool wasfloating, isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;
c26f15e86e3de4c398a8273272aba034|file:///usr/ring/var/dwm/dwm.c|101|3|v|c
	Bool
482b79db72799677e2e86c7c577411cd|file:///usr/ring/var/dwm/dwm.c.rej|23|1|V|diff
	+	c->sfx = c->x;
	+	c->sfy = c->y;
	+	c->sfw = c->w;
	+	c->sfh = c->h;
c6beca8ac2ae10b80d86ce5f21b50bea|file:///usr/ring/var/dwm/dwm.c.rej|29|1|V|diff
	+	c->wasfloating = False;
	+	c->expandmask = 0;
7efbbfed7278326a8b9f49a45a14d110|file:///usr/ring/var/dwm/dwm.c.rej|53|1|V|diff
	+			if ((m = recttomon(c->x, c->y, nw, nh))) {
	+				if (m != selmon) 
	+					sendmon(c, m);
e5797ee74f287ecc0fbef802130483e4|file:///usr/ring/var/dwm/dwm.c.rej|63|1|V|diff
	+	Monitor *oldm = selmon;
32a32e978db87e959b337b1a0545df60|file:///usr/ring/var/dwm/dwm.c|1844|1|V|c
		if (!arg || !arg->v || arg->v != selmon->lt[selmon->sellt])
2c1c1ccf24d524c4df52b69c6a72dfc2|file:///usr/ring/var/dwm/dwm.c.rej|72|1|V|diff
	+	if(!arg || !arg->v || arg->v != selmon->lt[selmon->sellt]) {
7353b26edba10908a1744af58ff71161|file:///usr/ring/var/dwm/dwm.c.rej|74|1|V|diff
	+		if (!selmon->lt[selmon->sellt]->arrange) {
	+			for (Client *c = selmon->clients ; c ; c = c->next) {
	+				if(!c->isfloating) {
	+					/*restore last known float dimensions*/
	+					resize(c, selmon->mx + c->sfx, selmon->my + c->sfy,
	+					       c->sfw, c->sfh, False);
	+				}
	+			}
	+		}
	+	}
4031c1ada0a7434844f4ac280677e03e|file:///usr/ring/var/dwm/dwm.c|2086|1|V|c
		if (selmon->sel->isfloating)
			resize(selmon->sel, selmon->sel->x, selmon->sel->y,
				selmon->sel->w, selmon->sel->h, 0);
2cb3374bb4a77eb11500cb79681e2356|file:///usr/ring/var/dwm/dwm.c.rej|94|1|V|diff
	+	if(selmon->sel->isfloating) {
	+		/*restore last known float dimensions*/
	+		resize(selmon->sel, selmon->mx + selmon->sel->sfx, selmon->my + selmon->sel->sfy,
	+		       selmon->sel->sfw, selmon->sel->sfh, False);
	+	} else {
	+		if (selmon->sel->isfullscreen)
	+			setfullscreen(selmon->sel, False);
	+		/*save last known float dimensions*/
	+		selmon->sel->sfx = selmon->sel->x - selmon->mx;
	+		selmon->sel->sfy = selmon->sel->y - selmon->my;
	+		selmon->sel->sfw = selmon->sel->w;
	+		selmon->sel->sfh = selmon->sel->h;
	+	}
cef30d5e7e8fc0e526abd745d64d9f61|file:///usr/ring/var/dwm/dwm.c|2086|1|^v|c
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
	+
f8320b26d30ab433c5a54546d21f414c|file:///usr/ring/var/dwm/dwm.c|1214|19|v|c
	False
242927592c8266c20f5b18be9f9372e1|file:///usr/ring/var/dwm/dwm.c.rej|40|1|V|diff
	+			if ((m = recttomon(nx, ny, c->w, c->h))) {
	+				if (m != selmon) 
	+					sendmon(c, m);
56c628c3c19839b532df4d77e1d5f9a7|file:///usr/ring/var/dwm/dwm.c|198|1|V|c
	static void movemouse(const Arg *arg);
0a2f97a0ae4c0415b0edc975c1dc041a|file:///usr/ring/var/dwm/dwm.c|2570|1|V|c
	static void
	moveresize(const Arg *arg)
	{
		XEvent ev;
		Monitor *m = selmon;
		
		if(!(m->sel && arg && arg->v && m->sel->isfloating))
	return;
	
		
		resize(m->sel, m->sel->x + ((int *)arg->v)[0],
	    m->sel->y + ((int)arg->v)[1], m->sel->w + ((int)arg->v)[2], m->sel->h + ((int*)arg->v)[3], True);
	
		
		while(XCheckMaskEvent(dpy, EnterWindowMask, &ev));
	}
fab2e149f530a91c48d5d30328c7b329|file:///usr/ring/var/dwm/dwm.c|326|17|v|c
	(int)(
0e2c970b89665333bcfe8a8bb5b451f3|file:///usr/ring/var/dwm/dwm.c|326|18|v|c
	(int*)
9e1e6f3e903ece733ba526f969500dd3|file:///usr/ring/var/dwm/dwm.c|321|1|V|c
		if(!(m->sel && arg && arg->v && m->sel->isfloating))
	        return;
8f02dc4bd6d29cc4ead16bb2a37b98d1|file:///usr/ring/var/dwm/config.h|151|1|V|cpp
	    { MODKEY,					    XK_Down,	moveresize,		{.v = (int []){ 0, 25, 0, 0 }}},
	    { MODKEY,					    XK_Up,		moveresize,		{.v = (int []){ 0, -25, 0, 0 }}},
	    { MODKEY,					    XK_Right,	moveresize,		{.v = (int []){ 25, 0, 0, 0 }}},
	    { MODKEY,					    XK_Left,	moveresize,		{.v = (int []){ -25, 0, 0, 0 }}},
	    { MODKEY|ShiftMask,			    XK_Down,	moveresize,		{.v = (int []){ 0, 0, 0, 25 }}},
	    { MODKEY|ShiftMask,			    XK_Up,		moveresize,		{.v = (int []){ 0, 0, 0, -25 }}},
	    { MODKEY|ShiftMask,			    XK_Right,	moveresize,		{.v = (int []){ 0, 0, 25, 0 }}},
	    { MODKEY|ShiftMask,			    XK_Left,	moveresize,		{.v = (int []){ 0, 0, -25, 0 }}},
a62340ee5462bbad2bbd744545458c44|file:///usr/ring/var/dwm/config.h|157|1|V|cpp
	    { MODKEY|ShiftMask,			    XK_Down,	moveresize,		{.v = (int []){ 0, 0, 0, 25 }}},
	    { MODKEY|ShiftMask,			    XK_Up,		moveresize,		{.v = (int []){ 0, 0, 0, -25 }}},
	    { MODKEY|ShiftMask,			    XK_Right,	moveresize,		{.v = (int []){ 0, 0, 25, 0 }}},
	    { MODKEY|ShiftMask,			    XK_Left,	moveresize,		{.v = (int []){ 0, 0, -25, 0 }}},
3e301b1e0d4d457d55c30bdbe82e427e|file:///usr/ring/var/dwm/config.h|161|36|^v|cpp
				   
				   
				   
				   
3c2ab0ff8df69ab0b7167799ac196ce7|file:///usr/ring/var/dwm/config.h|153|7|^v|cpp
	MODKEY
	MODKEY
	MODKEY
	MODKEY
	MODKEY
	MODKEY
	MODKEY
	MODKEY
	MODKEY
	MODKEY
	MODKEY
	MODKEY
92b09c7c48c520c3c55e497875da437c|file:///usr/ring/var/dwm/config.h|155|26|v|cpp
	Right
945d5e233cf7d6240f6b783b36a374ff|file:///usr/ring/var/dwm/config.h|156|26|v|cpp
	Left
629cd3b9ce88d453842bff191870d621|file:///usr/ring/var/dwm/config.h|50|1|V|cpp
		{ "electronic-wechat",       NULL,       NULL,       4 << 9,       1,           -1 },
d227db81108a4f68347b10ca4c22f546|file:///usr/ring/var/dwm/config.h|51|5|v|cpp
	electronic-wechat
eae1ad56654351b17aad6dd642012a0b|file:///usr/ring/var/dwm/config.h|51|1|V|cpp
		{ "transmission-qt",       NULL,       NULL,       4 << 9,       1,           -1 },
2aa5d444dcb653004b765844255280a7|file:///usr/ring/var/dwm/config.h|52|5|v|cpp
	transmission-qt
8b6cf52b773f85b24ee18ef05807448d|file:///usr/ring/var/dwm/config.h|52|2|V|cpp
		{ "",       NULL,       NULL,       4 << 9,       1,           -1 },
3ecc2e5206252a84eb4d78e576ff76ce|file:///usr/ring/.config/ranger/scope.sh|83|13|V|sh
	            lynx -dump -- "${FILE_PATH}" && exit 5
	            elinks -dump "${FILE_PATH}" && exit 5
01ff808da2d559c2860a76584177db5d|file:///usr/ring/.config/ranger/scope.sh|129|9|^v|sh
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
29aa34b5e22ba4f030dd0724cd57333e|file:///usr/ring/var/dwm/config.h|51|1|V|cpp
		{ "transmission-gtk",       NULL,       NULL,       4 << 9,       1,           -1 },
84277bf3e96220912abce854cfa9cfde|file:///usr/ring/var/dwm/config.h|52|17|v|cpp
	-gtk
892f4f5aae5f13c0087dae15f22d0174|file:///usr/ring/.config/ranger/rc.conf|5|20|v|conf
	./scope.sh
	
f5eb17d79998f4579da6db2c98cdd48d|file:///usr/ring/.config/ranger/rc.conf|5|1|V|conf
	set preview_script /usr/ring/.config/ranger/scope.sh
6d728dda84c5eeb7864368f456a9cec2|file:///usr/ring/var/dwm/config.h|155|7|^v|cpp
	ALTKEY
	ALTKEY
	ALTKEY
	ALTKEY
	ALTKEY
	ALTKEY
	ALTKEY
	ALTKEY
	ALTKEY
	ALTKEY
	ALTKEY
	ALTKEY
2e922637c0c3347555338d754f3c18ee|file:///usr/ring/.zshrc|15|1|V|zsh
	export ranger_load_default_rc=false
16518154fcc12cb9c715478443414867|file:///usr/ring/var/dwm/config.h|51|5|v|cpp
	electronic
e1cf44e89b83a81e82724df36f288302|file:///usr/ring/var/dwm/config.h|51|18|v|cpp
	qt-wechat
dd55f1a878bac681b0c756bc564c8434|file:///usr/ring/.config/ranger/rc.conf|5|1|V|conf
	set use_preview_script true
	set preview_script ~/.config/ranger/scope.sh
471b1a0f62a0944161ba3ffa3f7dc500|file:///usr/ring/.config/ranger/scope.sh|93|9|^v|sh
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
ec2d1dad91590433b269d9ce8f1bc780|file:///usr/ring/.config/ranger/scope.sh|45|9|^v|sh
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	 
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
a4187c975033c955eee9b5a85cc581b2|file:///usr/ring/.config/ranger/scope.sh|61|9|^v|sh
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
327c73a20237ccdb9ee0d64a96e3ea07|file:///usr/ring/.config/ranger/scope.sh|113|9|^v|sh
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	 
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
aa29595f695138c9d92428c9a9317adc|file:///usr/ring/.config/ranger/scope.sh|1|1|V|sh
	#!/usr/bin/env bash
	
	set -o noclobber -o noglob -o nounset -o pipefail
	IFS=$'\n'
	
	# If the option `use_preview_script` is set to `true`,
	# then this script will be called and its output will be displayed in ranger.
	# ANSI color codes are supported.
	# STDIN is disabled, so interactive scripts won't work properly
	
	# This script is considered a configuration file and must be updated manually.
	# It will be left untouched if you upgrade ranger.
	
	# Meanings of exit codes:
	# code | meaning    | action of ranger
	# -----+------------+-------------------------------------------
	# 0    | success    | Display stdout as preview
	# 1    | no preview | Display no preview at all
	# 2    | plain text | Display the plain content of the file
	# 3    | fix width  | Don't reload when width changes
	# 4    | fix height | Don't reload when height changes
	# 5    | fix both   | Don't ever reload
	# 6    | image      | Display the image `$IMAGE_CACHE_PATH` points to as an image preview
	# 7    | image      | Display the file directly as an image
	
	# Script arguments
	FILE_PATH="${1}"         # Full path of the highlighted file
	PV_WIDTH="${2}"          # Width of the preview pane (number of fitting characters)
	PV_HEIGHT="${3}"         # Height of the preview pane (number of fitting characters)
	IMAGE_CACHE_PATH="${4}"  # Full path that should be used to cache image preview
	PV_IMAGE_ENABLED="${5}"  # 'True' if image previews are enabled, 'False' otherwise.
	
	FILE_EXTENSION="${FILE_PATH##*.}"
	FILE_EXTENSION_LOWER=$(echo ${FILE_EXTENSION} | tr '[:upper:]' '[:lower:]')
	
	# Settings
	HIGHLIGHT_SIZE_MAX=262143  # 256KiB
	HIGHLIGHT_TABWIDTH=8
	HIGHLIGHT_STYLE='pablo'
	PYGMENTIZE_STYLE='autumn'
	
	
	handle_extension() {
	    case "${FILE_EXTENSION_LOWER}" in
	        # Archive
	         a|ace|alz|arc|arj|bz|bz2|cab|cpio|deb|gz|jar|lha|lz|lzh|lzma|lzo|\
	         rpm|rz|t7z|tar|tbz|tbz2|tgz|tlz|txz|tZ|tzo|war|xpi|xz|Z|zip)
	             atool --list -- "${FILE_PATH}" && exit 5
	             bsdtar --list --file "${FILE_PATH}" && exit 5
	             exit 1;;
	         rar)
	             # Avoid password prompt by providing empty password
	             unrar lt -p- -- "${FILE_PATH}" && exit 5
	             exit 1;;
	         7z)
	             # Avoid password prompt by providing empty password
	             7z l -p -- "${FILE_PATH}" && exit 5
	             exit 1;;
	
	         # PDF
	         pdf)
	             # Preview as text conversion
	             pdftotext -l 10 -nopgbrk -q -- "${FILE_PATH}" - | fmt -w ${PV_WIDTH} && exit 5
	             mutool draw -F txt -i -- "${FILE_PATH}" 1-10 | fmt -w ${PV_WIDTH} && exit 5
	             exiftool "${FILE_PATH}" && exit 5
	             exit 1;;
	         
	         # BitTorrent
	         torrent)
	             transmission-show -- "${FILE_PATH}" && exit 5
	             exit 1;;
	         
	         # OpenDocument
	         odt|ods|odp|sxw)
	             # Preview as text conversion
	             odt2txt "${FILE_PATH}" && exit 5
	             exit 1;;
	         
	         # HTML
	         htm|html|xhtml)
	             # Preview as text conversion
	             w3m -dump "${FILE_PATH}" && exit 5
	             lynx -dump -- "${FILE_PATH}" && exit 5
	             elinks -dump "${FILE_PATH}" && exit 5
	             ;; # Continue with next handler on failure
	    esac
	}
	
	handle_image() {
	    local mimetype="${1}"
	    case "${mimetype}" in
	        # SVG
	         image/svg+xml)
	              convert "${FILE_PATH}" "${IMAGE_CACHE_PATH}" && exit 6
	              exit 1;;
	         
	         # Image
	         image/*)
	             local orientation
	             orientation="$( identify -format '%[EXIF:Orientation]\n' -- "${FILE_PATH}" )"
	             # If orientation data is present and the image actually
	             # needs rotating ("1" means no rotation)...
	             if [[ -n "$orientation" && "$orientation" != 1 ]]; then
	                 # ...auto-rotate the image according to the EXIF data.
	                 convert -- "${FILE_PATH}" -auto-orient "${IMAGE_CACHE_PATH}" && exit 6
	             fi
	         
	             # `w3mimgdisplay` will be called for all images (unless overriden as above),
	             # but might fail for unsupported types.
	             exit 7;;
	
	        # Video
	        # video/*)
	        #     # Thumbnail
	        #     ffmpegthumbnailer -i "${FILE_PATH}" -o "${IMAGE_CACHE_PATH}" -s 0 && exit 6
	        #     exit 1;;
	        # PDF
	        # application/pdf)
	        #     pdftoppm -f 1 -l 1 \
	        #              -scale-to-x 1920 \
	        #              -scale-to-y -1 \
	        #              -singlefile \
	        #              -jpeg -tiffcompression jpeg \
	        #              -- "${FILE_PATH}" "${IMAGE_CACHE_PATH%.*}" \
	        #         && exit 6 || exit 1;;
	
	        ## Preview archives using the first image inside.
	        ## (Very useful for comic book collections for example.)
	        # application/zip|application/x-rar|application/x-7z-compressed|\
	        #     application/x-xz|application/x-bzip2|application/x-gzip|application/x-tar)
	        #     local fn=""; local fe=""
	        #     local zip=""; local rar=""; local tar=""; local bsd=""
	        #     case "${mimetype}" in
	        #         application/zip) zip=1 ;;
	        #         application/x-rar) rar=1 ;;
	        #         application/x-7z-compressed) ;;
	        #         *) tar=1 ;;
	        #     esac
	        #     { [ "$tar" ] && fn=$(tar --list --file "${FILE_PATH}"); } || \
	        #     { fn=$(bsdtar --list --file "${FILE_PATH}") && bsd=1 && tar=""; } || \
	        #     { [ "$rar" ] && fn=$(unrar lb -p- -- "${FILE_PATH}"); } || \
	        #     { [ "$zip" ] && fn=$(zipinfo -1 -- "${FILE_PATH}"); } || return
	        #
	        #     fn=$(echo "$fn" | python -c "import sys; import mimetypes as m; \
	        #             [ print(l, end='') for l in sys.stdin if \
	        #               (m.guess_type(l[:-1])[0] or '').startswith('image/') ]" |\
	        #         sort -V | head -n 1)
	        #     [ "$fn" = "" ] && return
	        #     [ "$bsd" ] && fn=$(printf '%b' "$fn")
	        #
	        #     [ "$tar" ] && tar --extract --to-stdout \
	        #         --file "${FILE_PATH}" -- "$fn" > "${IMAGE_CACHE_PATH}" && exit 6
	        #     fe=$(echo -n "$fn" | sed 's/[][*?\]/\\\0/g')
	        #     [ "$bsd" ] && bsdtar --extract --to-stdout \
	        #         --file "${FILE_PATH}" -- "$fe" > "${IMAGE_CACHE_PATH}" && exit 6
	        #     [ "$bsd" ] || [ "$tar" ] && rm -- "${IMAGE_CACHE_PATH}"
	        #     [ "$rar" ] && unrar p -p- -inul -- "${FILE_PATH}" "$fn" > \
	        #         "${IMAGE_CACHE_PATH}" && exit 6
	        #     [ "$zip" ] && unzip -pP "" -- "${FILE_PATH}" "$fe" > \
	        #         "${IMAGE_CACHE_PATH}" && exit 6
	        #     [ "$rar" ] || [ "$zip" ] && rm -- "${IMAGE_CACHE_PATH}"
	        #     ;;
	    esac
	}
	
	handle_mime() {
	    local mimetype="${1}"
	    case "${mimetype}" in
	        # Text
	        text/* | */xml)
	            # Syntax highlight
	            if [[ "$( stat --printf='%s' -- "${FILE_PATH}" )" -gt "${HIGHLIGHT_SIZE_MAX}" ]]; then
	                exit 2
	            fi
	            if [[ "$( tput colors )" -ge 256 ]]; then
	                local pygmentize_format='terminal256'
	                local highlight_format='xterm256'
	            else
	                local pygmentize_format='terminal'
	                local highlight_format='ansi'
	            fi
	            highlight --replace-tabs="${HIGHLIGHT_TABWIDTH}" --out-format="${highlight_format}" \
	                --style="${HIGHLIGHT_STYLE}" --force -- "${FILE_PATH}" && exit 5
	            # pygmentize -f "${pygmentize_format}" -O "style=${PYGMENTIZE_STYLE}" -- "${FILE_PATH}" && exit 5
	            exit 2;;
	
	        # Image
	        image/*)
	            # Preview as text conversion
	            img2txt --gamma=0.6 --width="${PV_WIDTH}" -- "${FILE_PATH}" && exit 4
	            exiftool "${FILE_PATH}" && exit 5
	            exit 1;;
	
	        # Video and audio
	        video/* | audio/*)
	            mediainfo "${FILE_PATH}" && exit 5
	            exiftool "${FILE_PATH}" && exit 5
	            exit 1;;
	    esac
	}
	
	handle_fallback() {
	    echo '----- File Type Classification -----' && file --dereference --brief -- "${FILE_PATH}" && exit 5
	    exit 1
	}
	
	
	MIMETYPE="$( file --dereference --brief --mime-type -- "${FILE_PATH}" )"
	if [[ "${PV_IMAGE_ENABLED}" == 'True' ]]; then
	    handle_image "${MIMETYPE}"
	fi
	handle_extension
	handle_mime "${MIMETYPE}"
	handle_fallback
	
	exit 1
cd05106b2f913677f06adad7496c6336|file:///usr/ring/.config/ranger/backup/scope.sh|266|1|V|sh
	    handle_image "${MIMETYPE}"
5b12e4d4590710a5f25474d2dbb2af6a|file:///usr/ring/.config/ranger/backup/scope.sh|102|9|^v|sh
	#
	#
	#
	#
	 
	#
	#
	#
	#
	#
a1798d386181e1ae40a222ae82cbaf13|file:///usr/ring/.config/ranger/backup/scope.sh|98|1|V|sh
	    local DEFAULT_SIZE="1920x1080"
9e523ae15b61dc766f5c818726881ecf|file:///usr/ring/.config/ranger/backup/scope.sh|99|25|v|sh
	1920x1080
58a1b65fd75c00afbf23723c830f7e20|file:///usr/ring/var/dwm/config.h|51|1|V|cpp
		{ "Transmission",       NULL,       NULL,       4 << 9,       1,           -1 },
eb2d9ac048f63b514bd26677c6142d1f|file:///usr/ring/var/dwm/config.h|52|5|v|cpp
	Transmission
0e24e7b7280fcbde75e39bc9f43b9811|file:///usr/ring/scripts/wp-change.sh|2|69|v|sh
	iews
ff818309626116f3829ded3114788404|file:///usr/ring/.config/ranger/rc.conf|29|11|v|conf
	fzf_select
044bd9554a698998f179c68a9c18d3b1|file:///usr/ring/.config/ranger/rc.conf|31|1|V|conf
	map cw eval fm.execute_console("bulkrename") if fm.thisdir.marked_items else fm.open_console("rename ")
2b6cc82022f0b2a9fb93290085db2f8f|file:///usr/ring/.config/ranger/rc.conf|32|5|v|conf
	cw eval fm.execute_console("bulkrename") if fm.thisdir.marked_items else fm.open_console("rename ")
ec506e0df7f5266afbce96125af750c4|file:///usr/ring/.config/ranger/rc.conf|32|1|V|conf
	map yp yank dir
747959c162ab32b134a02c3ae868bfce|file:///usr/ring/.config/ranger/rc.conf|32|6|V|conf
	map yp yank dir
	map yp yank dir
936db27a24b3052adaf60fc67288eb7b|file:///usr/ring/.config/ranger/scope.sh|128|9|^v|sh
	 
	 
	 
	 
	 
e9e6080c9c59a029796309ce261ee2b8|file:///usr/ring/.config/ranger/rc.conf|7|27|v|conf
	ueberzug
3067c6bb4c7dd79bf483b7de2d490ea2|file:///usr/ring/.config/ranger/scope.sh|103|9|^v|sh
	# 
	# 
	# 
	  
	# 
	# 
	# 
	# 
	# 
d169668abdd73ae15a3075d600075a14|file:///usr/ring/scripts/autostart_wait.sh|5|1|V|sh
	emoji-keyboard &
b4f652b1caef4d4da53a164b76b3e471|file:///usr/ring/scripts/autostart_wait.sh|4|1|V|sh
	fcitx &
db3e55f787c25c4e0cb93c0f12011746|file:///usr/ring/scripts/autostart_wait.sh|5|1|v|sh
	fcitx
398c948a424aade25c2b7fae499afb7c|file:///usr/ring/Pictures/wallpapers/wallpapers/README.md|1|1|V|markdown
	# Luke's Wallpapers
af945f66384df057792702c386e012ae|file:///usr/ring/Pictures/wallpapers/wallpapers/README.md|1|1|V|markdown
	One of the more common requests I get is to share one of the images I have as a wallpaper or decoration in a video, so here's my entire wallpaper folder.
c374d4a76c8e8bcb3659ea677eafb343|file:///tmp/zshOys0lp|1|1|V|zsh
	pip list | awk '{print $1}'
4d9b668ac00360447b20aa0eaa7cb366|file:///tmp/zshJyP2Aq|1|1|V|zsh
	pip list | awk '$1>2 {print $1}'
5e096226631f4d979af8ab0283144791|file:///usr/ring/.vimrc|297|1|V|vim
	Plug 'numirias/semshi', { 'do': ':UpdateRemotePlugins', 'for' :['python', 'vim-plug'] }
decc35f9461793ac6ffed4253a82e972|file:///usr/ring/var/dwm/config.h|52|1|V|cpp
		{ "uget",                NULL,       NULL,       9,            1,           -1 },
1af561a1ca8cf0d161ef5492bd184597|file:///usr/ring/var/dwm/config.h|53|5|v|cpp
	uget
a127fd1f86e4ab650f2216f09992afa4|file:///usr/ring/var/dwm/config.h|53|27|v|cpp
	      
2e221f47d6e76beeec058faee5c8e640|file:///usr/ring/var/shadowsocksr/config.json|4|20|v|json
	60277
bf0b00016b27e3dcab6ee5ebab3878dc|file:///usr/ring/.config/ranger/commands.py|12|39|V|python
	from ranger.api.commands import Command
	import os
43cd7317f7cd6ff78caacc0e7360aeea|file:///usr/ring/var/dwm/config.h|54|1|V|cpp
		{ "goldendick",          NULL,       NULL,       9,            1,           -1 },
46c1d1ad9809f8086ac19e3eb1401aa1|file:///usr/ring/var/dwm/config.h|45|54|^v|cpp
	9
	9
	9
	9
925c9ef67d2332758718f6f9d510bb31|file:///usr/ring/var/dwm/config.h|44|51|v|cpp
	1<<8
5a5dc9f9a0aeaa8bdfb7d006b757ce4c|file:///usr/ring/var/dwm/config.h|49|51|^v|cpp
	9
	9
	9
	9
	9
	9
	9
66c74e10404319091a78ea5601b499cc|file:///usr/ring/var/dwm/config.h|54|2|V|cpp
		{ "goldendick",          NULL,       NULL,       4<<8,            1,           -1 },
da65b38d1760699f87d9168846442fe9|file:///usr/ring/var/dwm/config.h|50|2|V|cpp
		//{ "transmission-gtk",    NULL,       NULL,       4<<8,            1,           -1 },
5c9e13f28cac7f7a2b3cea544fbae7b0|file:///usr/ring/var/st/config.h|12|1|V|cpp
		"Source Code Pro for Powerline:pixelsize=30:antialias=true",
96a46ebb1fbe0a29bccf0e082e4c030a|file:///usr/ring/var/st/config.h|10|1|v|cpp
	DejaVu Sans Mono Nerd Font:pixelsize=30:antialias=true:autohint=true";
	
7223dc71ee256a828ad4d9fb1ca2af34|file:///usr/ring/var/st/config.h|13|3|v|cpp
	Source Code Pro for Powerline
6f6017f057443a5bac81a0961a03ac10|file:///usr/ring/.config/ranger/rifle.conf|131|1|V|cfg
	mime ^video|audio, has vlc,      X, flag f = vlc -- "$@"
186e99d0efb9251346e667e30ede305f|file:///usr/ring/var/dwm/config.h|93|1|V|cpp
	static const char *lockon[]  = { "xscreensaver-command --lock", NULL };
e55956712ba10f451fdfb3d431f4452c|file:///usr/ring/var/dwm/config.h|93|56|v|cpp
	tr-toggle
9b8eb14f9a783ce0eca2d288ae68b776|file:///usr/ring/var/dwm/config.h|117|1|V|cpp
		{ 0,                            LOCK,      spawn,          {.v = lockon       } },
8c41c303ef604d679df9b9db527e16fb|file:///usr/ring/var/dwm/config.h|112|34|v|cpp
	     LOCK
2684bc40376b6d945e886b93762e9f0d|file:///usr/ring/var/dwm/config.h|112|67|v|cpp
	lockon
f23cdf83fb9094495321a76cb4f7e993|file:///usr/ring/var/dwm/config.h|112|67|v|cpp
	wpcmd
3abdc71a0387bc08498ddab7d3538ea0|file:///usr/ring/var/st/config.h|13|3|v|cpp
	Source Code Pro Semibold
5900a15502ca2c4fe82a30764762b2ca|file:///usr/ring/var/st/config.h|9|22|v|cpp
	DejaVu Sans Mono Nerd Font
faa0e92b66ee8900e712a9a87fc2d434|file:///usr/ring/var/st/config.h|12|21|v|cpp
	for Powerline
625c6f83191b5abca037dc56a1f6e8ea|file:///usr/ring/var/st/config.h|9|38|v|cpp
	Semibold
85f86ef978c89763e4994df442285c23|file:///usr/ring/var/st/config.h|15|8|v|cpp
	DejaVuSansMono Nerd Font
9a0ff8053f7c678fe91e8645494a0499|file:///usr/ring/var/st/config.h|9|22|v|cpp
	Apple Fonts
acc9437c85a3f74da968acc520b66736|file:///usr/ring/var/st/config.h|9|22|v|cpp
	Source Code Pro
1309c0f81550fc8faab19374856046af|file:///usr/ring/var/st/config.h|12|2|^v|cpp
	//
	//
	//
	//
	//
	//
	//
87e3ddcf374875c0a93177573a7753c3|file:///usr/ring/var/st/config.h|17|2|V|cpp
		"EmojiOne:pixelsize=30:antialias=true",
4fcdaa83eedc53607fdae8708da8b4fa|file:///usr/ring/var/st/config.h|12|2|V|cpp
		"JoyPixels:pixelsize=30:antialias=true",
c4af35503fb95822f638bac9d1eacc3a|file:///usr/ring/var/st/config.h|14|4|V|cpp
	    "AppleColorEmoji:pixelsize=30:antialias=true",
fdf25d3d06bf8f3aa10e6d6690bcbf51|file:///usr/ring/var/st/config.h|17|2|V|cpp
		//".Apple Color Emoji UI:pixelsize=30:antialias=true",
69c337f8182efde3a7391253191931c7|file:///usr/ring/var/st/config.h|17|2|V|cpp
		".Apple Color Emoji UI:pixelsize=30:antialias=true",
5fee9ae66afb81e09ce486e32a0db2b1|file:///usr/ring/var/st/config.h|12|20|v|cpp
	:pixelsize=30:antialias=true
35975005e43fa267dac5fe6142f0261c|file:///usr/ring/var/st/config.h|12|2|^v|cpp
	//
	//
	//
	//
	//
	//
8592aa50054e6edd6d34d6ec46f883e5|file:///usr/ring/var/st/config.h|14|2|V|cpp
		"Source Code Pro for Powerline:pixelsize=30:antialias=true",
		"Source Code Pro Semibold:pixelsize=30:antialias=true",
9a36bbcfd194abb0e273ce1e542aa227|file:///usr/ring/var/st/config.h|14|3|V|cpp
		"Apple Color Emoji:pixelsize=30:antialias=true",
		".Apple Color Emoji UI:pixelsize=30:antialias=true",
84007254535344342e9e48fd9904535f|file:///usr/ring/var/st/config.h|14|5|V|cpp
	    "DejaVuSansMono Nerd Font Mono:pixelsize=30:antialias=true:autohint=true",
54088029df00ae6622629acb33f46fac|file:///usr/ring/.oh-my-zsh/themes/robbyrussell.zsh-theme|1|18|v|
	_bold
f97ad8ee52c2710838243fdd089a47ea|file:///usr/ring/.vimrc|301|1|V|vim
	let g:python_highlight_all = 1
	Plug 'sheerun/vim-polyglot'
88225ccd956832b34c45a086b483e645|file:///usr/ring/.vimrc|297|14|v|vim
	vim-python-pep8-indent
2f771e621df364d6a5dac00b75a17a72|file:///usr/ring/.vimrc|299|7|v|vim
	tweekmonster/braceless
cc82cccd7706288cb8bd8ad3dfef69d5|file:///usr/ring/.config/electron-ssr/logs/shadowsocksr-client.log|541|122|v|
	Creation of this event was denied due to rate limiting
	
cf291fd15bbaf1f59e61451bd9232a12|file:///usr/ring/scripts/autostart.sh|10|1|V|sh
	#/bin/bash ~/scripts/setxmodmap-colemak.sh &
213761cd98b1e3bea7c059563fc36dfb|file:///usr/ring/scripts/autostart.sh|12|1|v|sh
	xfce4-volumed-pulse
8a5747fa3dd46a30e02d3f58e055be01|file:///usr/ring/scripts/autostart.sh|12|1|V|sh
	xfce4-volumed-pulse &
9cf42e4be711f81c4970f4b2e3e6b905|file:///usr/ring/scripts/dwmbar-functions/dwm_alsa.sh|10|11|v|sh
	amixer -c 1 get Master | tail -n1 | sed -r "s/.*\[(.*)%\].*/\1/"
8549f19f34b13b1115c2781e2849267e|file:///usr/ring/scripts/dwmbar-functions/dwm_alsa.sh|10|1|V|sh
	    VOL=$(amixer -c 1 get Master | tail -n1 | sed -r "s/.*\[(.*)%\].*/\1/")
33326a15feff9607cb026384cd7b8eb9|file:///tmp/zshlNykFp|1|47|v|zsh
	.*\[(.*)%\]
0e9f4324484bf586f5c2153ce5668102|file:///tmp/zshIcvC8n|1|49|v|zsh
	\[(.*)%\]
74569bde0440c71aa99307929a30edae|file:///tmp/zshuMSoEp|1|1|V|zsh
	amixer -c 1 get Master | tail -n1 | sed -r "s/.*\[(.*)%\].*\[(.*)\].*\[(.*)\].*/\3/"
0c6c63680fbf3c0b9b72ee1ddd8b164b|file:///usr/ring/scripts/dwmbar-functions/dwm_vpn.sh|10|11|v|sh
	nmcli -a
6689e717d62bafcea5d70a8211be183e|file:///usr/ring/scripts/autostart.sh|11|1|V|sh
	NetworkManager &
c8067d06c376085f0339441b196abb47|file:///tmp/zshJuhxDp|1|20|v|zsh
	MSFT0001:00 06CB:CD3E Touchpad
0f9c27a5556e37c84b850e0f274f0647|file:///usr/ring/.vimrc|318|1|V|vim
	imap <c-space> <Nop>
393b32756c31eb0996f4731cb5b43f60|file:///usr/ring/.xprofile|4|1|V|
	fcitx -d -r --enable sogou-qimpanel
6103f56239c5e49e5e413ad2c95065b2|file:///usr/ring/var/dwm/config.h|54|1|V|cpp
		{ "GoldenDict",          NULL,       NULL,       4<<8,            1,           -1 },
01fed6cb3a21f0bff39ee44f23fe9711|file:///usr/ring/var/dwm/config.h|55|5|v|cpp
	GoldenDict
e4e5d5b075f4b4ffe06b928ae4737a6c|file:///usr/ring/var/dwm/config.h|55|1|V|cpp
		{ "Steam",          NULL,       NULL,       4<<8,            1,           -1 },
4db4563826bad0eb2f60ee6e42d0ea4b|file:///usr/ring/var/dwm/config.h|56|5|v|cpp
	Steam
9c7537132dde714eeffc9a81c7eb2016|file:///usr/ring/var/dwm/config.h|52|1|V|cpp
		{ "uget-gtk",                NULL,       NULL,       4<<8,            1,           -1 },
3ab7b0fcca22ef12f178d236a0f79efd|file:///usr/ring/var/st/config.h|12|3|v|cpp
	Source Code Pro for Powerline:pixelsize=30:antialias=true
90645c0c43d592fc9e54de297217a4e3|file:///usr/ring/var/st/config.h|9|22|v|cpp
	DejaVu Sans Mono Nerd Font:pixelsize=30:antialias=true:autohint=true
f5ea9b5e47ef26c39e61fa28fdc36a68|file:///usr/ring/var/st/config.h|9|21|v|cpp
	"DejaVu Sans Mono Nerd Font:pixelsize=30:antialias=true:autohint=true"
6dc220855725bc096ee5271688502b78|file:///usr/ring/var/st/config.h|13|2|V|cpp
		"Source Code Pro Semibold:pixelsize=30:antialias=true",
ab207d68bceeb59bb7344dfc5a2c45eb|file:///usr/ring/var/st/config.h|9|22|v|cpp
	DejaVu Sans Mono Nerd Font:style=bold
d6bbb9b84cd4a2b7d448ca836a6a8346|file:///usr/ring/var/st/config.h|12|1|V|cpp
		"Source Han Sans CN:pixelsize=30:antialias=true",
7394ef2df2e37e2bce45e8e9649f1810|file:///usr/ring/.config/ranger/rifle.conf|57|1|V|cfg
	ext html = nvim "$@"
372f78712d58955ce3cd59d5a26b922c|file:///usr/ring/.config/ranger/rifle.conf|145|1|V|cfg
	ext pdf, has llpp,     X, flag f = llpp "$@"
3f420f985f692a9810002bb08904c0be|file:///usr/ring/.config/ranger/rifle.conf|145|14|v|cfg
	llpp
5ae937b9c92bfd3c4a0aa597bb08ee7c|file:///usr/ring/.config/ranger/rifle.conf|159|1|V|cfg
	ext docx?, has catdoc,       terminal = catdoc -- "$@" | "$PAGER"
bb262978b18b42876c68d8f0bd7ee1f3|file:///usr/ring/.config/ranger/rifle.conf|159|16|v|cfg
	catdoc
ce4bbd48186d0f74541feb629915f576|file:///usr/ring/.config/ranger/rifle.conf|157|1|V|cfg
	ext pdf, has open,     X, flag f = open "$@"
c2f2fdcdcca4eaec0bb51f7f3f15fe43|file:///usr/ring/.config/ranger/rifle.conf|160|1|V|cfg
	ext docx?, has wps,       terminal = catdoc -- "$@" | "$PAGER"
7cef8a734855777c2a9d0caf42666e69|file:///usr/ring/.config/ranger/rifle.conf|159|15|v|cfg
	open
326dc23c97532827f12e426e72d90450|file:///usr/ring/.config/ranger/rifle.conf|162|1|V|cfg
	ext docx, has wps,     X, flag f = wps "$@"
0bbe36a9d5e37a03354db0aa6a94dd29|file:///usr/ring/.config/ranger/rifle.conf|163|5|v|cfg
	docx
9335d5fdb1b8edae3f8055d6217e2c11|file:///usr/ring/.config/ranger/rifle.conf|145|1|V|cfg
	ext pdf, has wpspdf,   X, flag f = wpspdf "$@"
50ec25fb7644eb73d0419bcdba4b773a|file:///usr/ring/var/dwm/config.h|138|1|V|cpp
		{ MODKEY|ShiftMask,             XK_f,      fullscreen,     {0} },
83c0d14fed7a5a4149b17b107d2d6aac|file:///usr/ring/var/dwm/config.h|140|47|v|cpp
	setlayout
74ba0736dad9b7236e2c7db4f4f4b874|file:///usr/ring/var/dwm/config.h|139|45|v|cpp
	fullscreen
ae282452d0c2c9af9f98202daa306c37|file:///usr/ring/var/dwm/config.h|140|52|v|cpp
	yout
f9b69428a4e65636b8cbba3ccc54e812|file:///usr/ring/var/dwm/config.h|139|45|v|cpp
	fullscreen,
f4eb93db0a88da4dd2824b5475403619|file:///usr/ring/.config/electron-ssr/gui-config.json|223|15|v|json
	hk2-s
f528764d624db129b32c21fbca0cb8d6|file:///usr/ring/.config/electron-ssr/shadowsocksr/config.json|5|23|v|json
	127.0.0.1
ccea4b3f3fd961ead108a12a44ee1740|file:///usr/ring/.config/electron-ssr/gui-config.json|218|17|v|json
	PO3DfT
c427376d1106ce9d4a1fcac8e73e23e5|file:///usr/ring/.config/electron-ssr/shadowsocksr/config.json|8|5|V|json
	    "password": "m",
a7cab7f8ffd57c3313af59a4fe6010f4|file:///usr/ring/.config/electron-ssr/gui-config.json|219|17|v|json
	auth_aes128_md5
2d9a66e8cd03ca20cad71cf63600d7dd|file:///usr/ring/.config/electron-ssr/gui-config.json|216|13|v|json
	http_simple
683ca3c4043fb12d3bb49c2470a087ea|file:///usr/ring/.config/electron-ssr/gui-config.json|217|18|v|json
	download.windowsupdate.com
5b99d52d00bd689170b1e961afaa0571|file:///usr/ring/.oh-my-zsh/themes/robbyrussell.zsh-theme|1|1|V|
	PROMPT="%(?:%{$fg_bold[green]%}➜:%{$fg_bold[red]%}➜)"
	PROMPT+=' %{$fg[green]%}%c%{$reset_color%} $(git_prompt_info)'
	
	ZSH_THEME_GIT_PROMPT_PREFIX="%{$fg_bold[blue]%}git:(%{$fg[red]%}"
	ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%} "
	ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg[blue]%}) %{$fg[yellow]%}✗"
	ZSH_THEME_GIT_PROMPT_CLEAN="%{$fg[blue]%})"
d47f643cfabe4673e8531c027dad9414|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|1|32|v|
	➜:%{$
8df1907c91b4edec541be0afaca58a43|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|1|1|V|
	PROMPT="%(?:%{$fg_bold[green]%}➜:%{$fg_bold[red]%}➜)"
16104d2c92a525594898f94b2d043086|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|2|9|v|
	%(?:%{$fg_bold[green]%}➜:%{$fg_bold[red]%}➜)
86cda5c224bb6a82e16b69be14007cbb|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|2|32|v|
	[\u@%c]
bf3abf99f10549f52ceefb8795017bb7|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|2|1|V|
	PROMPT="%(?:%{$fg_bold[green]%}[\u@%c]:%{$fg_bold[red]%}[\u@%c])"
	PROMPT+=' %{$fg[green]%}%c%{$reset_color%} $(git_prompt_info)'
db11a5a88532a9124e0f59ce545c62f4|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|3|1|V|
	PROMPT+=' %{$fg[green]%}%c%{$reset_color%} $(git_prompt_info)'
c1616f3c8962623e339417e6c16a5fb9|file:///usr/ring/.zshrc|112|12|v|zsh
	robbyrussell
9ceb99487808b71dc0aa41e6200892be|file:///usr/ring/.zshrc|112|1|V|zsh
	ZSH_THEME="robbyrussell"
19bc94493f0287f61894b786fb73e78a|file:///usr/ring/.zshrc|102|1|V|zsh
	# If you come from bash you might have to change your $PATH.
	# export PATH=$HOME/bin:/usr/local/bin:$PATH
	
	# Path to your oh-my-zsh installation.
14a2b67fc16e414a724817f67d0468ab|file:///usr/ring/.zshrc|104|1|V|zsh
	# Set name of the theme to load --- if set to "random", it will
	# load a random theme each time oh-my-zsh is loaded, in which case,
	# to know which specific one was loaded, run: echo $RANDOM_THEME
	# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
	#ZSH_THEME="robbyrussell"
106fc2669bcbc0f5eced5f3db07f4dbc|file:///usr/ring/.zshrc|106|1|V|zsh
	# Set list of themes to pick from when loading at random
	# Setting this variable when ZSH_THEME=random will cause zsh to load
	# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
	# If set to an empty array, this variable will have no effect.
	# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )
	
	# Uncomment the following line to use case-sensitive completion.
	# CASE_SENSITIVE="true"
	
	# Uncomment the following line to use hyphen-insensitive completion.
	# Case-sensitive completion must be off. _ and - will be interchangeable.
	# HYPHEN_INSENSITIVE="true"
	
	# Uncomment the following line to disable bi-weekly auto-update checks.
	# DISABLE_AUTO_UPDATE="true"
	
	# Uncomment the following line to automatically update without prompting.
	# DISABLE_UPDATE_PROMPT="true"
	
	# Uncomment the following line to change how often to auto-update (in days).
	# export UPDATE_ZSH_DAYS=13
	
	# Uncomment the following line if pasting URLs and other text is messed up.
	# DISABLE_MAGIC_FUNCTIONS=true
	
	# Uncomment the following line to disable colors in ls.
	# DISABLE_LS_COLORS="true"
	
	# Uncomment the following line to disable auto-setting terminal title.
	# DISABLE_AUTO_TITLE="true"
	
	# Uncomment the following line to enable command auto-correction.
	# ENABLE_CORRECTION="true"
	
	# Uncomment the following line to display red dots whilst waiting for completion.
	# COMPLETION_WAITING_DOTS="true"
	
	# Uncomment the following line if you want to disable marking untracked files
	# under VCS as dirty. This makes repository status check for large repositories
	# much, much faster.
	# DISABLE_UNTRACKED_FILES_DIRTY="true"
	
	# Uncomment the following line if you want to change the command execution time
	# stamp shown in the history command output.
	# You can set one of the optional three formats:
	# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
	# or set a custom format using the strftime function format specifications,
	# see 'man strftime' for details.
	# HIST_STAMPS="mm/dd/yyyy"
	
	# Would you like to use another custom folder than $ZSH/custom?
	# ZSH_CUSTOM=/path/to/new-custom-folder
	
	# Which plugins would you like to load?
	# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
	# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
	# Example format: plugins=(rails git textmate ruby lighthouse)
	# Add wisely, as too many plugins slow down shell startup.
00544625bc79301ba34ea81736964134|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|3|11|v|
	%{$fg[green]%}%c
9f27410725ab8cc8854a2769c7a516b8|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|2|24|v|
	green
935034ce8fb2fd83d5d2749535f97f1c|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|6|1|V|
	
	————————————————
	
	版权声明：本文为CSDN博主「Andyjicw」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上
4a57638aedab705796e0158bcde01c76|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|4|1|V|
	PROMPT='%{$fg[green]%}%m@%{$fg[magenta]%}%(?..%?%1v)%n:%{$reset_color%}%{$fg[cyan]%}%~#'green
3d6a07507800538890c84fcf645c86b9|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|6|1|V|
	
	————————————————
	
	版权声明：本文为CSDN博主「Andyjicw」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
	
	原文链接：https://blog.csdn.net/jichunw/article/details/80088995
c6c0578010232c90dcc29168e9220d8d|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|4|1|V|
	PROMPT='%{$fg_bold[red]%}-> %{$fg_bold[green]%}%p%{$fg[cyan]%}%d %{$fg_bold[blue]%}$(git_prompt_info)%{$fg_bold[blue]%}% %{$reset_color%}~#:'
855caea067b9d87064f917a70a6d848a|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|6|1|V|
	
	PROMPT='%{$fg_bold[red]%}-> %{$fg_bold[green]%}%p%{$fg[cyan]%}%d %{$fg_bold[blue]%}$(git_prompt_info)%{$fg_bold[blue]%}% %{$fg[magenta]%}%(?..%?%1v)%{$reset_color%}~#: '    
46e870250d90ae5edf6b40ecd68b273b|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|4|29|v|
	%{$fg_bold[magenta]%}%n%{$fg_bold[cyan]%}@%{$fg[green]%}%m
9f1e76abcfd26867f4d14acfcb9387c6|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|1|71|v|
	%{$fg_bold[green]%}[%n@%c]
a3083dc8068f9d5f532a79c52034b253|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|1|1|V|
	PROMPT="%(?:%{$fg_bold[magenta]%}[%n%{$fg_bold[cyan]%}@%{$fg[green]%}%c]:%{$fg_bold[red]%}[%n@%c])"
	PROMPT+='%{$reset_color%} $(git_prompt_info)'
600821fbf505f7da50f9fe1a2e689d57|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|4|9|v|
	%{$fg_bold[red]%}
4c2a4a7078da0ac6733464eacfd00f86|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|1|42|v|
	magenta
91bfaf2acf1bd80e1ef4303cbdc5e59f|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|1|1|V|
	PROMPT="%(?:%{$fg_bold[red]%}[%{$fg_bold[magenta]%}%n%{$fg_bold[cyan]%}@%{$fg[green]%}%c]:%{$fg_bold[red]%}[%n@%c])"
0da8230064e52187137103f94949fd73|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|7|1|V|
	PROMPT="%(?:%{$fg_bold[magenta]%}[%n%{$fg_bold[cyan]%}@%{$fg[green]%}%c]:%{$fg_bold[red]%}[%n@%c])"
d487dd0b55dfcacdd920ccbdaeafa351|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|6|42|v|
	yellow
96ac1b5511df3c9570ac25695edc8578|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|6|73|v|
	%{$fg[cyan]%}
fe01d67a002dfa0f3ac084298142eccd|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|6|42|v|
	orange
48d6215903dff56238e52e8891380c8f|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|6|95|v|
	blue
0e2777f01e510c62275decd45c953b10|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|4|48|V|
	PROMPT='%{$fg_bold[red]%}-> %{$fg_bold[magenta]%}%n%{$fg_bold[cyan]%}@%{$fg[green]%}%m %{$fg_bold[green]%}%p%{$fg[cyan]%}%~ %{$fg_bold[blue]%}$(git_prompt_info)%{$fg_bold[blue]%}% %{$fg[magenta]%}%(?..%?%1v)%{$fg_bold[blue]%}? %{$fg[yellow]%}# '  
	
6bc5ba4c9cbcee1f97021f928db2b46e|file:///usr/ring/.oh-my-zsh/themes/mytheme.zsh-theme|1|1|V|
	PROMPT="%(?:%{$fg_bold[red]%}[%{$fg_bold[magenta]%}%n%{$fg_bold[cyan]%}@%{$fg[green]%}%c]:%{$fg_bold[red]%}[%n@%c])"
	PROMPT+='%{$reset_color%} $(git_prompt_info)'
ae7c4c2f14a5c953431d5fdbfc4b3070|file:///usr/ring/var/ssr/shadowsocksr-3.1.2/config.json|8|18|v|json
	CXH1198039762a
e12e5aead6f3bfccffe09ca84905eab0|file:///usr/ring/var/ssr/shadowsocksr-3.1.2/config.json|5|23|v|json
	47.112.27.55
acf922154627f6788918f03c42b123cd|file:///usr/ring/var/ssr/shadowsocksr-3.1.2/config.json|4|20|v|json
	3633
6822129919aa85a7a5d6b937323e588a|file:///usr/ring/var/ssr/shadowsocksr-3.1.2/config.json|5|23|v|json
	.0.0.0
fcd1b16013caa4309bdd76575628a58e|file:///usr/ring/var/st/config.h.rej|7|1|V|diff
	+	{ TERMMOD,              XK_Return,      newterm,        {.i =  0} },
d6b76f4fecd4ded212b9d011d4686627|file:///usr/ring/var/st/st.h.rej|7|1|V|diff
	+void newterm(const Arg *);
400db74716dad2586390c8dcc3a244cb|file:///usr/ring/var/st/config.h|223|4|v|cpp
	MODKEY|ControlMask
741568c2418765292bbe90a089c8765f|file:///usr/ring/var/st/config.h|220|4|v|cpp
	SUPER|MODKEY
1f27b2704289099fcf27fa097bb64df1|file:///usr/ring/Documents/code/py/spider/Maoyan/test.py|1|1|V|python
	import re
	import requests
	import selenium
	import pyquery
	import pymysql
	import pymongo
	import redis
	import flask
	import django
	import jupyter
dab19e82e1f9a681ee73346d3e7a575e|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|19|21|v|python
	www.baidu.com
ace0a5c596c5d6b62689e3bf4ba6032b|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|19|21|v|python
	https://emojipedia.org/unicode-11.0/
2a3bebb169ea51a84d48ba23c0069413|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|25|13|V|python
	            print
8e67c8378204da5960c77297ad108d0c|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|24|1|V|python
	            f.wite(item[0]+\t+item[1]+\n)
a3166f198847c35da3f19b6c2bf4ff0c|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|25|13|v|python
	f.wite
75055c8dd8a3d5b1dd406642ebcedaef|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|24|1|V|python
	            f.wite(item[0]+'\t'+item[1]+'\n')
ebe70d42dd92f97896ab313defe687a1|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|26|13|V|python
	            print(item[0]+\t+item[1]+\n)
f7531e2d0ea27233ce00b5f01c5bf335|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|30|5|v|python
	print
0ce782a5dacab05c4149e5a3a78925f4|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|31|14|v|python
	hmtl
80342ad079462cdc1a52511ddcf7eff6|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|30|30|v|python
	emojipedia.org/unicode-11.0/
c07aaa3725e11b6d767e1b5f2ba0d96c|file:///usr/ring/Documents/code/py/spider/unicode_emoji/list.txt|28|1|V|text
	💕	Hearts
29dbbdb3f53fbd1f4a0f7b0cf578b0d5|file:///usr/ring/Documents/code/py/spider/unicode_emoji/list.txt|1|1|V|text
	🍂	/fathers-day/
	💪	/graduation/
	🔥	/halloween/
	🕎	/hearts/
	🍂	
	👨	
	💪	
	🎓	
	🔥	
	🎃	
	🕎	
	💕	
	🍂	 Fall / Autumn</a></li>
	<li><a href=
	💪	 Festivus</a></li>
	<li><a href=
	🔥	 Guy Fawkes</a></li>
	<li><a href=
	🕎	 Hanukkah</a></li>
	<li><a href=
	🍂	Fall / Autumn
	👨	Father’s Day
	💪	Festivus
	🎓	Graduation
	🔥	Guy Fawkes
	🎃	Halloween
	🕎	Hanukkah
	💕	Hearts
03c6d02f63054512fa617674d8ed0616|file:///usr/ring/Documents/code/py/spider/duowan/spiderv3%28other%29.py|6|1|V|python
	from multiprocessing import Pool
da5a1816a2ac5932e0f04b1fc58e2cc7|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|52|5|V|python
	    main()
338bb0b43e35b79876d4edcf87886284|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|50|13|v|python
	'<++>',
43a1437f7f656cd8be7c996c58719e0a|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|34|53|v|python
	10.0
75d5222c1c56faa0c21b947d6a65751a|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|33|5|V|python
	    list= [''<++>]<++>
713a00a2111d0ec52707d3ccb09bb47f|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|34|1|V|python
	#    html = '''</a></li>
	#<li><a href="/fall-autumn/"><span class="emoji">🍂</span> Fall / Autumn</a></li>
	#<li><a href="/fathers-day/"><span class="emoji">👨</span> Father’s Day</a></li>
	#<li><a href="/festivus/"><span class="emoji">💪</span> Festivus</a></li>
	#<li><a href="/graduation/"><span class="emoji">🎓</span> Graduation</a></li>
	#<li><a href="/guy-fawkes/"><span class="emoji">🔥</span> Guy Fawkes</a></li>
	#<li><a href="/halloween/"><span class="emoji">🎃</span> Halloween</a></li>
	#<li><a href="/hanukkah/"><span class="emoji">🕎</span> Hanukkah</a></li>
	#<li><a href="/hearts/"><span class="emoji">💕</span> Hearts</a></li>
	#<li><a href="/holi/">'''
040eeb8499b818e50ffb3fb40c2cb478|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|25|1|V|python
	    with open('list.txt', 'a') as f:
	        for item in result:
	            f.write(item[0]+'\t'+item[1]+'\n')
	            print(item[0]+'\t'+item[1]+'\n')
	        f.close()
	
63a0ba6ce76415ce8c65e62310864f25|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|32|1|V|python
	    from multiprocessing import Pool
d04561ad98b365b04043acba32a359a4|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|25|1|V|python
	    with open('list.txt', 'a') as f:
	        for item in result:
	            f.write(item[0]+'\t'+item[1]+'\n')
	            print(item[0]+'\t'+item[1]+'\n')
	        f.close()
10ae9fc7d453b0dd525d0edf2ede7961|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|32|16|v|python
	list
18a5a132015479a38fce1a043b64f4d2|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|33|9|V|python
	        for item in result:
8a20950a0ba77c639ba102798944eff5|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|33|17|v|python
	item[0]+'\t'+item[1]
642b0f09433ff1d4ffd63a2240a6b6e2|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|42|1|V|python
	        print(html) 
d8742358eb4461059eb442843a0f1c42|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|24|1|V|python
	    pattern = re.compile('<li>.*?<span class="emoji">(.*?)</span>\s(.*?)<.*?', re.S)
7f59d3ba70adbfa85918dbe917c5c3d9|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|23|29|v|python
	.*?<span class="emoji">
eac828e40705bfafd82ef1a82e3f5ab8|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|23|36|v|python
	span
554680b9b859e5b8818866bc9bb0fa4e|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|23|39|v|python
	.*?)<
c5e96c29b4387ccaa23a2217a4629946|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|24|5|V|python
	    result = re.match(catch)<++>
87ee0cd6d5160033e8b4fd72aaefc230|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|24|5|v|python
	splice
27a62ae7ebd195827b2ec5d26b838b40|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|46|5|^v|python
	    
	    
d41f2d9592b6d8e1db94d6b41fb79850|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|26|1|V|python
	    print(html)
2886dfbc478fbebc46b79d17764cc7e9|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|24|24|v|python
	'<ul>.*?</ul>'
a8982eb2a988054aa4d8d792dd074cca|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|25|21|v|python
	catch
16fa5489ed9ceaf50bdc4f110b27d005|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|29|15|v|python
	re.findall(pattern, html)
0adf12e56f0efe8317b0995fe8f8ad2a|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|25|12|v|python
	re.match('<ul>.*?</ul>', html)
	
fc35fdc70d5fc69d269883a822c7a53e|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|25|5|v|python
	html
0a33d42852737542bf9c8315a1812561|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|29|1|V|python
	    #result = re.findall(pattern, html)
2d8b354e76006c78bc840f89628f2fd6|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|25|22|v|python
	<ul>(.*?)</ul>
f9dbb7b95897fb0e5939dd80679a0615|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|28|17|v|python
	.group(1)
3b393ba5c62178401d157ecafe0f3e63|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|27|25|v|python
	'<ul>(.*?)</ul>'
78b94ac016f63f16185689caa18e8507|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|27|5|V|python
	    result = re.findall(catch, html)
b4a88417b3d0170d754c647c30b7216a|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|27|11|v|python
	result
fb29dfed2b381b16e4504b66ae229aed|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|25|5|V|python
	    #res = re.match('^<ul>(.*?)</ul>$', html)
3da0980d84eb97fffb09d5406e912df0|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|26|11|v|python
	result[0]
cc93ff22b835fdd3503ad38dbb53f0dc|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|45|5|V|python
	        html = '''<ul>abc</ul>'''
a25f5a594b1cf9e752798c89b6179150|file:///usr/ring/Documents/code/py/spider/unicode_emoji/emoji.py|52|5|V|python
	    main('1')
b10d4e9bfce33e975839de8bdc2e9844|file:///usr/ring/Documents/code/py/spider/unicode_emoji/fail_list.txt|1|1|V|text
	4.0
	4.1
	1.1
	5.0
	5.1
	3.1
	3.0
	6.0
	5.2
	3.2
	6.1
	8.0
	7.0
	10.0
	11.0
	12.0
	9.0
	13.0
	1
	1
	1
	1
	1
ae2c163ad5eb824b4b0750d579248309|file:///usr/ring/Documents/code/py/spider/unicode_emoji/fail_list.txt|1|1|V|text
	.0
	4.1
	1.1
	5.0
	5.1
	3.1
	3.0
	6.0
	5.2
	3.2
	6.1
	8.0
	7.0
	10.0
	11.0
	12.0
	9.0
	13.0
	1
	1
	1
	1
	1
6f62bdcb0876c84763c92fb3ba17afa3|file:///usr/ring/scripts/dmenu-select-emoji.sh|1|1|V|sh
	grep -v "#" PATH | dmenu -i -l 20 -fn Monospace-18 | awk '{print $1}' | tr -d '\n' | xclip -selection clipboard
5ffb5f0d0de78321df46fc7c93ca64a3|file:///usr/ring/scripts/dmenu-emoji-selection.sh|3|13|v|sh
	PATH
c7f234345ef0d88ddf0c3b9c905f1f41|file:///usr/ring/scripts/dmenu-emoji-selection.sh|3|1|V|sh
	grep -v "#" ./static/emoji_unicode.txt | dmenu -i -l 20 -fn Monospace-18 | awk '{print $1}' | tr -d '\n' | xclip -selection clipboard
50c8188aaff61bcba489a96e06e3ef0c|file:///usr/ring/scripts/dmenu-emoji-selection.sh|5|45|v|sh
	xclip -o -selection clipboard
33725ae45554f7df620475cd286ec563|file:///usr/ring/xorg.conf.new|1|1|V|xf86conf
	Section "ServerLayout"
571993f6f27d9070c8e4bd4f59b03901|file:///usr/ring/var/dwm/config.h|93|55|v|cpp
	tr-toggle.sh
be4117b0c842c4be8f9960294bdc2cd1|file:///usr/ring/scripts/dmenu-emoji-selection.sh|3|51|v|sh
	.txt
9e8159144aad96a620cbee84defde02a|file:///usr/ring/.zshrc|19|1|V|zsh
	         emoji
1e10cd385ab9239c0f043b113d725eb1|file:///usr/ring/.zshrc|25|1|V|zsh
	bindkey -v
	bindkey -M vicmd "h" vi-insert
	bindkey -M vicmd "H" vi-insert-bol
	bindkey -M vicmd "j" vi-backward-char
	bindkey -M vicmd "l" vi-forward-char
	bindkey -M vicmd "J" vi-backward-word
	bindkey -M vicmd "L" vi-forward-word
	bindkey -M vicmd "k" down-line-or-history
	bindkey -M vicmd "i" up-line-or-history
	bindkey -M vicmd "I" up-line-or-history
	bindkey -M vicmd "gg" vi-beginning-of-line
	bindkey -M vicmd "G" vi-end-of-line
	bindkey -M vicmd "u" undo
	bindkey -M vicmd "=" vi-repeat-search
	bindkey -M vicmd "n" vi-forward-word-end
	bindkey -M vicmd "f" history-incremental-search-backward
	bindkey -M vicmd "F" history-incremental-search-forward
	
	# 自动改变光标的函数
	function zle-keymap-select {
		if [[ ${KEYMAP} == vicmd ]] || [[ $1 = 'block' ]]; then
			echo -ne '\e[1 q'
		elif [[ ${KEYMAP} == main ]] || [[ ${KEYMAP} == viins ]] || [[ ${KEYMAP} = '' ]] || [[ $1 = 'beam' ]]; then
			echo -ne '\e[5 q'
	  fi
	}
	zle -N zle-keymap-select
	
	# Use beam shape cursor on startup.
	echo -ne '\e[5 q'
2e086a0d6eeeb98c79bdb7ad4027b02f|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|1|1|^v|zsh
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
49500a4c629f3ce68ef5e57d9e064424|file:///usr/ring/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh|34|14|v|zsh
	http://zsh.sourceforge.net/Doc/Release/Zsh-Line-Editor
ae8b5aa26a3ae31612eec1d1f6ffbce9|file:///usr/ring/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh|36|50|v|zsh
	66666
916892e8806b2c4f4164aadb6356b0f9|file:///usr/ring/scripts/static/emoji_unicode|103|1|V|
	‍	Zero Width Joiner
d64b39228832040b16b8350f84e119c7|file:///usr/ring/.zshrc|111|1|V|zsh
	# Set list of themes to pick from when loading at random
	# Setting this variable when ZSH_THEME=random will cause zsh to load
	# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
	# If set to an empty array, this variable will have no effect.
	# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )
eec4140dc4fd8633e44462d8f45ff270|file:///usr/ring/.zshrc|111|43|V|zsh
	# Uncomment the following line to use case-sensitive completion.
	# CASE_SENSITIVE="true"
389773ca89b86a33a54e1e90836b48c8|file:///usr/ring/.zshrc|111|1|V|zsh
	
	# Uncomment the following line to use hyphen-insensitive completion.
	# Case-sensitive completion must be off. _ and - will be interchangeable.
	# HYPHEN_INSENSITIVE="true"
1981be6808373a1f089218ff3c2340d3|file:///usr/ring/.zshrc|111|1|V|zsh
	# Uncomment the following line to disable bi-weekly auto-update checks.
	# DISABLE_AUTO_UPDATE="true"
35ebcb7af21b912ca6ccfa12f7dd2e54|file:///usr/ring/.zshrc|111|1|V|zsh
	
	# Uncomment the following line to automatically update without prompting.
0e8725fc5562a7f75be228849a1f9b64|file:///usr/ring/.zshrc|111|1|V|zsh
	# DISABLE_UPDATE_PROMPT="true"
81169103fc861ba76d87caabb3465bfd|file:///usr/ring/.zshrc|111|1|V|zsh
	# Uncomment the following line to change how often to auto-update (in days).
	# export UPDATE_ZSH_DAYS=13
36fb0b811633be77c01ac55ea62f7a19|file:///usr/ring/.zshrc|109|1|V|zsh
	# Uncomment the following line to disable colors in ls.
	# DISABLE_LS_COLORS="true"
4daa04f3185ae6b1901268411b07762f|file:///usr/ring/.zshrc|109|1|V|zsh
	# Uncomment the following line to disable auto-setting terminal title.
	# DISABLE_AUTO_TITLE="true"
f9579bc7a2097a18f09c0a5f58d179d6|file:///usr/ring/.zshrc|109|1|V|zsh
	# Uncomment the following line to enable command auto-correction.
	# ENABLE_CORRECTION="true"
05b1cab061d19fd08ae58a793e804ab3|file:///usr/ring/.zshrc|112|1|V|zsh
	# Uncomment the following line if you want to disable marking untracked files
	# under VCS as dirty. This makes repository status check for large repositories
	# much, much faster.
	# DISABLE_UNTRACKED_FILES_DIRTY="true"
fc70872e4ec595b954a6ba6246da7750|file:///usr/ring/.zshrc|112|1|V|zsh
	# Uncomment the following line if you want to change the command execution time
	# stamp shown in the history command output.
	# You can set one of the optional three formats:
	# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
	# or set a custom format using the strftime function format specifications,
	# see 'man strftime' for details.
	# HIST_STAMPS="mm/dd/yyyy"
38cf9cc8fd993ec0e8032bfd369c5575|file:///usr/ring/.zshrc|112|1|V|zsh
	# Would you like to use another custom folder than $ZSH/custom?
	# ZSH_CUSTOM=/path/to/new-custom-folder
20338bd8f8c7efd4f0e70b93084056b6|file:///usr/ring/.zshrc|112|1|V|zsh
	# Which plugins would you like to load?
	# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
	# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
	# Example format: plugins=(rails git textmate ruby lighthouse)
	# Add wisely, as too many plugins slow down shell startup.
0c8f7c5e54b05fbc345babd1094357d1|file:///usr/ring/.zshrc|114|1|V|zsh
	# User configuration
67549231496b97ba4786bf28ff10c9d7|file:///usr/ring/.zshrc|114|1|V|zsh
	# export MANPATH="/usr/local/man:$MANPATH"
75214addcc054b8c1fcce240743a7cee|file:///usr/ring/.zshrc|114|1|V|zsh
	# You may need to manually set your language environment
	# export LANG=en_US.UTF-8
cafd31bf08fd14c0568ab3fe71f67445|file:///usr/ring/.zshrc|114|1|V|zsh
	# Preferred editor for local and remote sessions
	# if [[ -n $SSH_CONNECTION ]]; then
	#   export EDITOR='vim'
	# else
	#   export EDITOR='mvim'
	# fi
	
	# Compilation flags
	# export ARCHFLAGS="-arch x86_64"
	
	# Set personal aliases, overriding those provided by oh-my-zsh libs,
	# plugins, and themes. Aliases can be placed here, though oh-my-zsh
	# users are encouraged to define aliases within the ZSH_CUSTOM folder.
	# For a full list of active aliases, run `alias`.
	#
	# Example aliases
	# alias zshconfig="mate ~/.zshrc"
	# alias ohmyzsh="mate ~/.oh-my-zsh"
d809907ed33db6f12e29f2fd7aacaae0|file:///usr/ring/Video/ribs/code.txt|1|10|v|text
	https://www.youtube.com/watch?v=mjREZoRqTWM
edb66c19e458fac2a592c2cf41f12175|file:///usr/ring/Documents/code/py/spider/Maoyan/test.py|3|1|V|python
	import selenium
be9c11307b7bebebc4b4cb931c3ee488|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|65|9|^v|zsh
	-M
	-M
a9a7b7bc81ad5a4fbf689878c8fe2c98|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|65|9|^v|zsh
	-M vicmd
	-M vicmd
	-M vicmd
	-M vicmd
	-M vicmd
	-M vicmd
	-M vicmd
0bc4e4042a456503f2f157a5c69e9e18|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|36|1|V|zsh
	#bindkey '^?' backward-delete-char
a91a77b9d92019537364b2764affd15a|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|38|1|V|zsh
	#bindkey '^w' backward-kill-word
81bb590b5c043ca1eee7af42613b79bb|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|62|1|^v|zsh
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
cbce978d429337e339f4f2696c71836e|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|63|7|V|zsh
	#bindkey '^?' backward-delete-char
	#bindkey '^w' backward-kill-word
79db666b2756ca24163caf3718c88fb8|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|80|1|V|zsh
	# 自动改变光标的函数
02f0ac36cd0903c84c2045e4dc2493b1|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|40|1|V|zsh
	# allow ctrl-r and ctrl-s to search the history
	bindkey '^r' history-incremental-search-backward
	bindkey '^s' history-incremental-search-forward
d9534efa355facef72ee524d8f3c0a05|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|41|11|V|zsh
	bindkey '^j' beginning-of-line
	bindkey '^l' end-of-line
0236bc122b8740972653135382ff49f3|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|37|1|V|zsh
	bindkey '^h' backward-delete-char
2f1c5b28b496f4662b7ebc23ebb94e63|file:///usr/ring/scripts/dwm-status-refresh.sh|167|1|V|sh
	# xsetroot -name "  💿$(print_mem)M ⬇️$vel_recv ⬆️$vel_trans $(dwm_alsa) [ $(print_bat) ]$(show_record) $(print_date) "
b168e125f8ea424fadd3d90115812132|file:///usr/ring/scripts/dwm-status-refresh.sh|8|1|V|sh
	#function get_bytes {
	#	# Find active network interface
	#	interface=$(ip route get 8.8.8.8 2>/dev/null| awk '{print $5}')
	#	line=$(grep $interface /proc/net/dev | cut -d ':' -f 2 | awk '{print "received_bytes="$1, "transmitted_bytes="$9}')
	#	eval $line
	#	now=$(date +%s%N)
	#}
	
	# Function which calculates the speed using actual and old byte number.
	# Speed is shown in KByte per second when greater or equal than 1 KByte per second.
	# This function should be called each second.
	
	# function get_velocity {
	#	value=$1
	#	old_value=$2
	#	now=$3
	#
	#	timediff=$(($now - $old_time))
	#	velKB=$(echo "1000000000*($value-$old_value)/1024/$timediff" | bc)
	#	if test "$velKB" -gt 1024
	#	then
	#		echo $(echo "scale=2; $velKB/1024" | bc)MB/s
	#	else
	#		echo ${velKB}KB/s
	#	fi
	#}
	
	## Get initial values
	#get_bytes
	#old_received_bytes=$received_bytes
	#old_transmitted_bytes=$transmitted_bytes
	#old_time=$now
dc4f705fea0f76143b2aaf359197ffbd|file:///usr/ring/scripts/dwm-status-refresh.sh|29|1|V|sh
	#!/bin/bash
	
	get_time_until_charged() {
	
		# parses acpitool's battery info for the remaining charge of all batteries and sums them up
		sum_remaining_charge=$(acpitool -B | grep -E 'Remaining capacity' | awk '{print $4}' | grep -Eo "[0-9]+" | paste -sd+ | bc);
	
		# finds the rate at which the batteries being drained at
		present_rate=$(acpitool -B | grep -E 'Present rate' | awk '{print $4}' | grep -Eo "[0-9]+" | paste -sd+ | bc);
	
		# divides current charge by the rate at which it's falling, then converts it into seconds for `date`
	    if [ $present_rate -eq 0 ];
	    then
	        seconds=0;
	    else
		    seconds=$(bc <<< "scale = 10; ($sum_remaining_charge / $present_rate) * 3600");
	    fi
	
		# prettifies the seconds into h:mm:ss format
		# pretty_time=$(date -u -d "${seconds}" +%T);
	    pretty_time=(${seconds} / 60);
	
		echo $pretty_time;
	}
103796256549bb41021361ec5495d95e|file:///usr/ring/scripts/dwm-status-refresh.sh|81|7|v|sh
	cat /tmp/r2d2
25cd2849f234a2fd5612e2830a13eeec|file:///usr/ring/scripts/dwm-status-refresh.sh|112|60|v|sh
	$(show_record)
2c9e7b5b86aa31b772cf4ed6857b2526|file:///usr/ring/scripts/dwm-status-refresh.sh|79|1|V|sh
	show_record(){
		test -f /tmp/r2d2 || return
		rp=$(cat /tmp/r2d2 | awk '{print $2}')
		size=$(du -h $rp | awk '{print $1}')
		echo " $size $(basename $rp)"
	}
0242a25a1b97669d5b8762bc959bc56a|file:///usr/ring/scripts/dwm-status-refresh.sh|99|1|V|sh
	# get_bytes
	
	# Calculates speeds
	# vel_recv=$(get_velocity $received_bytes $old_received_bytes $now)
	# vel_trans=$(get_velocity $transmitted_bytes $old_transmitted_bytes $now)
	
0306116a4f3554b56fc735e0d4914da7|file:///usr/ring/scripts/dwm-status-refresh.sh|101|1|V|sh
	## Update old values to perform new calculations
	#old_received_bytes=$received_bytes
	#old_transmitted_bytes=$transmitted_bytes
	#old_time=$now
ad5a5c5f7e9c50355a639b176c94fdd9|file:///usr/ring/scripts/dwm-status-refresh.sh|35|1|V|sh
		# total_charge=$(expr $(acpi -b | awk '{print $4}' | grep -Eo "[0-9]+" | paste -sd+ | bc));
	
		# get amount of batteries in the device
		# battery_number=$(acpi -b | wc -l);
	
		# percent=$(expr $total_charge / $battery_number);
d9f58bc456c0b2d8e9e56113296f9c88|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|1|1|V|zsh
	## Updates editor information when the keymap changes.
	#function zle-keymap-select() {
	#  # update keymap variable for the prompt
	#  VI_KEYMAP=$KEYMAP
	#
	#  zle reset-prompt
	#  zle -R
	#}
	#
	#zle -N zle-keymap-select
	#
	#function vi-accept-line() {
	#  VI_KEYMAP=main
	#  zle accept-line
	#}
	#
	#zle -N vi-accept-line
	#
	#
	#bindkey -v
	#
	## use custom accept-line widget to update $VI_KEYMAP
	#bindkey -M vicmd '^J' vi-accept-line
	#bindkey -M vicmd '^M' vi-accept-line
	#
	## allow v to edit the command line (standard behaviour)
	#autoload -Uz edit-command-line
	#zle -N edit-command-line
	#bindkey -M vicmd 'v' edit-command-line
	#
	## allow ctrl-p, ctrl-n for navigate history (standard behaviour)
	#bindkey '^P' up-history
	#bindkey '^N' down-history
	#
	## allow ctrl-h, ctrl-w, ctrl-? for char and word deletion (standard behaviour)
	#bindkey '^?' backward-delete-char
	#bindkey '^h' backward-delete-char
	#bindkey '^w' backward-kill-word
	#
	## allow ctrl-r and ctrl-s to search the history
	#bindkey '^r' history-incremental-search-backward
	#bindkey '^s' history-incremental-search-forward
	#
	## allow ctrl-a and ctrl-e to move to beginning/end of line
	#bindkey '^a' beginning-of-line
	#bindkey '^e' end-of-line
	#
	## if mode indicator wasn't setup by theme, define default
	#if [[ "$MODE_INDICATOR" == "" ]]; then
	#  MODE_INDICATOR="%{$fg_bold[red]%}<%{$fg[red]%}<<%{$reset_color%}"
	#fi
	#
	#function vi_mode_prompt_info() {
	#  echo "${${VI_KEYMAP/vicmd/$MODE_INDICATOR}/(main|viins)/}"
	#}
	#
	## define right prompt, if it wasn't defined by a theme
	#if [[ "$RPS1" == "" && "$RPROMPT" == "" ]]; then
	#  RPS1='$(vi_mode_prompt_info)'
	#fi
a6f5b02fda7b975b5e7fa99c113dfcb3|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|132|1|^v|zsh
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
803f645e2ab3e5ba217f3f2011ab8623|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|110|1|^v|zsh
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
	#
4e95a5e15dd2cc6e3f9d57dd8332504c|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|24|1|^v|zsh
	#
	#
	#
	#
535a6fdad68297a7b23b082e87f017cf|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|28|1|^v|zsh
	#
	#
	#
	#
	#
2e883601ee7b84784116f53458a08d6d|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|33|1|V|zsh
	# allow ctrl-p, ctrl-n for navigate history (standard behaviour)
	bindkey '^p' up-history
	bindkey '^n' down-history
80c6577f6939743b260947b8b3fc4f11|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|40|1|V|zsh
	#
	## if mode indicator wasn't setup by theme, define default
	#if [[ "$MODE_INDICATOR" == "" ]]; then
	#  MODE_INDICATOR="%{$fg_bold[red]%}<%{$fg[red]%}<<%{$reset_color%}"
	#fi
	#
	#function vi_mode_prompt_info() {
	#  echo "${${VI_KEYMAP/vicmd/$MODE_INDICATOR}/(main|viins)/}"
	#}
	#
	## define right prompt, if it wasn't defined by a theme
	#if [[ "$RPS1" == "" && "$RPROMPT" == "" ]]; then
	#  RPS1='$(vi_mode_prompt_info)'
39925e9a38474f15be541f4b6ada5c2f|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|38|1|V|zsh
	bindkey '^j' beginning-of-line
bdeae78710f87f8e74bacc444cc0538c|file:///usr/ring/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh|122|1|V|zsh
	#bindkey '^e' end-of-line
6f9be6a0b0a3b0a1708fba3207eef4a5|file:///usr/ring/scripts/README.md|1|1|V|markdown
	# Some scripts
90fe9e33e16a5bbef0864f6b0e46ad91|file:///usr/ring/.zshrc|15|1|V|zsh
	export XDG_CONFIG_HOME="$HOME/.config"
b76c7837ab2b4222a03a4f2205b30698|file:///usr/ring/var/bspwm/.gitignore_|1|1|V|
	*.o
	st
	*.orig
	*.rej
062b3efe41f6baa8f4f503319cd407ae|file:///usr/ring/var/bspwm/.gitignore|6|1|V|
	*.orig
91b01f958ca50c74133c21feb6f83c01|file:///usr/ring/var/bspwm/.gitignore|6|1|V|
	*.rej
e4550dbcb81430fd96b8f0517bfff768|file:///usr/ring/var/dwm/config.h|89|36|v|cpp
	dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL 
d5c89c3a7c0beb8958491432e2f8a7cf|file:///usr/ring/.config/sxhkd/sxhkdrc|12|2|V|conf
		dmenu_run
3bcd9aca9f519317167ccf45443eb07f|file:///usr/ring/var/dwm/config.h|14|40|v|cpp
	Lucida Mac:size=25
1f63c137eb9bbb2c95a5d588a2a8dd4e|file:///usr/ring/.config/sxhkd/sxhkdrc|12|1|v|conf
	dmenufont
837cc564a59bc302087fd577a6b07d72|file:///usr/ring/.config/sxhkd/sxhkdrc|11|67|v|conf
	col_gray1
5a53fe95545cceabdf6585ca9c853f51|file:///usr/ring/.config/sxhkd/sxhkdrc|11|83|v|conf
	col_gray3
8c7313f086bf6861ac70d4cfec3905b3|file:///usr/ring/.config/sxhkd/sxhkdrc|11|99|v|conf
	col_cyan
a60b4a7a8e1db20b60a89a17d785424d|file:///usr/ring/.config/sxhkd/sxhkdrc|11|115|v|conf
	col_gray4
492ab7822f3859ff4f9923a586812340|file:///usr/ring/.config/sxhkd/sxhkdrc|11|1|V|conf
	    dmenu_run", "-m", dmenumon, "-fn", Lucida Mac:size=25, "-nb", #222222, "-nf", #bbbbbb, "-sb", #0099CC, "-sf", #ffffff, NULL
25befaf2efd73f2ccd5ed3f46a1103f5|file:///tmp/zshzi2dXX|1|15|v|zsh
	-m dmenumon, "
4a053164d2f279927b800f4116479e53|file:///tmp/zshzi2dXX|1|87|v|zsh
	, NULL
f0e2cee9376264592c8b463fb7495331|file:///tmp/zshnoBiLX|1|1|V|zsh
	dmenu_run -fn "Lucida Mac:size=25" -nb "#222222" -nf "#bbbbbb" -sb "#0099CC" -sf "#ffffff"
6d63a86a528a4febdbb34e6106944bc0|file:///usr/ring/.config/sxhkd/sxhkdrc|26|9|v|conf
	alt + {
1d6426f93b272e151e9ad279329c8ee6|file:///usr/ring/.config/sxhkd/sxhkdrc|26|9|v|conf
	alt + 
bf0e7540dce155beb0bbc730c8f8d2d5|file:///usr/ring/.config/sxhkd/sxhkdrc|30|9|v|conf
	{_,shift + }
cae97a297183cf31050c5ea5c258eb70|file:///usr/ring/.config/sxhkd/sxhkdrc|15|5|v|conf
	chromuim
41ef25b6d7127cc1e208196b73347aae|file:///usr/ring/.config/sxhkd/sxhkdrc|146|1|V|conf
	# volume up
ddb18b3a8323b21a3b7826ac4455a43d|file:///usr/ring/var/dwm/config.h|74|19|v|cpp
	0x1008ff13
2424cc9ff19972395b3d1e4e69b2f89e|file:///usr/ring/var/dwm/config.h|73|19|v|cpp
	0x1008ff11
abcb4b1d52041e45590cf781ae669f6f|file:///usr/ring/var/dwm/config.h|76|19|v|cpp
	0x1008ff02
43c22a94ad452172673c785859bd9df8|file:///usr/ring/var/dwm/config.h|75|19|v|cpp
	0x1008ff03
3e6e9495b3f3511fc45b1d4576644202|file:///usr/ring/.config/sxhkd/sxhkdrc|151|1|V|conf
	    pamixer -i 7
3f85dffe55c9ef3d55c2ad90c3199118|file:///usr/ring/.config/sxhkd/sxhkdrc|50|1|V|conf
	super + {t,shift + t,shift + f,f}
		bspc node -t {tiled,pseudo_tiled,floating,fullscreen}
3cc931808f2e27d54f2fca00f18b8b45|file:///usr/ring/.config/sxhkd/sxhkdrc|52|12|v|conf
	shift + t
1fe5cd7f931e537d93ff6dd2bc3ca061|file:///usr/ring/.config/sxhkd/sxhkdrc|53|21|v|conf
	,pseudo_tiled
d7060c6a5b8e6d10796f02fae260c38a|file:///usr/ring/.config/sxhkd/sxhkdrc|52|12|v|conf
	shift + 
85377b547025700a462a40f4e7a62259|file:///usr/ring/.config/bspwm/bspwmrc|17|1|V|sh
	bspc rule -a mplayer2 state=floating
6117fcfb047f96a9b9e0a5ffdbb1cc8e|file:///usr/ring/.config/bspwm/bspwmrc|18|14|v|sh
	mplayer2
3aca1616f750b720f13e2b0c85288a5a|file:///usr/ring/.config/bspwm/bspwmrc|18|1|V|sh
	bspc rule -a goldendict state=floating
b2a6bc5e7e1d83c007a4843b0a43a5ec|file:///usr/ring/.config/bspwm/bspwmrc|19|14|v|sh
	goldendict
9f814d5fddf832c1b13513fee9e4f4d8|file:///usr/ring/.config/bspwm/bspwmrc|19|1|V|sh
	bspc rule -a uGet state=floating
6fa74855b20595c69b77a80f87f9e8f2|file:///usr/ring/.config/bspwm/bspwmrc|20|14|v|sh
	uGet
b67f5448c01b952f5de20e79a354cae4|file:///usr/ring/.config/bspwm/bspwmrc|17|1|V|sh
	bspc rule -a mplayer2 state=floating
	bspc rule -a Goldendict state=floating
	bspc rule -a uGet state=floating
	bspc rule -a Transmission state=floating
26bbaa918e3cb15d0cc77674f2c7f554|file:///usr/ring/.config/sxhkd/sxhkdrc|118|1|V|conf
	super + alt + {j,k,i,l}
		bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}
71f262d796bed1ab30e8a2d5a8ddee6f|file:///usr/ring/.config/sxhkd/sxhkdrc|118|27|v|conf
	bottom
7c4f29407893c334a6cb7a87bf045c0d|file:///usr/ring/.config/sxhkd/sxhkdrc|118|46|v|conf
	right
811882fecd5c7618d7099ebbd39ea254|file:///usr/ring/.config/sxhkd/sxhkdrc|118|46|v|conf
	left
3abef28a7308286a7e8c0bc9b7b72f90|file:///usr/ring/.config/yabar/yabar.conf|1|26|v|
	, ...
f58c8c8f6463da18a75139751628e834|file:///usr/ring/.config/.gitignore|8|14|v|
	.subscribe.update.last
	
e07f9fbeb6d062fda4f2c1a60b495e49|file:///usr/ring/.config/.gitignore|8|15|v|
	electron-ssr/Cache/data_0
	
f901e16572496193c71fe8c839fa3c0d|file:///usr/ring/.config/.gitignore|9|1|V|
	electron-ssr/Cache/data_1
	electron-ssr/Cache/data_2
	electron-ssr/Cache/data_3
	electron-ssr/Cache/f_000001
	electron-ssr/Cache/index
	electron-ssr/Cookies
	electron-ssr/Cookies-journal
	electron-ssr/GPUCache/data_0
	electron-ssr/GPUCache/data_1
	electron-ssr/GPUCache/data_2
	electron-ssr/GPUCache/data_3
	electron-ssr/GPUCache/index
	electron-ssr/Local Storage/file__0.localstorage
	electron-ssr/Local Storage/file__0.localstorage-journal
	electron-ssr/Preferences
	electron-ssr/SS
	electron-ssr/SingletonCookie
	electron-ssr/SingletonLock
	electron-ssr/gui-config.json
	electron-ssr/logs/shadowsocksr-client.log
	electron-ssr/pac.txt
	electron-ssr/sentry/scope.json
	electron-ssr/shadowsocksr/.gitignore
	electron-ssr/shadowsocksr/.travis.yml
	electron-ssr/shadowsocksr/CHANGES
	electron-ssr/shadowsocksr/CONTRIBUTING.md
	electron-ssr/shadowsocksr/Dockerfile
	electron-ssr/shadowsocksr/LICENSE
	electron-ssr/shadowsocksr/MANIFEST.in
	electron-ssr/shadowsocksr/README.md
	electron-ssr/shadowsocksr/README.rst
	electron-ssr/shadowsocksr/apiconfig.py
	electron-ssr/shadowsocksr/asyncmgr.py
	electron-ssr/shadowsocksr/config.json
	electron-ssr/shadowsocksr/configloader.py
	electron-ssr/shadowsocksr/db_transfer.py
	electron-ssr/shadowsocksr/debian/changelog
	electron-ssr/shadowsocksr/debian/compat
	electron-ssr/shadowsocksr/debian/config.json
	electron-ssr/shadowsocksr/debian/control
	electron-ssr/shadowsocksr/debian/copyright
	electron-ssr/shadowsocksr/debian/docs
	electron-ssr/shadowsocksr/debian/init.d
	electron-ssr/shadowsocksr/debian/install
	electron-ssr/shadowsocksr/debian/rules
	electron-ssr/shadowsocksr/debian/shadowsocks.default
	electron-ssr/shadowsocksr/debian/shadowsocks.manpages
	electron-ssr/shadowsocksr/debian/source/format
	electron-ssr/shadowsocksr/debian/sslocal.1
	electron-ssr/shadowsocksr/debian/ssserver.1
	electron-ssr/shadowsocksr/importloader.py
	electron-ssr/shadowsocksr/initcfg.bat
	electron-ssr/shadowsocksr/initcfg.sh
	electron-ssr/shadowsocksr/initmudbjson.sh
	electron-ssr/shadowsocksr/logrun.sh
	electron-ssr/shadowsocksr/mudb.json
	electron-ssr/shadowsocksr/mujson_mgr.py
	electron-ssr/shadowsocksr/mysql.json
	electron-ssr/shadowsocksr/run.sh
	electron-ssr/shadowsocksr/server.py
	electron-ssr/shadowsocksr/server_pool.py
	electron-ssr/shadowsocksr/setup.py
	electron-ssr/shadowsocksr/setup_cymysql.sh
	electron-ssr/shadowsocksr/shadowsocks/__init__.py
	electron-ssr/shadowsocksr/shadowsocks/asyncdns.py
	electron-ssr/shadowsocksr/shadowsocks/common.py
	electron-ssr/shadowsocksr/shadowsocks/crypto/__init__.py
	electron-ssr/shadowsocksr/shadowsocks/crypto/ctypes_libsodium.py
	electron-ssr/shadowsocksr/shadowsocks/crypto/ctypes_openssl.py
	electron-ssr/shadowsocksr/shadowsocks/crypto/openssl.py
	electron-ssr/shadowsocksr/shadowsocks/crypto/rc4_md5.py
	electron-ssr/shadowsocksr/shadowsocks/crypto/sodium.py
	electron-ssr/shadowsocksr/shadowsocks/crypto/table.py
	electron-ssr/shadowsocksr/shadowsocks/crypto/util.py
	electron-ssr/shadowsocksr/shadowsocks/daemon.py
	electron-ssr/shadowsocksr/shadowsocks/encrypt.py
	electron-ssr/shadowsocksr/shadowsocks/encrypt_test.py
	electron-ssr/shadowsocksr/shadowsocks/eventloop.py
	electron-ssr/shadowsocksr/shadowsocks/local.py
	electron-ssr/shadowsocksr/shadowsocks/logrun.sh
	electron-ssr/shadowsocksr/shadowsocks/lru_cache.py
	electron-ssr/shadowsocksr/shadowsocks/manager.py
	electron-ssr/shadowsocksr/shadowsocks/obfs.py
	electron-ssr/shadowsocksr/shadowsocks/obfsplugin/__init__.py
	electron-ssr/shadowsocksr/shadowsocks/obfsplugin/auth.py
	electron-ssr/shadowsocksr/shadowsocks/obfsplugin/auth_chain.py
	electron-ssr/shadowsocksr/shadowsocks/obfsplugin/http_simple.py
	electron-ssr/shadowsocksr/shadowsocks/obfsplugin/obfs_tls.py
	electron-ssr/shadowsocksr/shadowsocks/obfsplugin/plain.py
	electron-ssr/shadowsocksr/shadowsocks/obfsplugin/verify.py
	electron-ssr/shadowsocksr/shadowsocks/ordereddict.py
	electron-ssr/shadowsocksr/shadowsocks/run.sh
	electron-ssr/shadowsocksr/shadowsocks/server.py
	electron-ssr/shadowsocksr/shadowsocks/shell.py
	electron-ssr/shadowsocksr/shadowsocks/stop.sh
	electron-ssr/shadowsocksr/shadowsocks/tail.sh
	electron-ssr/shadowsocksr/shadowsocks/tcprelay.py
	electron-ssr/shadowsocksr/shadowsocks/udprelay.py
	electron-ssr/shadowsocksr/shadowsocks/version.py
	electron-ssr/shadowsocksr/stop.sh
	electron-ssr/shadowsocksr/switchrule.py
	electron-ssr/shadowsocksr/tail.sh
	electron-ssr/shadowsocksr/tests/aes-cfb1.json
	electron-ssr/shadowsocksr/tests/aes-cfb8.json
	electron-ssr/shadowsocksr/tests/aes-ctr.json
	electron-ssr/shadowsocksr/tests/aes.json
	electron-ssr/shadowsocksr/tests/assert.sh
	electron-ssr/shadowsocksr/tests/chacha20.json
	electron-ssr/shadowsocksr/tests/client-multi-server-ip.json
	electron-ssr/shadowsocksr/tests/coverage_server.py
	electron-ssr/shadowsocksr/tests/fastopen.json
	electron-ssr/shadowsocksr/tests/ipv6-client-side.json
	electron-ssr/shadowsocksr/tests/ipv6.json
	electron-ssr/shadowsocksr/tests/jenkins.sh
	electron-ssr/shadowsocksr/tests/libsodium/install.sh
	electron-ssr/shadowsocksr/tests/nose_plugin.py
	electron-ssr/shadowsocksr/tests/rc4-md5.json
	electron-ssr/shadowsocksr/tests/salsa20-ctr.json
	electron-ssr/shadowsocksr/tests/salsa20.json
	electron-ssr/shadowsocksr/tests/server-multi-passwd-client-side.json
	electron-ssr/shadowsocksr/tests/server-multi-passwd-table.json
	electron-ssr/shadowsocksr/tests/server-multi-passwd.json
	electron-ssr/shadowsocksr/tests/server-multi-ports.json
	electron-ssr/shadowsocksr/tests/setup_tc.sh
	electron-ssr/shadowsocksr/tests/socksify/install.sh
	electron-ssr/shadowsocksr/tests/socksify/socks.conf
	electron-ssr/shadowsocksr/tests/table.json
	electron-ssr/shadowsocksr/tests/test.py
	electron-ssr/shadowsocksr/tests/test_command.sh
	electron-ssr/shadowsocksr/tests/test_daemon.sh
	electron-ssr/shadowsocksr/tests/test_large_file.sh
	electron-ssr/shadowsocksr/tests/test_udp_src.py
	electron-ssr/shadowsocksr/tests/test_udp_src.sh
	electron-ssr/shadowsocksr/tests/workers.json
	electron-ssr/shadowsocksr/utils/README.md
	electron-ssr/shadowsocksr/utils/autoban.py
	electron-ssr/shadowsocksr/utils/fail2ban/shadowsocks.conf
	emoji-keyboard.json
	fcitx/cached_layout
	fcitx/clipboard/history.dat
	fcitx/conf/fcitx-autoeng.config
	fcitx/conf/fcitx-chttrans.config
	fcitx/conf/fcitx-classic-ui.config
	fcitx/conf/fcitx-clipboard.config
	fcitx/conf/fcitx-imselector.config
	fcitx/conf/fcitx-keyboard.config
	fcitx/conf/fcitx-notify.config
	fcitx/conf/fcitx-pinyin-enhance.config
	fcitx/conf/fcitx-quickphrase.config
	fcitx/conf/fcitx-spell.config
	fcitx/conf/fcitx-unicode.config
	fcitx/conf/fcitx-xim.config
	fcitx/conf/fcitx-xkb.config
	fcitx/config
	fcitx/data/layout_override
	fcitx/dbus/d00f1405741d4847989362f85a763136-0
	fcitx/dbus/d00f1405741d4847989362f85a763136-1
	fcitx/googlepinyin/userdict_pinyin.dat
	fcitx/log/crash.log
	fcitx/profile
	google-chrome/BrowserMetrics-spare.pma
	google-chrome/CertificateRevocation/5632/LICENSE
	google-chrome/CertificateRevocation/5632/_metadata/verified_contents.json
	google-chrome/CertificateRevocation/5632/crl-set
	google-chrome/CertificateRevocation/5632/manifest.fingerprint
	google-chrome/CertificateRevocation/5632/manifest.json
	google-chrome/Default/.com.google.Chrome.EQAsUt
	google-chrome/Default/.com.google.Chrome.drO8Eh
	google-chrome/Default/000011.ldb
	google-chrome/Default/000016.log
	google-chrome/Default/AutofillStrikeDatabase/000003.log
	google-chrome/Default/AutofillStrikeDatabase/CURRENT
	google-chrome/Default/AutofillStrikeDatabase/LOCK
	google-chrome/Default/AutofillStrikeDatabase/LOG
	google-chrome/Default/AutofillStrikeDatabase/LOG.old
	google-chrome/Default/AutofillStrikeDatabase/MANIFEST-000001
	google-chrome/Default/Bookmarks
	google-chrome/Default/BudgetDatabase/000003.log
	google-chrome/Default/BudgetDatabase/CURRENT
	google-chrome/Default/BudgetDatabase/LOCK
	google-chrome/Default/BudgetDatabase/LOG
	google-chrome/Default/BudgetDatabase/LOG.old
	google-chrome/Default/BudgetDatabase/MANIFEST-000001
	google-chrome/Default/CURRENT
	google-chrome/Default/Cookies
	google-chrome/Default/Cookies-journal
	google-chrome/Default/Current Session
	google-chrome/Default/Current Tabs
	google-chrome/Default/Extension State/000003.log
	google-chrome/Default/Extension State/CURRENT
	google-chrome/Default/Extension State/LOCK
	google-chrome/Default/Extension State/LOG
	google-chrome/Default/Extension State/LOG.old
	google-chrome/Default/Extension State/MANIFEST-000001
	google-chrome/Default/Favicons
	google-chrome/Default/Favicons-journal
	google-chrome/Default/Feature Engagement Tracker/AvailabilityDB/000003.log
	google-chrome/Default/Feature Engagement Tracker/AvailabilityDB/CURRENT
	google-chrome/Default/Feature Engagement Tracker/AvailabilityDB/LOCK
	google-chrome/Default/Feature Engagement Tracker/AvailabilityDB/LOG
	google-chrome/Default/Feature Engagement Tracker/AvailabilityDB/LOG.old
b7da515738c85fce4c096d299afd7396|file:///usr/ring/.config/.gitignore|9|15|v|
	Default/Feature Engagement Tracker/AvailabilityDB/MANIFEST-000001
	
02656a2cecf0074e6d72e35358682020|file:///usr/ring/.config/.gitignore|10|9|v|
	gtkfilechooser.ini
	
a60fc8f05c5e428b5c0b7aa317d1bdcb|file:///usr/ring/.config/.gitignore|11|15|v|
	lazygit/config.yml
	
254b8c30feed959b4a19a7a8e10be0fb|file:///usr/ring/.config/.gitignore|12|1|V|
	jesseduffield/lazygit/state.yml
8621e0e61680c11af7249aa3c676e161|file:///usr/ring/.config/.gitignore|12|7|v|
	applications-merged/xdg-desktop-menu-dummy.menu
	
2dccd1ab3e03990aea77359831c85ca2|file:///usr/ring/.config/.gitignore|14|7|v|
	cookie
3a3dbc20c586ba6c8b79fe97f5b1c645|file:///usr/ring/.config/.gitignore|15|1|V|
	pulse/d00f1405741d4847989362f85a763136-card-database.tdb
	pulse/d00f1405741d4847989362f85a763136-default-sink
	pulse/d00f1405741d4847989362f85a763136-default-source
	pulse/d00f1405741d4847989362f85a763136-device-volumes.tdb
	pulse/d00f1405741d4847989362f85a763136-runtime
	pulse/d00f1405741d4847989362f85a763136-stream-volumes.tdb
381387211926da6f7afdeeefd1a2cfc8|file:///usr/ring/.config/.gitignore|15|17|v|
	config.ini
	
1eb5941c8ca05101eaa55b5610e103fd|file:///usr/ring/.config/.gitignore|16|5|v|
	vlc-qt-interface.conf
a77e326448d1b139b69b65650a4fcd63|file:///usr/ring/.config/.gitignore|17|1|V|
	vlc/vlcrc
a0801ee434d7d0a31d998603412a54c1|file:///usr/ring/.config/.gitignore|26|8|v|
	/global.py.json
	
810735b9b4ba8e1cc277a5cbe9f4d80a|file:///usr/ring/.config/.gitignore|27|5|v|
	/user
966fbf4ef2365330eb1c75b490212967|file:///usr/ring/.config/.gitignore|28|8|v|
	/he.dic
0c69c31a65f707020a6d1d6a6a26f05a|file:///usr/ring/.config/.gitignore|29|1|V|
	enchant/he.exc
1cf47a107a8a0b8186a8a72d65f2df0d|file:///usr/ring/.config/.gitignore|29|6|v|
	/accels
081ee513452dcc3b6d8b588ce25fc93f|file:///usr/ring/.config/.gitignore|30|5|v|
	/muttrc
18690c795937f0b09f148f531908f53c|file:///usr/ring/.config/.gitignore|31|20|v|
	/OfflineLibrary.db
97aa2f83a9a11cfa3d67a064bf6ff7af|file:///usr/ring/.config/.gitignore|32|19|V|
	netease-cloud-music/OnlineLibrary.db
	netease-cloud-music/netease-cloud-music.ini
3da912e671fce9e5d8af189c8d55d966|file:///usr/ring/.config/.gitignore|32|1|V|
	ranger/backup/commands.py
afcb7bbf777d730d96a0ccf60dd9df3b|file:///usr/ring/.config/.gitignore|32|20|v|
	/settings.json
fb30123f6a547baade90d7f2e802eb94|file:///usr/ring/.config/.gitignore|33|13|v|
	/dht.dat
2708abfa6c8c97520801c5e896d86bc6|file:///usr/ring/.config/.gitignore|34|1|V|
	transmission/settings.json
e4f447f599eb430835c43007b8c634ed|file:///usr/ring/.config/.gitignore|34|5|v|
	/RSS-built-in.json
9026b8627fa29a94265bfdf97649e8fa|file:///usr/ring/.config/.gitignore|35|1|V|
	uGet/Setting.json
d3b2c5c72584653bdabe7df8a4cdb8ce|file:///usr/ring/.config/.gitignore|35|1|V|
	uGet/category/0000.json
48dfe7cae7eb2388000fb339ceb0171a|file:///usr/ring/.config/.gitignore|35|6|v|
	/terminal/accels.scm
87fab4e48b03e625453bff30c1f102d4|file:///usr/ring/.config/.gitignore|37|8|v|
	/global.py.json
8d6cf9181ae3e6cbd3391f794fb0dc2a|file:///usr/ring/.config/.gitignore|26|7|V|
	calibred
	conf
04cd5407ee0f3640b4f6852de98555a2|file:///usr/ring/.config/.gitignore|32|1|V|
	coc/*
eb00fd0cf913db8e97ff1e905d2ba5ae|file:///usr/ring/.config/.gitignore|32|1|V|
	coc/extensions
22f4052509bf7b65c8adccd93e840685|file:///usr/ring/scripts/dwmbar-functions/dwm_alsa.sh|14|33|v|sh
	["$VOL" -eq 0 ]
cc68c4ca52fddaa04508e2328f67d2e1|file:///usr/ring/scripts/dwmbar-functions/dwm_alsa.sh|24|12|v|sh
	[ "$ISMUTE" == "off" ]
dac0f7f7be3ec67d4db05036e4b0c6d9|file:///usr/ring/scripts/autostart_wait.sh|5|1|V|sh
	xscreensaver &
8cb9b5653055f5657f19b5e654d2711c|file:///usr/ring/scripts/dmenu-emoji-selection.sh|3|1|V|sh
	grep -v "#" /usr/ring/scripts/static/emoji_unicode | dmenu -i -l 20 -fn Monospace-18 | awk '{print $1}' | tr -d '\n' | xclip -selection clipboard
cc3fa242ce5a475b0c4107b74653a5da|file:///tmp/zshEus7hc|1|69|v|zsh
	-fn Monospace-18
a3fd27e2bbcda0c7be0037ee70829384|file:///tmp/zshgxX1P7|1|69|v|zsh
	Monospace
d8061616339fc0176e64ccad90c282af|file:///tmp/zshDzvVy9|1|82|v|zsh
	| awk '{print $1}'
d086cdd1b354df214a8b549ba835e6e6|file:///usr/ring/.config/sxhkd/sxhkdrc|156|1|V|conf
	XF86AudioMute
4a548addbfb239bbd12f5afe11a4b6dc|file:///usr/ring/.config/dunst/dunstrc|146|17|v|cfg
	middle
c2f0ff6f59aafe19b7134462d21a70cb|file:///usr/ring/.config/polybar/launch.sh|10|9|v|sh
	mybar
9fc90958c18e30aa2cc4111bb965f1aa|file:///usr/ring/.config/polybar/launch.sh|10|10|v|sh
	xample
1a79a4d60de6718e8e5b326e338ae533|file:///usr/ring/.config/polybar/config|30|6|v|dosini
	example
3ed6c3fc74b2907b810b13e062535809|file:///usr/ring/.config/polybar/config|183|1|^v|dosini
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
55803ff7a0535f3f8d275e537b731312|file:///usr/ring/.config/bspwm/bspwmrc|24|1|V|sh
	bspc rule -a Transmission state=floating
8fbdac3b50bce2cf6b5759846df53cce|file:///usr/ring/.config/bspwm/bspwmrc|25|1|V|sh
	bspc rule -a transmission-gtk state=floating
a7401f7e66cb5701af9731c8ef0c1eb0|file:///usr/ring/.config/bspwm/bspwmrc|26|14|v|sh
	transmission-gtk
ad27034358c25c6da161f44ac81e0ee8|file:///tmp/zshcEeh8u|1|1|v|zsh
	sudo pacman -S
2e7b23012b90cf88ee2ae1fce377b06c|file:///usr/ring/.config/bspwm/bspwmrc|17|1|V|sh
	# bspc rule -a Chromium     desktop='^2'
bdba3c5e730d4decb267fe8ca192f238|file:///usr/ring/.config/bspwm/bspwmrc|22|27|v|sh
	state=floating
	
14449a7c48f1c754aea5e79d2f00b17a|file:///usr/ring/.config/bspwm/bspwmrc|21|27|v|sh
	desktop='^2'
	
d6bb92cc64f55080bd668248dc2cf69e|file:///usr/ring/.config/bspwm/bspwmrc|21|1|V|sh
	bspc rule -a Chromium     state=floating
08a2b4ad3d9269da555ad581d12e2de7|file:///usr/ring/.config/bspwm/bspwmrc|21|1|V|sh
	bspc rule -a mplayer2     state=floating
4e65d83c3b4ad8d7165df768be889cdb|file:///usr/ring/.config/bspwm/bspwmrc|17|29|v|sh
	desktop='^2'
a1e67a0aaba4bd6dbcafe6d653f4c344|file:///usr/ring/.config/bspwm/bspwmrc|21|1|V|sh
	bspc rule -a GoldenDict       desktop='^8' state=floating
c4e327cc215704b5d01ab7a13e1393ab|file:///usr/ring/.config/polybar/config|113|1|V|dosini
	pin-workspaces = true
d8c3187d41cb9de43cdea1d344761306|file:///usr/ring/.config/bspwm/bspwmrc|7|17|v|sh
	I II III IV V VI VII VIII IX X
	
38e6ff247337ed65294825d4fef84d1c|file:///usr/ring/.config/polybar/config|128|1|V|dosini
	; Separator in between workspaces
922e9bc0f4d84e1525a76be2b0f017a0|file:///usr/ring/.config/polybar/config|129|1|V|dosini
	;label-separator = |
d0e71467b46d6554ca80d4dc423005dd|file:///usr/ring/.config/polybar/config|64|1|V|dosini
	label-separator = |
d304ba20e96d87411588eeabac850e34|file:///usr/ring/.config/polybar/config|61|1|v|dosini
	label
2b3b64e19b3d6d5e63814700132d9649|file:///usr/ring/.config/polybar/config|61|1|V|dosini
	modules-separator = |
c13367945d5d4c91047b3b50234aa7ab|file:///usr/ring/.config/polybar/config|129|13|v|dosini
	code
e72f4545eb68c96c754f91fc01573517|file:///usr/ring/.config/polybar/config|130|13|v|dosini
	office
73b0472d43069103642ffa07997ff20a|file:///usr/ring/.config/polybar/config|131|13|v|dosini
	graphics
b83a886a5c437ccd9ac15473fd6f1788|file:///usr/ring/.config/polybar/config|132|13|v|dosini
	mail
026cf23dc6f62eb67f9435aa0a6d57b1|file:///usr/ring/.config/polybar/config|54|1|V|dosini
	font-0 = fixed:pixelsize=10;1
cec315e3d0975e5cc2811d5d8725f149|file:///usr/ring/.config/polybar/config|54|10|v|dosini
	fixed
2fb389d7c8d12325f3c508b6934daf2a|file:///usr/ring/var/dwm/config.h|14|40|v|cpp
	unicode-emoji
fcca5e8d17e46f9d9bba927096555fda|file:///usr/ring/list.txt|3|1|V|text
	glib-networkingo
8c989da87b49aff7ecd75b0d06db9883|file:///usr/ring/list.txt|3|1|V|text
	glib-networking
7c2b23766ea315949b6b2e81e9ec1b5e|file:///usr/ring/var/st/config.h|9|22|v|cpp
	DejaV
449694ed97e9460f9d060cd8d6e04695|file:///usr/ring/var/st/config.h|9|48|v|cpp
	SauceCodePro Nerd Font Mono
17b9dd6c58833364f97f144e2825bd58|file:///usr/ring/.config/polybar/config|131|1|^v|dosini
	
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
	;
8dd059bfe1aa4735e1e0be6d7c2f37b6|file:///usr/ring/.config/polybar/config|56|10|v|dosini
	siji
9a1797df38c06ca0624c3e3776b0a895|file:///usr/ring/.config/polybar/config|60|39|v|dosini
	alsa 
0700608234095562d8b3a501c312834e|file:///usr/ring/.config/polybar/config|60|50|v|dosini
	xkeyboard 
061552d3b488c78cc6ca9468c7479df4|file:///usr/ring/.config/polybar/config|60|17|v|dosini
	filesystem 
a1641e94bb029a9ded8cc229e08e9ce3|file:///usr/ring/.config/polybar/config|54|1|V|dosini
	font-0 = fixed:pixelsize=10;1
	font-1 = unifont:fontformat=truetype:size=8:antialias=false;0
	font-2 = SauceCodePro Nerd Font Mono:pixelsize=10;1
3de1024e5559a7793658189116356db6|file:///usr/ring/.config/polybar/config|59|10|v|dosini
	unifont
e228cf9ac3b05923f223a4d2c30d23ae|file:///usr/ring/.config/polybar/config|286|19|v|dosini
	 muted
61ad9d7b3f9476737c526dfc06124dc5|file:///usr/ring/.config/polybar/config|64|27|v|dosini
	 alsa 
f5b1fac15d4fc90e8087493955034402|file:///usr/ring/.config/polybar/config|64|43|v|dosini
	 xkeyboard 
94c035cfa6668cd7aea4b33676e6f937|file:///usr/ring/.config/polybar/config|61|10|v|dosini
	FontAwesome
0979c75ec6e0a3127d3f25d8380f0b69|file:///usr/ring/.config/polybar/config|58|1|V|dosini
	font-0 = SauceCodePro Nerd Font Mono:pixelsize=10;1
	font-1 = SauceCodePro Nerd Font Mono:fontformat=truetype:size=8:antialias=false;0
	font-2 = Font Awesome 5 Free:pixelsize=10;1
	font-3 = Font Awesome 5 Free:size=10;0
8458e1d26e5825906f184fcda20433b0|file:///usr/ring/.config/polybar/config|60|10|v|dosini
	Font Awesome 5 Free
983b8b21513b020d2c6412448e1f100a|file:///usr/ring/.config/polybar/config|56|11|v|dosini
	SauceCodePro Nerd Font
50f6a780bd7a136746bd52a528f9e939|file:///usr/ring/.config/polybar/config|54|1|^v|dosini
	;
	;
	;
d7315844f47be7fc895d73e282d255cf|file:///usr/ring/.config/polybar/config_|1|1|V|dosini
	;==========================================================
	;
	;
	;   ██████╗  ██████╗ ██╗  ██╗   ██╗██████╗  █████╗ ██████╗
	;   ██╔══██╗██╔═══██╗██║  ╚██╗ ██╔╝██╔══██╗██╔══██╗██╔══██╗
	;   ██████╔╝██║   ██║██║   ╚████╔╝ ██████╔╝███████║██████╔╝
	;   ██╔═══╝ ██║   ██║██║    ╚██╔╝  ██╔══██╗██╔══██║██╔══██╗
	;   ██║     ╚██████╔╝███████╗██║   ██████╔╝██║  ██║██║  ██║
	;   ╚═╝      ╚═════╝ ╚══════╝╚═╝   ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝
	;
	;
	;   To learn more about how to configure Polybar
	;   go to https://github.com/polybar/polybar
	;
	;   The README contains a lot of information
	;
	;==========================================================
	
	[colors]
	;background = ${xrdb:color0:#222}
	background = #222
	background-alt = #444
	;foreground = ${xrdb:color7:#222}
	foreground = #dfdfdf
	foreground-alt = #555
	primary = #ffb52a
	secondary = #e60053
	alert = #bd2c40
	
	[bar/mybar]
	;monitor = ${env:MONITOR:HDMI-1}
	width = 100%
	height = 35
	;offset-x = 1%
	;offset-y = 1%
	radius = 6.0
	fixed-center = false
	
	background = ${colors.background}
	foreground = ${colors.foreground}
	
	line-size = 3
	line-color = #f00
	
	border-size = 4
	border-color = #00000000
	
	padding-left = 0
	padding-right = 2
	
	module-margin-left = 1
	module-margin-right = 2
	
	font-0 = fixed:pixelsize=10;1
	font-1 = unifont:fontformat=truetype:size=8:antialias=false;0
	font-2 = Font Awesome 5 Free Mono:pixelsize=10;1
	
	
	modules-left = bspwm 
	modules-center = mpd
	modules-right = xbacklight-acpi pulseaudio memory cpu wlan eth battery temperature date powermenu
	
	tray-position = right
	tray-padding = 2
	;tray-background = #0063ff
	
	;wm-restack = bspwm
	;wm-restack = i3
	
	;override-redirect = true
	
	scroll-up = bspwm-desknext
	scroll-down = bspwm-deskprev
	
	;scroll-up = i3wm-wsnext
	;scroll-down = i3wm-wsprev
	
	cursor-click = pointer
	cursor-scroll = ns-resize
	
	;[module/xwindow]
	;type = internal/xwindow
	;label = %title:0:30:...%
	;
	;[module/xkeyboard]
	;type = internal/xkeyboard
	;blacklist-0 = num lock
	;
	;format-prefix = " "
	;format-prefix-foreground = ${colors.foreground-alt}
	;format-prefix-underline = ${colors.secondary}
	;
	;label-layout = %layout%
	;label-layout-underline = ${colors.secondary}
	;
	;label-indicator-padding = 2
	;label-indicator-margin = 1
	;label-indicator-background = ${colors.secondary}
	;label-indicator-underline = ${colors.secondary}
	;
	;[module/filesystem]
	;type = internal/fs
	;interval = 25
	;
	;mount-0 = /
	;
	;label-mounted = %{F#0a81f5}%mountpoint%%{F-}: %percentage_used%%
	;label-unmounted = %mountpoint% not mounted
	;label-unmounted-foreground = ${colors.foreground-alt}
	
	[module/bspwm]
	type = internal/bspwm
	
	label-focused = %index%
	label-focused-background = ${colors.background-alt}
	label-focused-underline= ${colors.primary}
	label-focused-padding = 2
	
	label-occupied = %index%
	label-occupied-padding = 2
	
	label-urgent = %index%!
	label-urgent-background = ${colors.alert}
	label-urgent-padding = 2
	
	label-empty = %index%
	label-empty-foreground = ${colors.foreground-alt}
	label-empty-padding = 2
	
	;label-separator = |
	
	
	;[module/i3]
	;type = internal/i3
	;format = <label-state> <label-mode>
	;index-sort = true
	;wrapping-scroll = false
	;
	;; Only show workspaces on the same output as the bar
	;;pin-workspaces = true
	;
	;label-mode-padding = 2
	;label-mode-foreground = #000
	;label-mode-background = ${colors.primary}
	;
	;; focused = Active workspace on focused monitor
	;label-focused = %index%
	;label-focused-background = ${colors.background-alt}
	;label-focused-underline= ${colors.primary}
	;label-focused-padding = 2
	;
	;; unfocused = Inactive workspace on any monitor
	;label-unfocused = %index%
	;label-unfocused-padding = 2
	;
	;; visible = Active workspace on unfocused monitor
	;label-visible = %index%
	;label-visible-background = ${self.label-focused-background}
	;label-visible-underline = ${self.label-focused-underline}
	;label-visible-padding = ${self.label-focused-padding}
	;
	;; urgent = Workspace with urgency hint set
	;label-urgent = %index%
	;label-urgent-background = ${colors.alert}
	;label-urgent-padding = 2
	;
	;; Separator in between workspaces
	;; label-separator = |
	;
	;
	;[module/mpd]
	;type = internal/mpd
	;format-online = <label-song>  <icon-prev> <icon-stop> <toggle> <icon-next>
	;
	;icon-prev = 
	;icon-stop = 
	;icon-play = 
	;icon-pause = 
	;icon-next = 
	;
	;label-song-maxlen = 25
	;label-song-ellipsis = true
	;
	[module/xbacklight]
	type = internal/xbacklight
	
	format = <label> <bar>
	label = BL
	
	bar-width = 10
	bar-indicator = |
	bar-indicator-foreground = #fff
	bar-indicator-font = 2
	bar-fill = ─
	bar-fill-font = 2
	bar-fill-foreground = #9f78e1
	bar-empty = ─
	bar-empty-font = 2
	bar-empty-foreground = ${colors.foreground-alt}
	
	[module/backlight-acpi]
	inherit = module/xbacklight
	type = internal/backlight
	card = intel_backlight
	
	[module/cpu]
	type = internal/cpu
	interval = 2
	format-prefix = " "
	format-prefix-foreground = ${colors.foreground-alt}
	format-underline = #f90000
	label = %percentage:2%%
	
	[module/memory]
	type = internal/memory
	interval = 2
	format-prefix = " "
	format-prefix-foreground = ${colors.foreground-alt}
	format-underline = #4bffdc
	label = %percentage_used%%
	
	[module/wlan]
	type = internal/network
	interface = wlp1s0
	interval = 3.0
	
	format-connected = <ramp-signal> <label-connected>
	format-connected-underline = #9f78e1
	label-connected = %essid%
	
	format-disconnected =
	;format-disconnected = <label-disconnected>
	;format-disconnected-underline = ${self.format-connected-underline}
	;label-disconnected = %ifname% disconnected
	;label-disconnected-foreground = ${colors.foreground-alt}
	
	ramp-signal-0 = 
	ramp-signal-1 = 
	ramp-signal-2 = 
	ramp-signal-3 = 
	ramp-signal-4 = 
	ramp-signal-foreground = ${colors.foreground-alt}
	
	[module/eth]
	type = internal/network
	interface = net0
	interval = 3.0
	
	format-connected-underline = #55aa55
	format-connected-prefix = " "
	format-connected-prefix-foreground = ${colors.foreground-alt}
	label-connected = %local_ip%
	
	format-disconnected =
	;format-disconnected = <label-disconnected>
	;format-disconnected-underline = ${self.format-connected-underline}
	;label-disconnected = %ifname% disconnected
	;label-disconnected-foreground = ${colors.foreground-alt}
	
	[module/date]
	type = internal/date
	interval = 5
	
	date =
	date-alt = " %Y-%m-%d"
	
	time = %H:%M (%a)
	time-alt = %H:%M:%S (%a)
	
	format-prefix = 
	format-prefix-foreground = ${colors.foreground-alt}
	format-underline = #0a6cf5
	
	label = %date% %time%
	
	[module/pulseaudio]
	type = internal/pulseaudio
	
	format-volume = <label-volume> <bar-volume>
	label-volume = VOL %percentage%%
	label-volume-foreground = ${root.foreground}
	
	label-muted = 🔇 muted
	label-muted-foreground = #666
	
	bar-volume-width = 10
	bar-volume-foreground-0 = #55aa55
	bar-volume-foreground-1 = #55aa55
	bar-volume-foreground-2 = #55aa55
	bar-volume-foreground-3 = #55aa55
	bar-volume-foreground-4 = #55aa55
	bar-volume-foreground-5 = #f5a70a
	bar-volume-foreground-6 = #ff5555
	bar-volume-gradient = false
	bar-volume-indicator = |
	bar-volume-indicator-font = 2
	bar-volume-fill = ─
	bar-volume-fill-font = 2
	bar-volume-empty = ─
	bar-volume-empty-font = 2
	bar-volume-empty-foreground = ${colors.foreground-alt}
	
	[module/alsa]
	type = internal/alsa
	
	format-volume = <label-volume> <bar-volume>
	label-volume = VOL
	label-volume-foreground = ${root.foreground}
	
	format-muted-prefix = " "
	format-muted-foreground = ${colors.foreground-alt}
	label-muted = sound muted
	
	bar-volume-width = 10
	bar-volume-foreground-0 = #55aa55
	bar-volume-foreground-1 = #55aa55
	bar-volume-foreground-2 = #55aa55
	bar-volume-foreground-3 = #55aa55
	bar-volume-foreground-4 = #55aa55
	bar-volume-foreground-5 = #f5a70a
	bar-volume-foreground-6 = #ff5555
	bar-volume-gradient = false
	bar-volume-indicator = |
	bar-volume-indicator-font = 2
	bar-volume-fill = ─
	bar-volume-fill-font = 2
	bar-volume-empty = ─
	bar-volume-empty-font = 2
	bar-volume-empty-foreground = ${colors.foreground-alt}
	
	[module/battery]
	type = internal/battery
	battery = BAT0
	adapter = ADP0
	full-at = 98
	
	format-charging = <animation-charging> <label-charging>
	format-charging-underline = #ffb52a
	
	format-discharging = <animation-discharging> <label-discharging>
	format-discharging-underline = ${self.format-charging-underline}
	
	format-full-prefix = " "
	format-full-prefix-foreground = ${colors.foreground-alt}
	format-full-underline = ${self.format-charging-underline}
	
	ramp-capacity-0 = 
	ramp-capacity-1 = 
	ramp-capacity-2 = 
	ramp-capacity-foreground = ${colors.foreground-alt}
	
	animation-charging-0 = 
	animation-charging-1 = 
	animation-charging-2 = 
	animation-charging-foreground = ${colors.foreground-alt}
	animation-charging-framerate = 750
	
	animation-discharging-0 = 
	animation-discharging-1 = 
	animation-discharging-2 = 
	animation-discharging-foreground = ${colors.foreground-alt}
	animation-discharging-framerate = 750
	
	[module/temperature]
	type = internal/temperature
	thermal-zone = 0
	warn-temperature = 60
	
	format = <ramp> <label>
	format-underline = #f50a4d
	format-warn = <ramp> <label-warn>
	format-warn-underline = ${self.format-underline}
	
	label = %temperature-c%
	label-warn = %temperature-c%
	label-warn-foreground = ${colors.secondary}
	
	ramp-0 = 
	ramp-1 = 
	ramp-2 = 
	ramp-foreground = ${colors.foreground-alt}
	
	[module/powermenu]
	type = custom/menu
	
	expand-right = true
	
	format-spacing = 1
	
	label-open = 
	label-open-foreground = ${colors.secondary}
	label-close =  cancel
	label-close-foreground = ${colors.secondary}
	label-separator = |
	label-separator-foreground = ${colors.foreground-alt}
	
	menu-0-0 = reboot
	menu-0-0-exec = menu-open-1
	menu-0-1 = power off
	menu-0-1-exec = menu-open-2
	
	menu-1-0 = cancel
	menu-1-0-exec = menu-open-0
	menu-1-1 = reboot
	menu-1-1-exec = sudo reboot
	
	menu-2-0 = power off
	menu-2-0-exec = sudo poweroff
	menu-2-1 = cancel
	menu-2-1-exec = menu-open-0
	
	[settings]
	screenchange-reload = true
	;compositing-background = xor
	;compositing-background = screen
	;compositing-foreground = source
	;compositing-border = over
	;pseudo-transparency = false
	
	[global/wm]
	margin-top = 5
	margin-bottom = 0
	
	; vim:ft=dosini
f37485dfb874206d80b6c227a000554f|file:///usr/ring/.config/polybar/config|80|1|V|dosini
	
	;[module/xwindow]
	;type = internal/xwindow
	;label = %title:0:30:...%
	;
	;[module/xkeyboard]
	;type = internal/xkeyboard
	;blacklist-0 = num lock
	;
	;format-prefix = " "
	;format-prefix-foreground = ${colors.foreground-alt}
	;format-prefix-underline = ${colors.secondary}
	;
	;label-layout = %layout%
	;label-layout-underline = ${colors.secondary}
	;
	;label-indicator-padding = 2
	;label-indicator-margin = 1
	;label-indicator-background = ${colors.secondary}
	;label-indicator-underline = ${colors.secondary}
	;
	;[module/filesystem]
	;type = internal/fs
	;interval = 25
	;
	;mount-0 = /
	;
	;label-mounted = %{F#0a81f5}%mountpoint%%{F-}: %percentage_used%%
	;label-unmounted = %mountpoint% not mounted
	;label-unmounted-foreground = ${colors.foreground-alt}
	
	[module/bspwm]
	type = internal/bspwm
	
	label-focused = %index%
	label-focused-background = ${colors.background-alt}
	label-focused-underline= ${colors.primary}
	label-focused-padding = 2
	
	label-occupied = %index%
	label-occupied-padding = 2
	
	label-urgent = %index%!
	label-urgent-background = ${colors.alert}
	label-urgent-padding = 2
	
	label-empty = %index%
	label-empty-foreground = ${colors.foreground-alt}
	label-empty-padding = 2
	
	;label-separator = |
	
	
	;[module/i3]
	;type = internal/i3
	;format = <label-state> <label-mode>
	;index-sort = true
	;wrapping-scroll = false
	;
	;; Only show workspaces on the same output as the bar
	;;pin-workspaces = true
	;
	;label-mode-padding = 2
	;label-mode-foreground = #000
	;label-mode-background = ${colors.primary}
	;
	;; focused = Active workspace on focused monitor
	;label-focused = %index%
	;label-focused-background = ${colors.background-alt}
	;label-focused-underline= ${colors.primary}
	;label-focused-padding = 2
	;
	;; unfocused = Inactive workspace on any monitor
	;label-unfocused = %index%
	;label-unfocused-padding = 2
	;
	;; visible = Active workspace on unfocused monitor
	;label-visible = %index%
	;label-visible-background = ${self.label-focused-background}
	;label-visible-underline = ${self.label-focused-underline}
	;label-visible-padding = ${self.label-focused-padding}
	;
	;; urgent = Workspace with urgency hint set
	;label-urgent = %index%
	;label-urgent-background = ${colors.alert}
	;label-urgent-padding = 2
	;
	;; Separator in between workspaces
	;; label-separator = |
	;
	;
	;[module/mpd]
	;type = internal/mpd
	;format-online = <label-song>  <icon-prev> <icon-stop> <toggle> <icon-next>
	;
	;icon-prev = 
	;icon-stop = 
	;icon-play = 
	;icon-pause = 
	;icon-next = 
	;
	;label-song-maxlen = 25
	;label-song-ellipsis = true
	;
	[module/xbacklight]
	type = internal/xbacklight
	
	format = <label> <bar>
	label = BL
	
	bar-width = 10
	bar-indicator = |
	bar-indicator-foreground = #fff
	bar-indicator-font = 2
	bar-fill = ─
	bar-fill-font = 2
	bar-fill-foreground = #9f78e1
	bar-empty = ─
	bar-empty-font = 2
	bar-empty-foreground = ${colors.foreground-alt}
	
	[module/backlight-acpi]
	inherit = module/xbacklight
	type = internal/backlight
	card = intel_backlight
	
	[module/cpu]
	type = internal/cpu
	interval = 2
	format-prefix = " "
	format-prefix-foreground = ${colors.foreground-alt}
	format-underline = #f90000
	label = %percentage:2%%
	
	[module/memory]
	type = internal/memory
	interval = 2
	format-prefix = " "
	format-prefix-foreground = ${colors.foreground-alt}
	format-underline = #4bffdc
	label = %percentage_used%%
	
	[module/wlan]
	type = internal/network
	interface = wlp1s0
	interval = 3.0
	
	format-connected = <ramp-signal> <label-connected>
	format-connected-underline = #9f78e1
	label-connected = %essid%
	
	format-disconnected =
	;format-disconnected = <label-disconnected>
	;format-disconnected-underline = ${self.format-connected-underline}
	;label-disconnected = %ifname% disconnected
	;label-disconnected-foreground = ${colors.foreground-alt}
	
	ramp-signal-0 = 
	ramp-signal-1 = 
	ramp-signal-2 = 
	ramp-signal-3 = 
	ramp-signal-4 = 
	ramp-signal-foreground = ${colors.foreground-alt}
	
	[module/eth]
	type = internal/network
	interface = net0
	interval = 3.0
	
	format-connected-underline = #55aa55
	format-connected-prefix = " "
	format-connected-prefix-foreground = ${colors.foreground-alt}
	label-connected = %local_ip%
	
	format-disconnected =
	;format-disconnected = <label-disconnected>
	;format-disconnected-underline = ${self.format-connected-underline}
	;label-disconnected = %ifname% disconnected
	;label-disconnected-foreground = ${colors.foreground-alt}
	
	[module/date]
	type = internal/date
	interval = 5
	
	date =
	date-alt = " %Y-%m-%d"
	
	time = %H:%M (%a)
	time-alt = %H:%M:%S (%a)
	
	format-prefix = 
	format-prefix-foreground = ${colors.foreground-alt}
	format-underline = #0a6cf5
	
	label = %date% %time%
	
	[module/pulseaudio]
	type = internal/pulseaudio
	
	format-volume = <label-volume> <bar-volume>
	label-volume = VOL %percentage%%
	label-volume-foreground = ${root.foreground}
	
	label-muted = 🔇 muted
	label-muted-foreground = #666
	
	bar-volume-width = 10
	bar-volume-foreground-0 = #55aa55
	bar-volume-foreground-1 = #55aa55
	bar-volume-foreground-2 = #55aa55
	bar-volume-foreground-3 = #55aa55
	bar-volume-foreground-4 = #55aa55
	bar-volume-foreground-5 = #f5a70a
	bar-volume-foreground-6 = #ff5555
	bar-volume-gradient = false
	bar-volume-indicator = |
	bar-volume-indicator-font = 2
	bar-volume-fill = ─
	bar-volume-fill-font = 2
	bar-volume-empty = ─
	bar-volume-empty-font = 2
	bar-volume-empty-foreground = ${colors.foreground-alt}
	
	[module/alsa]
	type = internal/alsa
	
	format-volume = <label-volume> <bar-volume>
	label-volume = VOL
	label-volume-foreground = ${root.foreground}
	
	format-muted-prefix = " "
	format-muted-foreground = ${colors.foreground-alt}
	label-muted = sound muted
	
	bar-volume-width = 10
	bar-volume-foreground-0 = #55aa55
	bar-volume-foreground-1 = #55aa55
	bar-volume-foreground-2 = #55aa55
	bar-volume-foreground-3 = #55aa55
	bar-volume-foreground-4 = #55aa55
	bar-volume-foreground-5 = #f5a70a
	bar-volume-foreground-6 = #ff5555
	bar-volume-gradient = false
	bar-volume-indicator = |
	bar-volume-indicator-font = 2
	bar-volume-fill = ─
	bar-volume-fill-font = 2
	bar-volume-empty = ─
	bar-volume-empty-font = 2
	bar-volume-empty-foreground = ${colors.foreground-alt}
	
	[module/battery]
	type = internal/battery
	battery = BAT0
	adapter = ADP0
	full-at = 98
	
	format-charging = <animation-charging> <label-charging>
	format-charging-underline = #ffb52a
	
	format-discharging = <animation-discharging> <label-discharging>
	format-discharging-underline = ${self.format-charging-underline}
	
	format-full-prefix = " "
	format-full-prefix-foreground = ${colors.foreground-alt}
	format-full-underline = ${self.format-charging-underline}
	
	ramp-capacity-0 = 
	ramp-capacity-1 = 
	ramp-capacity-2 = 
	ramp-capacity-foreground = ${colors.foreground-alt}
	
	animation-charging-0 = 
	animation-charging-1 = 
	animation-charging-2 = 
	animation-charging-foreground = ${colors.foreground-alt}
	animation-charging-framerate = 750
	
	animation-discharging-0 = 
	animation-discharging-1 = 
	animation-discharging-2 = 
	animation-discharging-foreground = ${colors.foreground-alt}
	animation-discharging-framerate = 750
	
	[module/temperature]
	type = internal/temperature
	thermal-zone = 0
	warn-temperature = 60
	
	format = <ramp> <label>
	format-underline = #f50a4d
	format-warn = <ramp> <label-warn>
	format-warn-underline = ${self.format-underline}
	
	label = %temperature-c%
	label-warn = %temperature-c%
	label-warn-foreground = ${colors.secondary}
	
	ramp-0 = 
	ramp-1 = 
	ramp-2 = 
	ramp-foreground = ${colors.foreground-alt}
	
	[module/powermenu]
	type = custom/menu
	
	expand-right = true
	
	format-spacing = 1
	
	label-open = 
	label-open-foreground = ${colors.secondary}
	label-close =  cancel
	label-close-foreground = ${colors.secondary}
	label-separator = |
	label-separator-foreground = ${colors.foreground-alt}
	
	menu-0-0 = reboot
	menu-0-0-exec = menu-open-1
	menu-0-1 = power off
	menu-0-1-exec = menu-open-2
	
	menu-1-0 = cancel
	menu-1-0-exec = menu-open-0
	menu-1-1 = reboot
	menu-1-1-exec = sudo reboot
	
	menu-2-0 = power off
	menu-2-0-exec = sudo poweroff
	menu-2-1 = cancel
	menu-2-1-exec = menu-open-0
16d328a29b89c490504428bcc4f4686a|file:///usr/ring/.config/polybar/config|18|1|V|dosini
	
	[colors]
	;background = ${xrdb:color0:#222}
	background = #222
	background-alt = #444
	;foreground = ${xrdb:color7:#222}
	foreground = #dfdfdf
	foreground-alt = #555
	primary = #ffb52a
	secondary = #e60053
	alert = #bd2c40
	
	[bar/mybar]
	;monitor = ${env:MONITOR:HDMI-1}
	bottom = true
	width = 100%
	height = 35
	;offset-x = 1%
	;offset-y = 1%
	radius = 6.0
	fixed-center = false
	
	background = ${colors.background}
	foreground = ${colors.foreground}
	
	line-size = 3
	line-color = #f00
	
	border-size = 4
	border-color = #00000000
	
	padding-left = 0
	padding-right = 2
	
	module-margin-left = 1
	module-margin-right = 2
	
	font-0 = fixed:pixelsize=10;1
	font-1 = unifont:fontformat=truetype:size=8:antialias=false;0
	font-2 = Font Awesome 5 Free Mono:pixelsize=10;1
	
	
	modules-left = bspwm 
	modules-center = mpd
	modules-right = xbacklight-acpi pulseaudio memory cpu wlan eth battery temperature date powermenu
	
	tray-position = right
	tray-padding = 2
	;tray-background = #0063ff
	
	;wm-restack = bspwm
	;wm-restack = i3
	
	;override-redirect = true
	
	scroll-up = bspwm-desknext
	scroll-down = bspwm-deskprev
	
	;scroll-up = i3wm-wsnext
	;scroll-down = i3wm-wsprev
	
	cursor-click = pointer
	cursor-scroll = ns-resize
	
	[settings]
	screenchange-reload = true
	;compositing-background = xor
	;compositing-background = screen
	;compositing-foreground = source
	;compositing-border = over
	;pseudo-transparency = false
	
	[global/wm]
	margin-top = 5
	margin-bottom = 0
	
	; vim:ft=dosini
	
36a4fe4095a354039751d3a4bf879404|file:///usr/ring/.config/polybar/config|21|1|V|dosini
	bottom = true
4f2c0f0acabab8da5631b9a40d8e3e8c|file:///usr/ring/.config/polybar/config|38|1|^v|dosini
	;   
	;   
	;   
	;   
aa0fd66d27e9aa3ac3366c87eed84d28|file:///usr/ring/.config/polybar/config|39|10|v|dosini
	MaterialIcons
3b54f1d05ca55ae72ce9b91cd10d40cb|file:///usr/ring/.config/polybar/config|47|1|V|dosini
	; Tray icon max size
a36a79385b5e140b6bb9b87001196317|file:///usr/ring/.config/polybar/config|47|1|V|dosini
	tray-maxsize = 16
0d81ca9e4cf10816335995a949816626|file:///usr/ring/.config/polybar/config|46|1|V|dosini
	;tray-detached = false
46f41ce104a7b7c23ed3070de1c439bf|file:///usr/ring/.config/polybar/config|60|1|V|dosini
	
	; Adjust the _NET_WM_STRUT_PARTIAL bottom value
2ea1c9205eecc5075646781eb285ca14|file:///usr/ring/.config/polybar/config|60|1|V|dosini
	;   Used for bottom aligned bars
8e972b0c29fed6b9c102e58a6102a2f6|file:///usr/ring/.config/polybar/config|57|1|V|dosini
	; Adjust the _NET_WM_STRUT_PARTIAL top value
	;   Used for top aligned bars
8f7c6ff324a6847fc96ad64145290dff|file:///usr/ring/.config/polybar/config|39|10|v|dosini
	Material Design Icons
9c4d8d5c89768d801fe5c885e3fe2e73|file:///usr/ring/var/st/config.h|9|28|v|cpp
	 Sans Mono Nerd Font
5fb659572b237f6e258869914aad676b|file:///usr/ring/.config/polybar/config|39|18|v|
	 Design Icons
768ef1a20d21d4ae34dfbda591882583|file:///usr/ring/.config/polybar/config|45|1|^v|
	;
	;
	;
	;
	;
9f305f44fd3445e58bf55bb8ebf82a7f|file:///usr/ring/.config/polybar/config|45|25|v|
	   <---------------------------
	
43e665fd5b5e88289136defef5a4ff2f|file:///usr/ring/.config/polybar/config|38|30|V|
	font-0 = NotoSans-Regular:size=8;2
	font-1 = Material:size=10
	font-2 = Termsynu:size=8;-1
	font-3 = Font Awesome 5 Free Regular:size=10
c738bf1ddf7d33a5107f9ef09135e529|file:///usr/ring/var/st/config.h|12|1|V|cpp
		"SauceCodePro Nerd Font Mono:pixelsize=30:antialias=true",
8297f0d8438315556dc44f79b81c6119|file:///usr/ring/var/st/config.h|12|1|V|cpp
		"Font Awesome 5 Free:pixelsize=30:antialias=true",
f531cedd205a9c33961c3c8ab59bfcfb|file:///usr/ring/var/st/config.h|13|1|V|cpp
		"Matarial:pixelsize=30:antialias=true",
985a772ee0792722ad8d8151f34fffaf|file:///usr/ring/var/st/config.h|12|3|v|cpp
	Matarial
fcab6e03a720a2645b78519376b6b3b3|file:///usr/ring/var/st/config.h|12|3|v|cpp
	Noto
7db5b0827b4a90befe86dad2ec58c728|file:///usr/ring/.config/polybar/config|39|11|v|
	Tamsyn
b29ef6f611982d23b890831920e3fbac|file:///tmp/zshcehwm5|1|1|v|zsh
	sudo 
3a18f83fdc8bedddf36acec014b810e5|file:///usr/share/doc/polybar/config|54|1|V|dosini
	font-0 = fixed:pixelsize=10;1
	font-1 = unifont:fontformat=truetype:size=8:antialias=false;0
	font-2 = siji:pixelsize=10;1
a81d62c7cb8752bab08d7a3c80d47df9|file:///usr/ring/.config/polybar/config|58|10|v|dosini
	Font Awesome 5 Free Mono
f328a6e446645509074cdfd837b40054|file:///usr/ring/.config/polybar/config|56|10|v|dosini
	noto
63d6db9e9845e46a9fc2608802ddafd3|file:///tmp/zshP2MuRh|1|8|v|zsh
	noto-fonts-sc noto-fonts-tc
b8fe299b22b685b06e7cac4a657e2e89|file:///etc/systemd/system/slock%40.service|1|1|V|systemd
	[Unit]
	Description=Lock X session using slock for user %i
	Before=sleep.target
	
	[Service]
	User=%i
	Environment=DISPLAY=:0
	ExecStartPre=/usr/bin/xset dpms force suspend
	ExecStart=/usr/bin/slock
	
	[Install]
	WantedBy=sleep.target
0c785499fd268edd182c54cad10d47d1|file:///tmp/zshADMMUi|1|8|v|zsh
	adobe-source-han-serif-cn-fonts adobe-source-han-sans-cn-fonts 
